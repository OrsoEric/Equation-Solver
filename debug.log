Start Debug!
-->> "int main()" |
	OrangeBot Projects
	-->> "bool test_bench()" |
		-->> "User::Equation_solver::Equation_solver()" | This: 007efe80
		<<-- "User::Equation_solver::Equation_solver()" |
		-->> "bool User::Equation_solver::load(const char*)" | This: 007efe80
			-->> "User::Tree<Payload>::Tree() [with Payload = User::Equation::Token]" | This: 007efdc4
				-->> "bool User::Tree<Payload>::init_class_vars(Payload) [with Payload = User::Equation::Token]" |
				<<-- "bool User::Tree<Payload>::init_class_vars(Payload) [with Payload = User::Equation::Token]" |
			<<-- "User::Tree<Payload>::Tree() [with Payload = User::Equation::Token]" |
			-->> "User::Equation::Equation()" | This: 007efdb4
				-->> "bool User::Equation::init_class_vars()" |
				<<-- "bool User::Equation::init_class_vars()" |
			<<-- "User::Equation::Equation()" |
			-->> "bool User::Equation::parse(std::__cxx11::string)" | Parse: 1=1 | Size: 3
				-->> "static bool User::Equation::equation_to_token_array(std::__cxx11::string, std::vector<std::__cxx11::basic_string<char> >&, std::vector<User::Equation::Token>&)" | Parse: 1=1 | Size: 3
					SEEK_NEXT_TOKEN | Decode: >>1<<
					TOKEN_NUMBER | Decode: >>=<<
					Token fully decoded:  1 | type: 0 | size: 1
					Tokens decoded: 1
					SEEK_NEXT_TOKEN | Decode: >>=<<
					-->> "static bool User::Equation::is_symbol(char)" | Digit: >>=<<
					<<-- "static bool User::Equation::is_symbol(char)" | N
					-->> "static bool User::Equation::is_operator(char)" | Digit: >>=<<
					<<-- "static bool User::Equation::is_operator(char)" | Y
					Operator detected: >>=<< | Token: =
					Token fully decoded:  = | type: 2 | size: 1
					Tokens decoded: 2
					SEEK_NEXT_TOKEN | Decode: >>1<<
					Token fully decoded:  1 | type: 0 | size: 1
					Tokens decoded: 3
					Equations decoded into 3 tokens
					Token: >>1<< | Type: 0 | Size: 1
					Token: >>=<< | Type: 2 | Size: 1
					Token: >>1<< | Type: 0 | Size: 1
				<<-- "static bool User::Equation::equation_to_token_array(std::__cxx11::string, std::vector<std::__cxx11::basic_string<char> >&, std::vector<User::Equation::Token>&)" | Decoded 3 tokens
				-->> "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | Token Array Size: 3 | Father 0
					-->> "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 3
						Token   0 | >1< | Open Close Priority: 0 | Symbol Priority 5 
						Token   1 | >=< | Open Close Priority: 0 | Symbol Priority 0 
						Token   2 | >1< | Open Close Priority: 0 | Symbol Priority 5 
						Candidate   0 | >1< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Default
						Candidate   1 | >=< | Open Close Priority 0 | Symbol Priority 0 | Min Priority 0
						Ignore   2 | >1< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Best Priority 0
						Token   1 | >=< | Highest priority token
					<<-- "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 3 | Highest Priority Token: <=> | 0 0
					Core Token: >=< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 0
					LHS: >1<
					RHS: >1<
					LHS Tokens: 1 | RHS Tokens: 1
					ROOT: >=<
					-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" | Object: 007efdc4, Index: 0
					<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" |
					LHS: >=<
					-->> "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | Token Array Size: 1 | Father 0
						-->> "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1
							Token   0 | >1< | Open Close Priority: 0 | Symbol Priority 5 
							Candidate   0 | >1< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Default
							Token   0 | >1< | Highest priority token
						<<-- "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1 | Highest Priority Token: <1> | 0 5
						Core Token: >1< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 5
						LHS Tokens: 0 | RHS Tokens: 0
						-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" | Object: 007efdc4, Index: 0
						<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" |
						-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
						<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 0 | Own Index: 1 | Nodes under Father: 2
					<<-- "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | PASS
					LHS of size 1 under father 0
					-->> "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | Token Array Size: 1 | Father 0
						-->> "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1
							Token   0 | >1< | Open Close Priority: 0 | Symbol Priority 5 
							Candidate   0 | >1< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Default
							Token   0 | >1< | Highest priority token
						<<-- "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1 | Highest Priority Token: <1> | 0 5
						Core Token: >1< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 5
						LHS Tokens: 0 | RHS Tokens: 0
						-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
						<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 0 | Own Index: 2 | Nodes under Father: 3
					<<-- "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | PASS
					RHS of size 1 under father 0
				<<-- "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | PASS
				-->> "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" | Index: 0
					-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efb04 | Begin: 1 | Index: 0
					<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 0 | Stack size: 1
					-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efb34 | Begin: 0 | Index: 0
					<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 3 | Stack size: 0
					-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
						-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 0
							Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 0 | Depth: 1
							Found children || Index 2 | Own Index: 2 | Father Index: 0 | Own Priority 1 | Children: 0 | Depth: 1
						<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
					<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 1 | Index: 0
					-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efb34 | Begin: 0 | Index: 0
					<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 3 | Stack size: 0
					-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
						-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 1
						<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
					<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 2 | Index: 1
					-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efb34 | Begin: 0 | Index: 0
					<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 3 | Stack size: 0
					-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
						-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 2
						<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
					<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 3 | Index: 2
					-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efb34 | Begin: 0 | Index: 0
					<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 3 | Stack size: 0
				<<-- "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" |
			<<-- "bool User::Equation::parse(std::__cxx11::string)" | Token array size: 3 | Token tree size: 3
		<<-- "bool User::Equation_solver::load(const char*)" |
		-->> "User::Equation::~Equation()" | This: 007efdb4
		<<-- "User::Equation::~Equation()" |
		-->> "User::Tree<Payload>::~Tree() [with Payload = User::Equation::Token]" | This: 007efdc4
		<<-- "User::Tree<Payload>::~Tree() [with Payload = User::Equation::Token]" |
		-->> "bool User::Equation_solver::preprocess_tree()" | This: 007efe80
		<<-- "bool User::Equation_solver::preprocess_tree()" |
		-->> "User::Equation::~Equation()" | This: 0108e5c8
		<<-- "User::Equation::~Equation()" |
		-->> "User::Tree<Payload>::~Tree() [with Payload = User::Equation::Token]" | This: 0108e5d8
		<<-- "User::Tree<Payload>::~Tree() [with Payload = User::Equation::Token]" |
	<<-- "bool test_bench()" |
<<-- "int main()" |

Debug has Ended!
