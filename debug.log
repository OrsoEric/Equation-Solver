Start Debug!
-->> "int main()" |
	OrangeBot Projects
	-->> "bool test_bench()" |
		-->> "int unit_test_parse_token_array()" | in: 0

			-->> "User::Tree<Payload>::Tree() [with Payload = User::Equation_parser::Token]" | This: 007afe20
				-->> "bool User::Tree<Payload>::init_class_vars(Payload) [with Payload = User::Equation_parser::Token]" |
				<<-- "bool User::Tree<Payload>::init_class_vars(Payload) [with Payload = User::Equation_parser::Token]" |
			<<-- "User::Tree<Payload>::Tree() [with Payload = User::Equation_parser::Token]" |
			-->> "User::Equation_parser::Equation_parser()" | This: 007afe10
				-->> "bool User::Equation_parser::init_class_vars()" |
				<<-- "bool User::Equation_parser::init_class_vars()" |
			<<-- "User::Equation_parser::Equation_parser()" |
			Number of test patterns 20
			PATTERN0 ><
			-->> "bool User::Equation_parser::parse(std::__cxx11::string)" | Parse:  | Size: 0
				-->> "static bool User::Equation_parser::equation_to_token_array(std::__cxx11::string, std::vector<std::__cxx11::basic_string<char> >&, std::vector<User::Equation_parser::Token>&)" | Parse:  | Size: 0
				<<-- "static bool User::Equation_parser::equation_to_token_array(std::__cxx11::string, std::vector<std::__cxx11::basic_string<char> >&, std::vector<User::Equation_parser::Token>&)" | ERR:988 | Bad input string
				-->> "bool User::Equation_parser::flush()" |
					-->> "bool User::Tree<Payload>::flush() [with Payload = User::Equation_parser::Token]" | Nodes inside the tree: 1
						-->> "bool User::Tree<Payload>::init_root() [with Payload = User::Equation_parser::Token]" |
						<<-- "bool User::Tree<Payload>::init_root() [with Payload = User::Equation_parser::Token]" |
					<<-- "bool User::Tree<Payload>::flush() [with Payload = User::Equation_parser::Token]" | Nodes inside the tree: 1
				<<-- "bool User::Equation_parser::flush()" |
			<<-- "bool User::Equation_parser::parse(std::__cxx11::string)" | ERR294 | failed to parse an equation into an array of string tokens...

			PASS pattern: 0
			-->> "User::Tree<Payload>::~Tree() [with Payload = User::Equation_parser::Token]" | This: 007afd6c
			<<-- "User::Tree<Payload>::~Tree() [with Payload = User::Equation_parser::Token]" |
			PATTERN1 >1<
			-->> "bool User::Equation_parser::parse(std::__cxx11::string)" | Parse: 1 | Size: 1
				-->> "static bool User::Equation_parser::equation_to_token_array(std::__cxx11::string, std::vector<std::__cxx11::basic_string<char> >&, std::vector<User::Equation_parser::Token>&)" | Parse: 1 | Size: 1
					SEEK_NEXT_TOKEN | Decode: >>1<<
					Token fully decoded:  1 | type: 0 | size: 1
					Tokens decoded: 1
					Equations decoded into 1 tokens
					Token: >>1<< | Type: 0 | Size: 1
				<<-- "static bool User::Equation_parser::equation_to_token_array(std::__cxx11::string, std::vector<std::__cxx11::basic_string<char> >&, std::vector<User::Equation_parser::Token>&)" | Decoded 1 tokens
				-->> "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | Token Array Size: 1 | Father 0
					-->> "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 1
						Token: 1 | Priority: 0
					<<-- "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 1 | Highest Priority Token: <1> | 0 5
					Core Token: >1< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 5
					LHS Tokens: 0 | RHS Tokens: 0
					-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 0
					<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				<<-- "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | ERR:1402 | Root is not equal operator!
				-->> "bool User::Equation_parser::flush()" |
					-->> "bool User::Tree<Payload>::flush() [with Payload = User::Equation_parser::Token]" | Nodes inside the tree: 1
						-->> "bool User::Tree<Payload>::init_root() [with Payload = User::Equation_parser::Token]" |
						<<-- "bool User::Tree<Payload>::init_root() [with Payload = User::Equation_parser::Token]" |
					<<-- "bool User::Tree<Payload>::flush() [with Payload = User::Equation_parser::Token]" | Nodes inside the tree: 1
				<<-- "bool User::Equation_parser::flush()" |
			<<-- "bool User::Equation_parser::parse(std::__cxx11::string)" | ERR:313 | Could not convert from token array to tree...
			PASS pattern: 1
			-->> "User::Tree<Payload>::~Tree() [with Payload = User::Equation_parser::Token]" | This: 007afd6c
			<<-- "User::Tree<Payload>::~Tree() [with Payload = User::Equation_parser::Token]" |
			PATTERN2 >(1<
			-->> "bool User::Equation_parser::parse(std::__cxx11::string)" | Parse: (1 | Size: 2
				-->> "static bool User::Equation_parser::equation_to_token_array(std::__cxx11::string, std::vector<std::__cxx11::basic_string<char> >&, std::vector<User::Equation_parser::Token>&)" | Parse: (1 | Size: 2
					SEEK_NEXT_TOKEN | Decode: >>(<<
					-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >>(<<
					<<-- "static bool User::Equation_parser::is_symbol(char)" | N
					-->> "static bool User::Equation_parser::is_operator(char)" | Digit: >>(<<
					<<-- "static bool User::Equation_parser::is_operator(char)" | N
					Open detected: >>(<< | Token: (
					Token fully decoded:  ( | type: 3 | size: 1
					Tokens decoded: 1
					SEEK_NEXT_TOKEN | Decode: >>1<<
					Token fully decoded:  1 | type: 0 | size: 1
					Tokens decoded: 2
				<<-- "static bool User::Equation_parser::equation_to_token_array(std::__cxx11::string, std::vector<std::__cxx11::basic_string<char> >&, std::vector<User::Equation_parser::Token>&)" | ERR1276 | Unbalanced brackets | Open 1 | Close 0
				-->> "bool User::Equation_parser::flush()" |
					-->> "bool User::Tree<Payload>::flush() [with Payload = User::Equation_parser::Token]" | Nodes inside the tree: 1
						-->> "bool User::Tree<Payload>::init_root() [with Payload = User::Equation_parser::Token]" |
						<<-- "bool User::Tree<Payload>::init_root() [with Payload = User::Equation_parser::Token]" |
					<<-- "bool User::Tree<Payload>::flush() [with Payload = User::Equation_parser::Token]" | Nodes inside the tree: 1
				<<-- "bool User::Equation_parser::flush()" |
			<<-- "bool User::Equation_parser::parse(std::__cxx11::string)" | ERR294 | failed to parse an equation into an array of string tokens...

			PASS pattern: 2
			-->> "User::Tree<Payload>::~Tree() [with Payload = User::Equation_parser::Token]" | This: 007afd6c
			<<-- "User::Tree<Payload>::~Tree() [with Payload = User::Equation_parser::Token]" |
			PATTERN3 >1(<
			-->> "bool User::Equation_parser::parse(std::__cxx11::string)" | Parse: 1( | Size: 2
				-->> "static bool User::Equation_parser::equation_to_token_array(std::__cxx11::string, std::vector<std::__cxx11::basic_string<char> >&, std::vector<User::Equation_parser::Token>&)" | Parse: 1( | Size: 2
					SEEK_NEXT_TOKEN | Decode: >>1<<
					TOKEN_NUMBER | Decode: >>(<<
					Token fully decoded:  1 | type: 0 | size: 1
					Tokens decoded: 1
					SEEK_NEXT_TOKEN | Decode: >>(<<
					-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >>(<<
					<<-- "static bool User::Equation_parser::is_symbol(char)" | N
					-->> "static bool User::Equation_parser::is_operator(char)" | Digit: >>(<<
					<<-- "static bool User::Equation_parser::is_operator(char)" | N
					Open detected: >>(<< | Token: (
					Token fully decoded:  ( | type: 3 | size: 1
					Tokens decoded: 2
					-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >> <<
					<<-- "static bool User::Equation_parser::is_symbol(char)" | N
					-->> "static bool User::Equation_parser::is_operator(char)" | Digit: >> <<
					<<-- "static bool User::Equation_parser::is_operator(char)" | N
					ERR1133: Invalid Digit >> <<
				<<-- "static bool User::Equation_parser::equation_to_token_array(std::__cxx11::string, std::vector<std::__cxx11::basic_string<char> >&, std::vector<User::Equation_parser::Token>&)" | ERR1276 | Unbalanced brackets | Open 1 | Close 0
				-->> "bool User::Equation_parser::flush()" |
					-->> "bool User::Tree<Payload>::flush() [with Payload = User::Equation_parser::Token]" | Nodes inside the tree: 1
						-->> "bool User::Tree<Payload>::init_root() [with Payload = User::Equation_parser::Token]" |
						<<-- "bool User::Tree<Payload>::init_root() [with Payload = User::Equation_parser::Token]" |
					<<-- "bool User::Tree<Payload>::flush() [with Payload = User::Equation_parser::Token]" | Nodes inside the tree: 1
				<<-- "bool User::Equation_parser::flush()" |
			<<-- "bool User::Equation_parser::parse(std::__cxx11::string)" | ERR294 | failed to parse an equation into an array of string tokens...

			PASS pattern: 3
			-->> "User::Tree<Payload>::~Tree() [with Payload = User::Equation_parser::Token]" | This: 007afd6c
			<<-- "User::Tree<Payload>::~Tree() [with Payload = User::Equation_parser::Token]" |
			PATTERN4 >((1)<
			-->> "bool User::Equation_parser::parse(std::__cxx11::string)" | Parse: ((1) | Size: 4
				-->> "static bool User::Equation_parser::equation_to_token_array(std::__cxx11::string, std::vector<std::__cxx11::basic_string<char> >&, std::vector<User::Equation_parser::Token>&)" | Parse: ((1) | Size: 4
					SEEK_NEXT_TOKEN | Decode: >>(<<
					-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >>(<<
					<<-- "static bool User::Equation_parser::is_symbol(char)" | N
					-->> "static bool User::Equation_parser::is_operator(char)" | Digit: >>(<<
					<<-- "static bool User::Equation_parser::is_operator(char)" | N
					Open detected: >>(<< | Token: (
					Token fully decoded:  ( | type: 3 | size: 1
					Tokens decoded: 1
					SEEK_NEXT_TOKEN | Decode: >>(<<
					-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >>(<<
					<<-- "static bool User::Equation_parser::is_symbol(char)" | N
					-->> "static bool User::Equation_parser::is_operator(char)" | Digit: >>(<<
					<<-- "static bool User::Equation_parser::is_operator(char)" | N
					Open detected: >>(<< | Token: (
					Token fully decoded:  ( | type: 3 | size: 1
					Tokens decoded: 2
					SEEK_NEXT_TOKEN | Decode: >>1<<
					TOKEN_NUMBER | Decode: >>)<<
					Token fully decoded:  1 | type: 0 | size: 1
					Tokens decoded: 3
					SEEK_NEXT_TOKEN | Decode: >>)<<
					-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >>)<<
					<<-- "static bool User::Equation_parser::is_symbol(char)" | N
					-->> "static bool User::Equation_parser::is_operator(char)" | Digit: >>)<<
					<<-- "static bool User::Equation_parser::is_operator(char)" | N
					Close detected: >>)<< | Token: )
					Token fully decoded:  ) | type: 4 | size: 1
					Tokens decoded: 4
					-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >> <<
					<<-- "static bool User::Equation_parser::is_symbol(char)" | N
					-->> "static bool User::Equation_parser::is_operator(char)" | Digit: >> <<
					<<-- "static bool User::Equation_parser::is_operator(char)" | N
					ERR1133: Invalid Digit >> <<
				<<-- "static bool User::Equation_parser::equation_to_token_array(std::__cxx11::string, std::vector<std::__cxx11::basic_string<char> >&, std::vector<User::Equation_parser::Token>&)" | ERR1276 | Unbalanced brackets | Open 2 | Close 1
				-->> "bool User::Equation_parser::flush()" |
					-->> "bool User::Tree<Payload>::flush() [with Payload = User::Equation_parser::Token]" | Nodes inside the tree: 1
						-->> "bool User::Tree<Payload>::init_root() [with Payload = User::Equation_parser::Token]" |
						<<-- "bool User::Tree<Payload>::init_root() [with Payload = User::Equation_parser::Token]" |
					<<-- "bool User::Tree<Payload>::flush() [with Payload = User::Equation_parser::Token]" | Nodes inside the tree: 1
				<<-- "bool User::Equation_parser::flush()" |
			<<-- "bool User::Equation_parser::parse(std::__cxx11::string)" | ERR294 | failed to parse an equation into an array of string tokens...

			PASS pattern: 4
			-->> "User::Tree<Payload>::~Tree() [with Payload = User::Equation_parser::Token]" | This: 007afd6c
			<<-- "User::Tree<Payload>::~Tree() [with Payload = User::Equation_parser::Token]" |
			PATTERN5 >1=1=1<
			-->> "bool User::Equation_parser::parse(std::__cxx11::string)" | Parse: 1=1=1 | Size: 5
				-->> "static bool User::Equation_parser::equation_to_token_array(std::__cxx11::string, std::vector<std::__cxx11::basic_string<char> >&, std::vector<User::Equation_parser::Token>&)" | Parse: 1=1=1 | Size: 5
					SEEK_NEXT_TOKEN | Decode: >>1<<
					TOKEN_NUMBER | Decode: >>=<<
					Token fully decoded:  1 | type: 0 | size: 1
					Tokens decoded: 1
					SEEK_NEXT_TOKEN | Decode: >>=<<
					-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >>=<<
					<<-- "static bool User::Equation_parser::is_symbol(char)" | N
					-->> "static bool User::Equation_parser::is_operator(char)" | Digit: >>=<<
					<<-- "static bool User::Equation_parser::is_operator(char)" | Y
					Operator detected: >>=<< | Token: =
					Token fully decoded:  = | type: 2 | size: 1
					Tokens decoded: 2
					SEEK_NEXT_TOKEN | Decode: >>1<<
					TOKEN_NUMBER | Decode: >>=<<
					Token fully decoded:  1 | type: 0 | size: 1
					Tokens decoded: 3
					SEEK_NEXT_TOKEN | Decode: >>=<<
					-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >>=<<
					<<-- "static bool User::Equation_parser::is_symbol(char)" | N
					-->> "static bool User::Equation_parser::is_operator(char)" | Digit: >>=<<
					<<-- "static bool User::Equation_parser::is_operator(char)" | Y
					Operator detected: >>=<< | Token: =
					Token fully decoded:  = | type: 2 | size: 1
					Tokens decoded: 4
					SEEK_NEXT_TOKEN | Decode: >>1<<
					Token fully decoded:  1 | type: 0 | size: 1
					Tokens decoded: 5
					Equations decoded into 5 tokens
					Token: >>1<< | Type: 0 | Size: 1
					Token: >>=<< | Type: 2 | Size: 1
					Token: >>1<< | Type: 0 | Size: 1
					Token: >>=<< | Type: 2 | Size: 1
					Token: >>1<< | Type: 0 | Size: 1
				<<-- "static bool User::Equation_parser::equation_to_token_array(std::__cxx11::string, std::vector<std::__cxx11::basic_string<char> >&, std::vector<User::Equation_parser::Token>&)" | Decoded 5 tokens
				-->> "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | Token Array Size: 5 | Father 0
					-->> "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 5
						Token: 1 | Priority: 0
						Token: = | Priority: 0
						Token: 1 | Priority: 0
						Token: = | Priority: 0
						Token: 1 | Priority: 0
					<<-- "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 5 | Highest Priority Token: <=> | 0 0
					Core Token: >=< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 0
					LHS: >1<
					RHS: >1<
					RHS: >=<
					RHS: >1<
					LHS Tokens: 1 | RHS Tokens: 3
					ROOT: >=<
					-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 0
					<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					LHS: >=<
					-->> "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | Token Array Size: 1 | Father 0
						-->> "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 1
							Token: 1 | Priority: 0
						<<-- "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 1 | Highest Priority Token: <1> | 0 5
						Core Token: >1< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 5
						LHS Tokens: 0 | RHS Tokens: 0
						-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 0
						<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
						-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
						<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 0 | Own Index: 1 | Nodes under Father: 2
					<<-- "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | PASS
					LHS of size 1 under father 0
					-->> "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | Token Array Size: 3 | Father 0
						-->> "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 3
							Token: 1 | Priority: 0
							Token: = | Priority: 0
							Token: 1 | Priority: 0
						<<-- "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 3 | Highest Priority Token: <=> | 0 0
						Core Token: >=< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 0
						LHS: >1<
						RHS: >1<
						LHS Tokens: 1 | RHS Tokens: 1
					<<-- "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | ERR:1385 | Equal not as root of the tree! Father: 0 | Tree size: 2
					RHS of size 3 under father 0
				<<-- "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | FAIL
				-->> "bool User::Equation_parser::flush()" |
					-->> "bool User::Tree<Payload>::flush() [with Payload = User::Equation_parser::Token]" | Nodes inside the tree: 2
						-->> "bool User::Tree<Payload>::init_root() [with Payload = User::Equation_parser::Token]" |
						<<-- "bool User::Tree<Payload>::init_root() [with Payload = User::Equation_parser::Token]" |
					<<-- "bool User::Tree<Payload>::flush() [with Payload = User::Equation_parser::Token]" | Nodes inside the tree: 1
				<<-- "bool User::Equation_parser::flush()" |
			<<-- "bool User::Equation_parser::parse(std::__cxx11::string)" | ERR:313 | Could not convert from token array to tree...
			PASS pattern: 5
			-->> "User::Tree<Payload>::~Tree() [with Payload = User::Equation_parser::Token]" | This: 007afd6c
			<<-- "User::Tree<Payload>::~Tree() [with Payload = User::Equation_parser::Token]" |
			PATTERN6 >1=((((((1))))))<
			-->> "bool User::Equation_parser::parse(std::__cxx11::string)" | Parse: 1=((((((1)))))) | Size: 15
				-->> "static bool User::Equation_parser::equation_to_token_array(std::__cxx11::string, std::vector<std::__cxx11::basic_string<char> >&, std::vector<User::Equation_parser::Token>&)" | Parse: 1=((((((1)))))) | Size: 15
					SEEK_NEXT_TOKEN | Decode: >>1<<
					TOKEN_NUMBER | Decode: >>=<<
					Token fully decoded:  1 | type: 0 | size: 1
					Tokens decoded: 1
					SEEK_NEXT_TOKEN | Decode: >>=<<
					-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >>=<<
					<<-- "static bool User::Equation_parser::is_symbol(char)" | N
					-->> "static bool User::Equation_parser::is_operator(char)" | Digit: >>=<<
					<<-- "static bool User::Equation_parser::is_operator(char)" | Y
					Operator detected: >>=<< | Token: =
					Token fully decoded:  = | type: 2 | size: 1
					Tokens decoded: 2
					SEEK_NEXT_TOKEN | Decode: >>(<<
					-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >>(<<
					<<-- "static bool User::Equation_parser::is_symbol(char)" | N
					-->> "static bool User::Equation_parser::is_operator(char)" | Digit: >>(<<
					<<-- "static bool User::Equation_parser::is_operator(char)" | N
					Open detected: >>(<< | Token: (
					Token fully decoded:  ( | type: 3 | size: 1
					Tokens decoded: 3
					SEEK_NEXT_TOKEN | Decode: >>(<<
					-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >>(<<
					<<-- "static bool User::Equation_parser::is_symbol(char)" | N
					-->> "static bool User::Equation_parser::is_operator(char)" | Digit: >>(<<
					<<-- "static bool User::Equation_parser::is_operator(char)" | N
					Open detected: >>(<< | Token: (
					Token fully decoded:  ( | type: 3 | size: 1
					Tokens decoded: 4
					SEEK_NEXT_TOKEN | Decode: >>(<<
					-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >>(<<
					<<-- "static bool User::Equation_parser::is_symbol(char)" | N
					-->> "static bool User::Equation_parser::is_operator(char)" | Digit: >>(<<
					<<-- "static bool User::Equation_parser::is_operator(char)" | N
					Open detected: >>(<< | Token: (
					Token fully decoded:  ( | type: 3 | size: 1
					Tokens decoded: 5
					SEEK_NEXT_TOKEN | Decode: >>(<<
					-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >>(<<
					<<-- "static bool User::Equation_parser::is_symbol(char)" | N
					-->> "static bool User::Equation_parser::is_operator(char)" | Digit: >>(<<
					<<-- "static bool User::Equation_parser::is_operator(char)" | N
					Open detected: >>(<< | Token: (
					Token fully decoded:  ( | type: 3 | size: 1
					Tokens decoded: 6
					SEEK_NEXT_TOKEN | Decode: >>(<<
					-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >>(<<
					<<-- "static bool User::Equation_parser::is_symbol(char)" | N
					-->> "static bool User::Equation_parser::is_operator(char)" | Digit: >>(<<
					<<-- "static bool User::Equation_parser::is_operator(char)" | N
					Open detected: >>(<< | Token: (
					Token fully decoded:  ( | type: 3 | size: 1
					Tokens decoded: 7
					SEEK_NEXT_TOKEN | Decode: >>(<<
					-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >>(<<
					<<-- "static bool User::Equation_parser::is_symbol(char)" | N
					-->> "static bool User::Equation_parser::is_operator(char)" | Digit: >>(<<
					<<-- "static bool User::Equation_parser::is_operator(char)" | N
					Open detected: >>(<< | Token: (
					Token fully decoded:  ( | type: 3 | size: 1
					Tokens decoded: 8
					SEEK_NEXT_TOKEN | Decode: >>1<<
					TOKEN_NUMBER | Decode: >>)<<
					Token fully decoded:  1 | type: 0 | size: 1
					Tokens decoded: 9
					SEEK_NEXT_TOKEN | Decode: >>)<<
					-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >>)<<
					<<-- "static bool User::Equation_parser::is_symbol(char)" | N
					-->> "static bool User::Equation_parser::is_operator(char)" | Digit: >>)<<
					<<-- "static bool User::Equation_parser::is_operator(char)" | N
					Close detected: >>)<< | Token: )
					Token fully decoded:  ) | type: 4 | size: 1
					Tokens decoded: 10
					SEEK_NEXT_TOKEN | Decode: >>)<<
					-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >>)<<
					<<-- "static bool User::Equation_parser::is_symbol(char)" | N
					-->> "static bool User::Equation_parser::is_operator(char)" | Digit: >>)<<
					<<-- "static bool User::Equation_parser::is_operator(char)" | N
					Close detected: >>)<< | Token: )
					Token fully decoded:  ) | type: 4 | size: 1
					Tokens decoded: 11
					SEEK_NEXT_TOKEN | Decode: >>)<<
					-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >>)<<
					<<-- "static bool User::Equation_parser::is_symbol(char)" | N
					-->> "static bool User::Equation_parser::is_operator(char)" | Digit: >>)<<
					<<-- "static bool User::Equation_parser::is_operator(char)" | N
					Close detected: >>)<< | Token: )
					Token fully decoded:  ) | type: 4 | size: 1
					Tokens decoded: 12
					SEEK_NEXT_TOKEN | Decode: >>)<<
					-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >>)<<
					<<-- "static bool User::Equation_parser::is_symbol(char)" | N
					-->> "static bool User::Equation_parser::is_operator(char)" | Digit: >>)<<
					<<-- "static bool User::Equation_parser::is_operator(char)" | N
					Close detected: >>)<< | Token: )
					Token fully decoded:  ) | type: 4 | size: 1
					Tokens decoded: 13
					SEEK_NEXT_TOKEN | Decode: >>)<<
					-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >>)<<
					<<-- "static bool User::Equation_parser::is_symbol(char)" | N
					-->> "static bool User::Equation_parser::is_operator(char)" | Digit: >>)<<
					<<-- "static bool User::Equation_parser::is_operator(char)" | N
					Close detected: >>)<< | Token: )
					Token fully decoded:  ) | type: 4 | size: 1
					Tokens decoded: 14
					SEEK_NEXT_TOKEN | Decode: >>)<<
					-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >>)<<
					<<-- "static bool User::Equation_parser::is_symbol(char)" | N
					-->> "static bool User::Equation_parser::is_operator(char)" | Digit: >>)<<
					<<-- "static bool User::Equation_parser::is_operator(char)" | N
					Close detected: >>)<< | Token: )
					Token fully decoded:  ) | type: 4 | size: 1
					Tokens decoded: 15
					-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >> <<
					<<-- "static bool User::Equation_parser::is_symbol(char)" | N
					-->> "static bool User::Equation_parser::is_operator(char)" | Digit: >> <<
					<<-- "static bool User::Equation_parser::is_operator(char)" | N
					ERR1133: Invalid Digit >> <<
					Equations decoded into 15 tokens
					Token: >>1<< | Type: 0 | Size: 1
					Token: >>=<< | Type: 2 | Size: 1
					Token: >>(<< | Type: 3 | Size: 1
					Token: >>(<< | Type: 3 | Size: 1
					Token: >>(<< | Type: 3 | Size: 1
					Token: >>(<< | Type: 3 | Size: 1
					Token: >>(<< | Type: 3 | Size: 1
					Token: >>(<< | Type: 3 | Size: 1
					Token: >>1<< | Type: 0 | Size: 1
					Token: >>)<< | Type: 4 | Size: 1
					Token: >>)<< | Type: 4 | Size: 1
					Token: >>)<< | Type: 4 | Size: 1
					Token: >>)<< | Type: 4 | Size: 1
					Token: >>)<< | Type: 4 | Size: 1
					Token: >>)<< | Type: 4 | Size: 1
				<<-- "static bool User::Equation_parser::equation_to_token_array(std::__cxx11::string, std::vector<std::__cxx11::basic_string<char> >&, std::vector<User::Equation_parser::Token>&)" | Decoded 15 tokens
				-->> "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | Token Array Size: 15 | Father 0
					-->> "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 15
						Token: 1 | Priority: 0
						Token: = | Priority: 0
						Open | Priority: 1
						Open | Priority: 2
						Open | Priority: 3
						Open | Priority: 4
						Open | Priority: 5
						Open | Priority: 6
						Token: 1 | Priority: 6
						Close| Priority: 6
						Close| Priority: 5
						Close| Priority: 4
						Close| Priority: 3
						Close| Priority: 2
						Close| Priority: 1
					<<-- "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 15 | Highest Priority Token: <=> | 0 0
					Core Token: >=< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 0
					LHS: >1<
					RHS: >(<
					RHS: >(<
					RHS: >(<
					RHS: >(<
					RHS: >(<
					RHS: >(<
					RHS: >1<
					RHS: >)<
					RHS: >)<
					RHS: >)<
					RHS: >)<
					RHS: >)<
					RHS: >)<
					LHS Tokens: 1 | RHS Tokens: 13
					ROOT: >=<
					-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 0
					<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					LHS: >=<
					-->> "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | Token Array Size: 1 | Father 0
						-->> "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 1
							Token: 1 | Priority: 0
						<<-- "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 1 | Highest Priority Token: <1> | 0 5
						Core Token: >1< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 5
						LHS Tokens: 0 | RHS Tokens: 0
						-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 0
						<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
						-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
						<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 0 | Own Index: 1 | Nodes under Father: 2
					<<-- "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | PASS
					LHS of size 1 under father 0
					-->> "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | Token Array Size: 13 | Father 0
						-->> "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 13
							Open | Priority: 1
							Open | Priority: 2
							Open | Priority: 3
							Open | Priority: 4
							Open | Priority: 5
							Open | Priority: 6
							Token: 1 | Priority: 6
							Close| Priority: 6
							Close| Priority: 5
							Close| Priority: 4
							Close| Priority: 3
							Close| Priority: 2
							Close| Priority: 1
							Delete Open 0 | Priority: 1 | Min Priority: 6 
							Delete Open 0 | Priority: 2 | Min Priority: 6 
							Delete Open 0 | Priority: 3 | Min Priority: 6 
							Delete Open 0 | Priority: 4 | Min Priority: 6 
							Delete Open 0 | Priority: 5 | Min Priority: 6 
							Delete Open 0 | Priority: 6 | Min Priority: 6 
							Delete Close 1 | Priority: 6 | Min Priority: 6 
							Delete Close 1 | Priority: 5 | Min Priority: 6 
							Delete Close 1 | Priority: 4 | Min Priority: 6 
							Delete Close 1 | Priority: 3 | Min Priority: 6 
							Delete Close 1 | Priority: 2 | Min Priority: 6 
							Delete Close 1 | Priority: 1 | Min Priority: 6 
							Deleted redundant priority tokens | Tokens: 1
						<<-- "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 1 | Highest Priority Token: <1> | 0 5
						Core Token: >1< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 5
						LHS Tokens: 0 | RHS Tokens: 0
						-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
						<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 0 | Own Index: 2 | Nodes under Father: 3
					<<-- "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | PASS
					RHS of size 1 under father 0
				<<-- "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | PASS
				-->> "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Index: 0
					-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afaa4 | Begin: 1 | Index: 0
					<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 0 | Stack size: 1
					-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
					<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 3 | Stack size: 0
					-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
						-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 0
							Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 0 | Depth: 1
							Found children || Index 2 | Own Index: 2 | Father Index: 0 | Own Priority 1 | Children: 0 | Depth: 1
						<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
					<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 1 | Index: 0
					-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
					<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 3 | Stack size: 0
					-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
						-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 1
						<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
					<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 2 | Index: 1
					-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
					<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 3 | Stack size: 0
					-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
						-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 2
						<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
					<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 3 | Index: 2
					-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
					<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 3 | Stack size: 0
				<<-- "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "static int User::Equation_parser::aggregate_tree_token_sum_diff(User::Tree<User::Equation_parser::Token>&)" |
					-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 1
					<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 2
					<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				<<-- "static int User::Equation_parser::aggregate_tree_token_sum_diff(User::Tree<User::Equation_parser::Token>&)" | Ereased: 0 | Moved: 0
				-->> "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Index: 0
					-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afaa4 | Begin: 1 | Index: 0
					<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 0 | Stack size: 1
					-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
					<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 3 | Stack size: 0
					-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
						-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 0
							Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 0 | Depth: 1
							Found children || Index 2 | Own Index: 2 | Father Index: 0 | Own Priority 1 | Children: 0 | Depth: 1
						<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
					<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 1 | Index: 0
					-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
					<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 3 | Stack size: 0
					-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
						-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 1
						<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
					<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 2 | Index: 1
					-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
					<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 3 | Stack size: 0
					-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
						-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 2
						<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
					<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 3 | Index: 2
					-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
					<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 3 | Stack size: 0
				<<-- "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
			<<-- "bool User::Equation_parser::parse(std::__cxx11::string)" | Token array size: 15 | Token tree size: 3
			TOKEN0
			TOKEN1
			TOKEN2
			TOKEN3
			TOKEN4
			TOKEN5
			TOKEN6
			TOKEN7
			TOKEN8
			TOKEN9
			TOKEN10
			TOKEN11
			TOKEN12
			TOKEN13
			TOKEN14
			-->> "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Index: 0
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afbf4 | Begin: 1 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 0 | Stack size: 1
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 3 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 0
						Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 0 | Depth: 1
						Found children || Index 2 | Own Index: 2 | Father Index: 0 | Own Priority 1 | Children: 0 | Depth: 1
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 1 | Index: 0
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 3 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 1
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 2 | Index: 1
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 3 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 2
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 3 | Index: 2
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 3 | Stack size: 0
			<<-- "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
			-->> "User::Tree<Payload>::Tree(std::vector<User::Tree<Payload>::St_minimal_node>) [with Payload = User::Equation_parser::Token]" | This: 007afdb8 | Nodes: 3
				-->> "bool User::Tree<Payload>::init_class_vars(Payload) [with Payload = User::Equation_parser::Token]" |
				<<-- "bool User::Tree<Payload>::init_class_vars(Payload) [with Payload = User::Equation_parser::Token]" |
				-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 0 | Own Index: 1 | Nodes under Father: 2
				-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 0 | Own Index: 2 | Nodes under Father: 3
				-->> "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Index: 0
					-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afbf4 | Begin: 1 | Index: 0
					<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 0 | Stack size: 1
					-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
					<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 3 | Stack size: 0
					-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
						-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 0
							Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 0 | Depth: 1
							Found children || Index 2 | Own Index: 2 | Father Index: 0 | Own Priority 1 | Children: 0 | Depth: 1
						<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
					<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 1 | Index: 0
					-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
					<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 3 | Stack size: 0
					-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
						-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 1
						<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
					<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 2 | Index: 1
					-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
					<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 3 | Stack size: 0
					-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
						-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 2
						<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
					<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 3 | Index: 2
					-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
					<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 3 | Stack size: 0
				<<-- "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::operator==(User::Tree<Payload>&) [with Payload = User::Equation_parser::Token]" |
					-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afb6c | Begin: 1 | Index: 0
					<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 0 | Stack size: 1
					-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afb3c | Begin: 1 | Index: 0
					<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 0 | Stack size: 1
					-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afb9c | Begin: 0 | Index: 0
					<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 3 | Stack size: 0
					-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afbcc | Begin: 0 | Index: 0
					<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 3 | Stack size: 0
					-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
						-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 0
							Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 0 | Depth: 1
							Found children || Index 2 | Own Index: 2 | Father Index: 0 | Own Priority 1 | Children: 0 | Depth: 1
						<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
					<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 1 | Index: 0
					-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
						-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 0
							Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 0 | Depth: 1
							Found children || Index 2 | Own Index: 2 | Father Index: 0 | Own Priority 1 | Children: 0 | Depth: 1
						<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
					<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 1 | Index: 0
					-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afb9c | Begin: 0 | Index: 0
					<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 3 | Stack size: 0
					-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afbcc | Begin: 0 | Index: 0
					<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 3 | Stack size: 0
					-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
						-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 1
						<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
					<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 2 | Index: 1
					-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
						-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 1
						<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
					<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 2 | Index: 1
					-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afb9c | Begin: 0 | Index: 0
					<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 3 | Stack size: 0
					-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afbcc | Begin: 0 | Index: 0
					<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 3 | Stack size: 0
					-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
						-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 2
						<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
					<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 3 | Index: 2
					-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
						-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 2
						<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
					<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 3 | Index: 2
					-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afb9c | Begin: 0 | Index: 0
					<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 3 | Stack size: 0
					-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afbcc | Begin: 0 | Index: 0
					<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 3 | Stack size: 0
				<<-- "bool User::Tree<Payload>::operator==(User::Tree<Payload>&) [with Payload = User::Equation_parser::Token]" | Same
				PASS pattern: 6
				-->> "User::Tree<Payload>::~Tree() [with Payload = User::Equation_parser::Token]" | This: 007afdb8
				<<-- "User::Tree<Payload>::~Tree() [with Payload = User::Equation_parser::Token]" |
				-->> "User::Tree<Payload>::~Tree() [with Payload = User::Equation_parser::Token]" | This: 007afd6c
				<<-- "User::Tree<Payload>::~Tree() [with Payload = User::Equation_parser::Token]" |
				PATTERN7 >1=1<
				-->> "bool User::Equation_parser::parse(std::__cxx11::string)" | Parse: 1=1 | Size: 3
					-->> "static bool User::Equation_parser::equation_to_token_array(std::__cxx11::string, std::vector<std::__cxx11::basic_string<char> >&, std::vector<User::Equation_parser::Token>&)" | Parse: 1=1 | Size: 3
						SEEK_NEXT_TOKEN | Decode: >>1<<
						TOKEN_NUMBER | Decode: >>=<<
						Token fully decoded:  1 | type: 0 | size: 1
						Tokens decoded: 1
						SEEK_NEXT_TOKEN | Decode: >>=<<
						-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >>=<<
						<<-- "static bool User::Equation_parser::is_symbol(char)" | N
						-->> "static bool User::Equation_parser::is_operator(char)" | Digit: >>=<<
						<<-- "static bool User::Equation_parser::is_operator(char)" | Y
						Operator detected: >>=<< | Token: =
						Token fully decoded:  = | type: 2 | size: 1
						Tokens decoded: 2
						SEEK_NEXT_TOKEN | Decode: >>1<<
						Token fully decoded:  1 | type: 0 | size: 1
						Tokens decoded: 3
						Equations decoded into 3 tokens
						Token: >>1<< | Type: 0 | Size: 1
						Token: >>=<< | Type: 2 | Size: 1
						Token: >>1<< | Type: 0 | Size: 1
					<<-- "static bool User::Equation_parser::equation_to_token_array(std::__cxx11::string, std::vector<std::__cxx11::basic_string<char> >&, std::vector<User::Equation_parser::Token>&)" | Decoded 3 tokens
					Tree wasn't empty: 3 | FLUSH
					-->> "bool User::Tree<Payload>::flush() [with Payload = User::Equation_parser::Token]" | Nodes inside the tree: 3
						-->> "bool User::Tree<Payload>::init_root() [with Payload = User::Equation_parser::Token]" |
						<<-- "bool User::Tree<Payload>::init_root() [with Payload = User::Equation_parser::Token]" |
					<<-- "bool User::Tree<Payload>::flush() [with Payload = User::Equation_parser::Token]" | Nodes inside the tree: 1
					-->> "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | Token Array Size: 3 | Father 0
						-->> "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 3
							Token: 1 | Priority: 0
							Token: = | Priority: 0
							Token: 1 | Priority: 0
						<<-- "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 3 | Highest Priority Token: <=> | 0 0
						Core Token: >=< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 0
						LHS: >1<
						RHS: >1<
						LHS Tokens: 1 | RHS Tokens: 1
						ROOT: >=<
						-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 0
						<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
						LHS: >=<
						-->> "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | Token Array Size: 1 | Father 0
							-->> "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 1
								Token: 1 | Priority: 0
							<<-- "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 1 | Highest Priority Token: <1> | 0 5
							Core Token: >1< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 5
							LHS Tokens: 0 | RHS Tokens: 0
							-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 0
							<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
							-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
							<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 0 | Own Index: 1 | Nodes under Father: 2
						<<-- "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | PASS
						LHS of size 1 under father 0
						-->> "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | Token Array Size: 1 | Father 0
							-->> "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 1
								Token: 1 | Priority: 0
							<<-- "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 1 | Highest Priority Token: <1> | 0 5
							Core Token: >1< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 5
							LHS Tokens: 0 | RHS Tokens: 0
							-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
							<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 0 | Own Index: 2 | Nodes under Father: 3
						<<-- "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | PASS
						RHS of size 1 under father 0
					<<-- "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | PASS
					-->> "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Index: 0
						-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afaa4 | Begin: 1 | Index: 0
						<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 0 | Stack size: 1
						-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
						<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 3 | Stack size: 0
						-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
							-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 0
								Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 0 | Depth: 1
								Found children || Index 2 | Own Index: 2 | Father Index: 0 | Own Priority 1 | Children: 0 | Depth: 1
							<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
						<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 1 | Index: 0
						-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
						<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 3 | Stack size: 0
						-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
							-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 1
							<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
						<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 2 | Index: 1
						-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
						<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 3 | Stack size: 0
						-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
							-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 2
							<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
						<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 3 | Index: 2
						-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
						<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 3 | Stack size: 0
					<<-- "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "static int User::Equation_parser::aggregate_tree_token_sum_diff(User::Tree<User::Equation_parser::Token>&)" |
						-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 1
						<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
						-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 2
						<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					<<-- "static int User::Equation_parser::aggregate_tree_token_sum_diff(User::Tree<User::Equation_parser::Token>&)" | Ereased: 0 | Moved: 0
					-->> "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Index: 0
						-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afaa4 | Begin: 1 | Index: 0
						<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 0 | Stack size: 1
						-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
						<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 3 | Stack size: 0
						-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
							-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 0
								Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 0 | Depth: 1
								Found children || Index 2 | Own Index: 2 | Father Index: 0 | Own Priority 1 | Children: 0 | Depth: 1
							<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
						<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 1 | Index: 0
						-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
						<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 3 | Stack size: 0
						-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
							-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 1
							<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
						<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 2 | Index: 1
						-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
						<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 3 | Stack size: 0
						-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
							-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 2
							<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
						<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 3 | Index: 2
						-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
						<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 3 | Stack size: 0
					<<-- "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				<<-- "bool User::Equation_parser::parse(std::__cxx11::string)" | Token array size: 3 | Token tree size: 3
				TOKEN0
				TOKEN1
				TOKEN2
				-->> "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Index: 0
					-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afbf4 | Begin: 1 | Index: 0
					<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 0 | Stack size: 1
					-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
					<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 3 | Stack size: 0
					-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
						-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 0
							Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 0 | Depth: 1
							Found children || Index 2 | Own Index: 2 | Father Index: 0 | Own Priority 1 | Children: 0 | Depth: 1
						<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
					<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 1 | Index: 0
					-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
					<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 3 | Stack size: 0
					-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
						-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 1
						<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
					<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 2 | Index: 1
					-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
					<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 3 | Stack size: 0
					-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
						-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 2
						<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
					<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 3 | Index: 2
					-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
					<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 3 | Stack size: 0
				<<-- "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "User::Tree<Payload>::Tree(std::vector<User::Tree<Payload>::St_minimal_node>) [with Payload = User::Equation_parser::Token]" | This: 007afdb8 | Nodes: 3
					-->> "bool User::Tree<Payload>::init_class_vars(Payload) [with Payload = User::Equation_parser::Token]" |
					<<-- "bool User::Tree<Payload>::init_class_vars(Payload) [with Payload = User::Equation_parser::Token]" |
					-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 0 | Own Index: 1 | Nodes under Father: 2
					-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 0 | Own Index: 2 | Nodes under Father: 3
					-->> "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Index: 0
						-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afbf4 | Begin: 1 | Index: 0
						<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 0 | Stack size: 1
						-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
						<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 3 | Stack size: 0
						-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
							-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 0
								Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 0 | Depth: 1
								Found children || Index 2 | Own Index: 2 | Father Index: 0 | Own Priority 1 | Children: 0 | Depth: 1
							<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
						<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 1 | Index: 0
						-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
						<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 3 | Stack size: 0
						-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
							-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 1
							<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
						<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 2 | Index: 1
						-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
						<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 3 | Stack size: 0
						-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
							-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 2
							<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
						<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 3 | Index: 2
						-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
						<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 3 | Stack size: 0
					<<-- "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::operator==(User::Tree<Payload>&) [with Payload = User::Equation_parser::Token]" |
						-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afb6c | Begin: 1 | Index: 0
						<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 0 | Stack size: 1
						-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afb3c | Begin: 1 | Index: 0
						<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 0 | Stack size: 1
						-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afb9c | Begin: 0 | Index: 0
						<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 3 | Stack size: 0
						-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afbcc | Begin: 0 | Index: 0
						<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 3 | Stack size: 0
						-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
							-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 0
								Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 0 | Depth: 1
								Found children || Index 2 | Own Index: 2 | Father Index: 0 | Own Priority 1 | Children: 0 | Depth: 1
							<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
						<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 1 | Index: 0
						-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
							-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 0
								Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 0 | Depth: 1
								Found children || Index 2 | Own Index: 2 | Father Index: 0 | Own Priority 1 | Children: 0 | Depth: 1
							<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
						<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 1 | Index: 0
						-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afb9c | Begin: 0 | Index: 0
						<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 3 | Stack size: 0
						-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afbcc | Begin: 0 | Index: 0
						<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 3 | Stack size: 0
						-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
							-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 1
							<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
						<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 2 | Index: 1
						-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
							-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 1
							<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
						<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 2 | Index: 1
						-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afb9c | Begin: 0 | Index: 0
						<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 3 | Stack size: 0
						-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afbcc | Begin: 0 | Index: 0
						<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 3 | Stack size: 0
						-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
							-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 2
							<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
						<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 3 | Index: 2
						-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
							-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 2
							<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
						<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 3 | Index: 2
						-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afb9c | Begin: 0 | Index: 0
						<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 3 | Stack size: 0
						-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afbcc | Begin: 0 | Index: 0
						<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 3 | Stack size: 0
					<<-- "bool User::Tree<Payload>::operator==(User::Tree<Payload>&) [with Payload = User::Equation_parser::Token]" | Same
					PASS pattern: 7
					-->> "User::Tree<Payload>::~Tree() [with Payload = User::Equation_parser::Token]" | This: 007afdb8
					<<-- "User::Tree<Payload>::~Tree() [with Payload = User::Equation_parser::Token]" |
					-->> "User::Tree<Payload>::~Tree() [with Payload = User::Equation_parser::Token]" | This: 007afd6c
					<<-- "User::Tree<Payload>::~Tree() [with Payload = User::Equation_parser::Token]" |
					PATTERN8 >3/2=1.5000000000<
					-->> "bool User::Equation_parser::parse(std::__cxx11::string)" | Parse: 3/2=1.5000000000 | Size: 16
						-->> "static bool User::Equation_parser::equation_to_token_array(std::__cxx11::string, std::vector<std::__cxx11::basic_string<char> >&, std::vector<User::Equation_parser::Token>&)" | Parse: 3/2=1.5000000000 | Size: 16
							SEEK_NEXT_TOKEN | Decode: >>3<<
							TOKEN_NUMBER | Decode: >>/<<
							Token fully decoded:  3 | type: 0 | size: 1
							Tokens decoded: 1
							SEEK_NEXT_TOKEN | Decode: >>/<<
							-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >>/<<
							<<-- "static bool User::Equation_parser::is_symbol(char)" | N
							-->> "static bool User::Equation_parser::is_operator(char)" | Digit: >>/<<
							<<-- "static bool User::Equation_parser::is_operator(char)" | Y
							Operator detected: >>/<< | Token: /
							Token fully decoded:  / | type: 2 | size: 1
							Tokens decoded: 2
							SEEK_NEXT_TOKEN | Decode: >>2<<
							TOKEN_NUMBER | Decode: >>=<<
							Token fully decoded:  2 | type: 0 | size: 1
							Tokens decoded: 3
							SEEK_NEXT_TOKEN | Decode: >>=<<
							-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >>=<<
							<<-- "static bool User::Equation_parser::is_symbol(char)" | N
							-->> "static bool User::Equation_parser::is_operator(char)" | Digit: >>=<<
							<<-- "static bool User::Equation_parser::is_operator(char)" | Y
							Operator detected: >>=<< | Token: =
							Token fully decoded:  = | type: 2 | size: 1
							Tokens decoded: 4
							SEEK_NEXT_TOKEN | Decode: >>1<<
							TOKEN_NUMBER | Decode: >>.<<
							TOKEN_NUMBER | Decode: >>5<<
							TOKEN_NUMBER | Decode: >>0<<
							TOKEN_NUMBER | Decode: >>0<<
							TOKEN_NUMBER | Decode: >>0<<
							TOKEN_NUMBER | Decode: >>0<<
							TOKEN_NUMBER | Decode: >>0<<
							TOKEN_NUMBER | Decode: >>0<<
							TOKEN_NUMBER | Decode: >>0<<
							TOKEN_NUMBER | Decode: >>0<<
							TOKEN_NUMBER | Decode: >>0<<
							Token fully decoded:  1.5000000000 | type: 0 | size: 12
							Tokens decoded: 5
							Equations decoded into 5 tokens
							Token: >>3<< | Type: 0 | Size: 1
							Token: >>/<< | Type: 2 | Size: 1
							Token: >>2<< | Type: 0 | Size: 1
							Token: >>=<< | Type: 2 | Size: 1
							Token: >>1.5000000000<< | Type: 0 | Size: 12
						<<-- "static bool User::Equation_parser::equation_to_token_array(std::__cxx11::string, std::vector<std::__cxx11::basic_string<char> >&, std::vector<User::Equation_parser::Token>&)" | Decoded 5 tokens
						Tree wasn't empty: 3 | FLUSH
						-->> "bool User::Tree<Payload>::flush() [with Payload = User::Equation_parser::Token]" | Nodes inside the tree: 3
							-->> "bool User::Tree<Payload>::init_root() [with Payload = User::Equation_parser::Token]" |
							<<-- "bool User::Tree<Payload>::init_root() [with Payload = User::Equation_parser::Token]" |
						<<-- "bool User::Tree<Payload>::flush() [with Payload = User::Equation_parser::Token]" | Nodes inside the tree: 1
						-->> "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | Token Array Size: 5 | Father 0
							-->> "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 5
								Token: 3 | Priority: 0
								Token: / | Priority: 0
								Token: 2 | Priority: 0
								Token: = | Priority: 0
								Token: 1.5000000000 | Priority: 0
							<<-- "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 5 | Highest Priority Token: <=> | 0 0
							Core Token: >=< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 0
							LHS: >3<
							LHS: >/<
							LHS: >2<
							RHS: >1.5000000000<
							LHS Tokens: 3 | RHS Tokens: 1
							ROOT: >=<
							-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 0
							<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
							LHS: >=<
							-->> "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | Token Array Size: 3 | Father 0
								-->> "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 3
									Token: 3 | Priority: 0
									Token: / | Priority: 0
									Token: 2 | Priority: 0
								<<-- "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 3 | Highest Priority Token: </> | 0 2
								Core Token: >/< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 2
								LHS: >3<
								RHS: >2<
								LHS Tokens: 1 | RHS Tokens: 1
								-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 0
								<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
								-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
								<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 0 | Own Index: 1 | Nodes under Father: 2
								-->> "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | Token Array Size: 1 | Father 1
									-->> "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 1
										Token: 3 | Priority: 0
									<<-- "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 1 | Highest Priority Token: <3> | 0 5
									Core Token: >3< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 5
									LHS Tokens: 0 | RHS Tokens: 0
									-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
									<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 1 | Own Index: 2 | Nodes under Father: 2
								<<-- "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | PASS
								LHS of size 1 under father 1
								-->> "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | Token Array Size: 1 | Father 1
									-->> "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 1
										Token: 2 | Priority: 0
									<<-- "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 1 | Highest Priority Token: <2> | 0 5
									Core Token: >2< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 5
									LHS Tokens: 0 | RHS Tokens: 0
									-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
									<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 1 | Own Index: 3 | Nodes under Father: 3
								<<-- "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | PASS
								RHS of size 1 under father 1
							<<-- "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | PASS
							LHS of size 3 under father 0
							-->> "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | Token Array Size: 1 | Father 0
								-->> "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 1
									Token: 1.5000000000 | Priority: 0
								<<-- "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 1 | Highest Priority Token: <1.5000000000> | 0 5
								Core Token: >1.5000000000< | Size: 12 | Open/Close Priority: 0 | Symbol Priority: 5
								LHS Tokens: 0 | RHS Tokens: 0
								-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
								<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 0 | Own Index: 4 | Nodes under Father: 3
							<<-- "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | PASS
							RHS of size 1 under father 0
						<<-- "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | PASS
						-->> "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Index: 0
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afaa4 | Begin: 1 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 0 | Stack size: 1
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
							-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
								-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 0
									Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 2 | Depth: 1
									Found children || Index 4 | Own Index: 4 | Father Index: 0 | Own Priority 1 | Children: 0 | Depth: 1
								<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
							<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 1 | Index: 0
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
							-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
								-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 1
									Found children || Index 2 | Own Index: 2 | Father Index: 1 | Own Priority 0 | Children: 0 | Depth: 2
									Found children || Index 3 | Own Index: 3 | Father Index: 1 | Own Priority 1 | Children: 0 | Depth: 2
								<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
							<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 2 | Index: 1
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
							-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
								-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 2
								<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
							<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 3 | Index: 2
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
							-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
								-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 3
								<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
							<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 4 | Index: 3
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
							-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
								-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 4
								<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
							<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 5 | Index: 4
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
						<<-- "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
						-->> "static int User::Equation_parser::aggregate_tree_token_sum_diff(User::Tree<User::Equation_parser::Token>&)" |
							-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 1
							<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
							-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 2
							<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
							-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 3
							<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
							-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 4
							<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
						<<-- "static int User::Equation_parser::aggregate_tree_token_sum_diff(User::Tree<User::Equation_parser::Token>&)" | Ereased: 0 | Moved: 0
						-->> "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Index: 0
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afaa4 | Begin: 1 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 0 | Stack size: 1
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
							-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
								-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 0
									Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 2 | Depth: 1
									Found children || Index 4 | Own Index: 4 | Father Index: 0 | Own Priority 1 | Children: 0 | Depth: 1
								<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
							<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 1 | Index: 0
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
							-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
								-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 1
									Found children || Index 2 | Own Index: 2 | Father Index: 1 | Own Priority 0 | Children: 0 | Depth: 2
									Found children || Index 3 | Own Index: 3 | Father Index: 1 | Own Priority 1 | Children: 0 | Depth: 2
								<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
							<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 2 | Index: 1
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
							-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
								-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 2
								<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
							<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 3 | Index: 2
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
							-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
								-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 3
								<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
							<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 4 | Index: 3
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
							-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
								-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 4
								<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
							<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 5 | Index: 4
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
						<<-- "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					<<-- "bool User::Equation_parser::parse(std::__cxx11::string)" | Token array size: 5 | Token tree size: 5
					TOKEN0
					TOKEN1
					TOKEN2
					TOKEN3
					TOKEN4
					-->> "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Index: 0
						-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afbf4 | Begin: 1 | Index: 0
						<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 0 | Stack size: 1
						-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
						<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
						-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
							-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 0
								Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 2 | Depth: 1
								Found children || Index 4 | Own Index: 4 | Father Index: 0 | Own Priority 1 | Children: 0 | Depth: 1
							<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
						<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 1 | Index: 0
						-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
						<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
						-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
							-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 1
								Found children || Index 2 | Own Index: 2 | Father Index: 1 | Own Priority 0 | Children: 0 | Depth: 2
								Found children || Index 3 | Own Index: 3 | Father Index: 1 | Own Priority 1 | Children: 0 | Depth: 2
							<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
						<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 2 | Index: 1
						-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
						<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
						-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
							-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 2
							<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
						<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 3 | Index: 2
						-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
						<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
						-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
							-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 3
							<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
						<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 4 | Index: 3
						-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
						<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
						-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
							-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 4
							<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
						<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 5 | Index: 4
						-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
						<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
					<<-- "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "User::Tree<Payload>::Tree(std::vector<User::Tree<Payload>::St_minimal_node>) [with Payload = User::Equation_parser::Token]" | This: 007afdb8 | Nodes: 5
						-->> "bool User::Tree<Payload>::init_class_vars(Payload) [with Payload = User::Equation_parser::Token]" |
						<<-- "bool User::Tree<Payload>::init_class_vars(Payload) [with Payload = User::Equation_parser::Token]" |
						-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
						<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 0 | Own Index: 1 | Nodes under Father: 2
						-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
						<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 0 | Own Index: 2 | Nodes under Father: 3
						-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
						<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 1 | Own Index: 3 | Nodes under Father: 2
						-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
						<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 1 | Own Index: 4 | Nodes under Father: 3
						-->> "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Index: 0
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afbf4 | Begin: 1 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 0 | Stack size: 1
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
							-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
								-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 0
									Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 2 | Depth: 1
									Found children || Index 2 | Own Index: 2 | Father Index: 0 | Own Priority 1 | Children: 0 | Depth: 1
								<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
							<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 1 | Index: 0
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
							-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
								-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 1
									Found children || Index 3 | Own Index: 3 | Father Index: 1 | Own Priority 0 | Children: 0 | Depth: 2
									Found children || Index 4 | Own Index: 4 | Father Index: 1 | Own Priority 1 | Children: 0 | Depth: 2
								<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
							<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 2 | Index: 1
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
							-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
								-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 3
								<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
							<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 3 | Index: 3
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
							-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
								-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 4
								<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
							<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 4 | Index: 4
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
							-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
								-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 2
								<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
							<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 5 | Index: 2
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
						<<-- "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
						-->> "bool User::Tree<Payload>::operator==(User::Tree<Payload>&) [with Payload = User::Equation_parser::Token]" |
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afb6c | Begin: 1 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 0 | Stack size: 1
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afb3c | Begin: 1 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 0 | Stack size: 1
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afb9c | Begin: 0 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afbcc | Begin: 0 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
							-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
								-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 0
									Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 2 | Depth: 1
									Found children || Index 4 | Own Index: 4 | Father Index: 0 | Own Priority 1 | Children: 0 | Depth: 1
								<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
							<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 1 | Index: 0
							-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
								-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 0
									Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 2 | Depth: 1
									Found children || Index 2 | Own Index: 2 | Father Index: 0 | Own Priority 1 | Children: 0 | Depth: 1
								<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
							<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 1 | Index: 0
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afb9c | Begin: 0 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afbcc | Begin: 0 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
							-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
								-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 1
									Found children || Index 2 | Own Index: 2 | Father Index: 1 | Own Priority 0 | Children: 0 | Depth: 2
									Found children || Index 3 | Own Index: 3 | Father Index: 1 | Own Priority 1 | Children: 0 | Depth: 2
								<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
							<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 2 | Index: 1
							-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
								-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 1
									Found children || Index 3 | Own Index: 3 | Father Index: 1 | Own Priority 0 | Children: 0 | Depth: 2
									Found children || Index 4 | Own Index: 4 | Father Index: 1 | Own Priority 1 | Children: 0 | Depth: 2
								<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
							<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 2 | Index: 1
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afb9c | Begin: 0 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afbcc | Begin: 0 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
							-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
								-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 2
								<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
							<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 3 | Index: 2
							-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
								-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 3
								<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
							<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 3 | Index: 3
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afb9c | Begin: 0 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afbcc | Begin: 0 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
							-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
								-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 3
								<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
							<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 4 | Index: 3
							-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
								-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 4
								<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
							<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 4 | Index: 4
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afb9c | Begin: 0 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afbcc | Begin: 0 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
							-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
								-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 4
								<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
							<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 5 | Index: 4
							-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
								-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 2
								<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
							<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 5 | Index: 2
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afb9c | Begin: 0 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afbcc | Begin: 0 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
						<<-- "bool User::Tree<Payload>::operator==(User::Tree<Payload>&) [with Payload = User::Equation_parser::Token]" | Same
						PASS pattern: 8
						-->> "User::Tree<Payload>::~Tree() [with Payload = User::Equation_parser::Token]" | This: 007afdb8
						<<-- "User::Tree<Payload>::~Tree() [with Payload = User::Equation_parser::Token]" |
						-->> "User::Tree<Payload>::~Tree() [with Payload = User::Equation_parser::Token]" | This: 007afd6c
						<<-- "User::Tree<Payload>::~Tree() [with Payload = User::Equation_parser::Token]" |
						PATTERN9 >5=2+3<
						-->> "bool User::Equation_parser::parse(std::__cxx11::string)" | Parse: 5=2+3 | Size: 5
							-->> "static bool User::Equation_parser::equation_to_token_array(std::__cxx11::string, std::vector<std::__cxx11::basic_string<char> >&, std::vector<User::Equation_parser::Token>&)" | Parse: 5=2+3 | Size: 5
								SEEK_NEXT_TOKEN | Decode: >>5<<
								TOKEN_NUMBER | Decode: >>=<<
								Token fully decoded:  5 | type: 0 | size: 1
								Tokens decoded: 1
								SEEK_NEXT_TOKEN | Decode: >>=<<
								-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >>=<<
								<<-- "static bool User::Equation_parser::is_symbol(char)" | N
								-->> "static bool User::Equation_parser::is_operator(char)" | Digit: >>=<<
								<<-- "static bool User::Equation_parser::is_operator(char)" | Y
								Operator detected: >>=<< | Token: =
								Token fully decoded:  = | type: 2 | size: 1
								Tokens decoded: 2
								SEEK_NEXT_TOKEN | Decode: >>2<<
								TOKEN_NUMBER | Decode: >>+<<
								Token fully decoded:  2 | type: 0 | size: 1
								Tokens decoded: 3
								SEEK_NEXT_TOKEN | Decode: >>+<<
								-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >>+<<
								<<-- "static bool User::Equation_parser::is_symbol(char)" | N
								-->> "static bool User::Equation_parser::is_operator(char)" | Digit: >>+<<
								<<-- "static bool User::Equation_parser::is_operator(char)" | Y
								Operator detected: >>+<< | Token: +
								Token fully decoded:  + | type: 2 | size: 1
								Tokens decoded: 4
								SEEK_NEXT_TOKEN | Decode: >>3<<
								Token fully decoded:  3 | type: 0 | size: 1
								Tokens decoded: 5
								Equations decoded into 5 tokens
								Token: >>5<< | Type: 0 | Size: 1
								Token: >>=<< | Type: 2 | Size: 1
								Token: >>2<< | Type: 0 | Size: 1
								Token: >>+<< | Type: 2 | Size: 1
								Token: >>3<< | Type: 0 | Size: 1
							<<-- "static bool User::Equation_parser::equation_to_token_array(std::__cxx11::string, std::vector<std::__cxx11::basic_string<char> >&, std::vector<User::Equation_parser::Token>&)" | Decoded 5 tokens
							Tree wasn't empty: 5 | FLUSH
							-->> "bool User::Tree<Payload>::flush() [with Payload = User::Equation_parser::Token]" | Nodes inside the tree: 5
								-->> "bool User::Tree<Payload>::init_root() [with Payload = User::Equation_parser::Token]" |
								<<-- "bool User::Tree<Payload>::init_root() [with Payload = User::Equation_parser::Token]" |
							<<-- "bool User::Tree<Payload>::flush() [with Payload = User::Equation_parser::Token]" | Nodes inside the tree: 1
							-->> "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | Token Array Size: 5 | Father 0
								-->> "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 5
									Token: 5 | Priority: 0
									Token: = | Priority: 0
									Token: 2 | Priority: 0
									Token: + | Priority: 0
									Token: 3 | Priority: 0
								<<-- "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 5 | Highest Priority Token: <=> | 0 0
								Core Token: >=< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 0
								LHS: >5<
								RHS: >2<
								RHS: >+<
								RHS: >3<
								LHS Tokens: 1 | RHS Tokens: 3
								ROOT: >=<
								-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 0
								<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
								LHS: >=<
								-->> "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | Token Array Size: 1 | Father 0
									-->> "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 1
										Token: 5 | Priority: 0
									<<-- "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 1 | Highest Priority Token: <5> | 0 5
									Core Token: >5< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 5
									LHS Tokens: 0 | RHS Tokens: 0
									-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 0
									<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
									-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
									<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 0 | Own Index: 1 | Nodes under Father: 2
								<<-- "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | PASS
								LHS of size 1 under father 0
								-->> "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | Token Array Size: 3 | Father 0
									-->> "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 3
										Token: 2 | Priority: 0
										Token: + | Priority: 0
										Token: 3 | Priority: 0
									<<-- "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 3 | Highest Priority Token: <+> | 0 3
									Core Token: >+< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 3
									LHS: >2<
									RHS: >3<
									LHS Tokens: 1 | RHS Tokens: 1
									-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
									<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 0 | Own Index: 2 | Nodes under Father: 3
									-->> "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | Token Array Size: 1 | Father 2
										-->> "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 1
											Token: 2 | Priority: 0
										<<-- "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 1 | Highest Priority Token: <2> | 0 5
										Core Token: >2< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 5
										LHS Tokens: 0 | RHS Tokens: 0
										-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
										<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 2 | Own Index: 3 | Nodes under Father: 2
									<<-- "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | PASS
									LHS of size 1 under father 2
									-->> "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | Token Array Size: 1 | Father 2
										-->> "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 1
											Token: 3 | Priority: 0
										<<-- "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 1 | Highest Priority Token: <3> | 0 5
										Core Token: >3< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 5
										LHS Tokens: 0 | RHS Tokens: 0
										-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
										<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 2 | Own Index: 4 | Nodes under Father: 3
									<<-- "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | PASS
									RHS of size 1 under father 2
								<<-- "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | PASS
								RHS of size 3 under father 0
							<<-- "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | PASS
							-->> "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Index: 0
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afaa4 | Begin: 1 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 0 | Stack size: 1
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 0
										Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 0 | Depth: 1
										Found children || Index 2 | Own Index: 2 | Father Index: 0 | Own Priority 1 | Children: 2 | Depth: 1
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 1 | Index: 0
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 1
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 2 | Index: 1
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 2
										Found children || Index 3 | Own Index: 3 | Father Index: 2 | Own Priority 0 | Children: 0 | Depth: 2
										Found children || Index 4 | Own Index: 4 | Father Index: 2 | Own Priority 1 | Children: 0 | Depth: 2
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 3 | Index: 2
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 3
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 4 | Index: 3
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 4
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 5 | Index: 4
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
							<<-- "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
							-->> "static int User::Equation_parser::aggregate_tree_token_sum_diff(User::Tree<User::Equation_parser::Token>&)" |
								-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 1
								<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
								-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 2
								<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
								-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 0
								<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
								-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 3
								<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
								-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 4
								<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
							<<-- "static int User::Equation_parser::aggregate_tree_token_sum_diff(User::Tree<User::Equation_parser::Token>&)" | Ereased: 0 | Moved: 0
							-->> "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Index: 0
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afaa4 | Begin: 1 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 0 | Stack size: 1
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 0
										Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 0 | Depth: 1
										Found children || Index 2 | Own Index: 2 | Father Index: 0 | Own Priority 1 | Children: 2 | Depth: 1
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 1 | Index: 0
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 1
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 2 | Index: 1
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 2
										Found children || Index 3 | Own Index: 3 | Father Index: 2 | Own Priority 0 | Children: 0 | Depth: 2
										Found children || Index 4 | Own Index: 4 | Father Index: 2 | Own Priority 1 | Children: 0 | Depth: 2
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 3 | Index: 2
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 3
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 4 | Index: 3
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 4
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 5 | Index: 4
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
							<<-- "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
						<<-- "bool User::Equation_parser::parse(std::__cxx11::string)" | Token array size: 5 | Token tree size: 5
						TOKEN0
						TOKEN1
						TOKEN2
						TOKEN3
						TOKEN4
						-->> "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Index: 0
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afbf4 | Begin: 1 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 0 | Stack size: 1
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
							-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
								-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 0
									Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 0 | Depth: 1
									Found children || Index 2 | Own Index: 2 | Father Index: 0 | Own Priority 1 | Children: 2 | Depth: 1
								<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
							<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 1 | Index: 0
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
							-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
								-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 1
								<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
							<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 2 | Index: 1
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
							-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
								-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 2
									Found children || Index 3 | Own Index: 3 | Father Index: 2 | Own Priority 0 | Children: 0 | Depth: 2
									Found children || Index 4 | Own Index: 4 | Father Index: 2 | Own Priority 1 | Children: 0 | Depth: 2
								<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
							<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 3 | Index: 2
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
							-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
								-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 3
								<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
							<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 4 | Index: 3
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
							-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
								-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 4
								<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
							<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 5 | Index: 4
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
						<<-- "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
						-->> "User::Tree<Payload>::Tree(std::vector<User::Tree<Payload>::St_minimal_node>) [with Payload = User::Equation_parser::Token]" | This: 007afdb8 | Nodes: 5
							-->> "bool User::Tree<Payload>::init_class_vars(Payload) [with Payload = User::Equation_parser::Token]" |
							<<-- "bool User::Tree<Payload>::init_class_vars(Payload) [with Payload = User::Equation_parser::Token]" |
							-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
							<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 0 | Own Index: 1 | Nodes under Father: 2
							-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
							<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 0 | Own Index: 2 | Nodes under Father: 3
							-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
							<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 2 | Own Index: 3 | Nodes under Father: 2
							-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
							<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 2 | Own Index: 4 | Nodes under Father: 3
							-->> "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Index: 0
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afbf4 | Begin: 1 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 0 | Stack size: 1
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 0
										Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 0 | Depth: 1
										Found children || Index 2 | Own Index: 2 | Father Index: 0 | Own Priority 1 | Children: 2 | Depth: 1
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 1 | Index: 0
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 1
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 2 | Index: 1
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 2
										Found children || Index 3 | Own Index: 3 | Father Index: 2 | Own Priority 0 | Children: 0 | Depth: 2
										Found children || Index 4 | Own Index: 4 | Father Index: 2 | Own Priority 1 | Children: 0 | Depth: 2
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 3 | Index: 2
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 3
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 4 | Index: 3
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 4
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 5 | Index: 4
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
							<<-- "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
							-->> "bool User::Tree<Payload>::operator==(User::Tree<Payload>&) [with Payload = User::Equation_parser::Token]" |
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afb6c | Begin: 1 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 0 | Stack size: 1
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afb3c | Begin: 1 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 0 | Stack size: 1
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afb9c | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afbcc | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 0
										Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 0 | Depth: 1
										Found children || Index 2 | Own Index: 2 | Father Index: 0 | Own Priority 1 | Children: 2 | Depth: 1
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 1 | Index: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 0
										Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 0 | Depth: 1
										Found children || Index 2 | Own Index: 2 | Father Index: 0 | Own Priority 1 | Children: 2 | Depth: 1
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 1 | Index: 0
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afb9c | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afbcc | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 1
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 2 | Index: 1
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 1
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 2 | Index: 1
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afb9c | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afbcc | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 2
										Found children || Index 3 | Own Index: 3 | Father Index: 2 | Own Priority 0 | Children: 0 | Depth: 2
										Found children || Index 4 | Own Index: 4 | Father Index: 2 | Own Priority 1 | Children: 0 | Depth: 2
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 3 | Index: 2
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 2
										Found children || Index 3 | Own Index: 3 | Father Index: 2 | Own Priority 0 | Children: 0 | Depth: 2
										Found children || Index 4 | Own Index: 4 | Father Index: 2 | Own Priority 1 | Children: 0 | Depth: 2
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 3 | Index: 2
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afb9c | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afbcc | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 3
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 4 | Index: 3
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 3
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 4 | Index: 3
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afb9c | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afbcc | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 4
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 5 | Index: 4
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 4
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 5 | Index: 4
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afb9c | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afbcc | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
							<<-- "bool User::Tree<Payload>::operator==(User::Tree<Payload>&) [with Payload = User::Equation_parser::Token]" | Same
							PASS pattern: 9
							-->> "User::Tree<Payload>::~Tree() [with Payload = User::Equation_parser::Token]" | This: 007afdb8
							<<-- "User::Tree<Payload>::~Tree() [with Payload = User::Equation_parser::Token]" |
							-->> "User::Tree<Payload>::~Tree() [with Payload = User::Equation_parser::Token]" | This: 007afd6c
							<<-- "User::Tree<Payload>::~Tree() [with Payload = User::Equation_parser::Token]" |
							PATTERN10 >1+4=2+3<
							-->> "bool User::Equation_parser::parse(std::__cxx11::string)" | Parse: 1+4=2+3 | Size: 7
								-->> "static bool User::Equation_parser::equation_to_token_array(std::__cxx11::string, std::vector<std::__cxx11::basic_string<char> >&, std::vector<User::Equation_parser::Token>&)" | Parse: 1+4=2+3 | Size: 7
									SEEK_NEXT_TOKEN | Decode: >>1<<
									TOKEN_NUMBER | Decode: >>+<<
									Token fully decoded:  1 | type: 0 | size: 1
									Tokens decoded: 1
									SEEK_NEXT_TOKEN | Decode: >>+<<
									-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >>+<<
									<<-- "static bool User::Equation_parser::is_symbol(char)" | N
									-->> "static bool User::Equation_parser::is_operator(char)" | Digit: >>+<<
									<<-- "static bool User::Equation_parser::is_operator(char)" | Y
									Operator detected: >>+<< | Token: +
									Token fully decoded:  + | type: 2 | size: 1
									Tokens decoded: 2
									SEEK_NEXT_TOKEN | Decode: >>4<<
									TOKEN_NUMBER | Decode: >>=<<
									Token fully decoded:  4 | type: 0 | size: 1
									Tokens decoded: 3
									SEEK_NEXT_TOKEN | Decode: >>=<<
									-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >>=<<
									<<-- "static bool User::Equation_parser::is_symbol(char)" | N
									-->> "static bool User::Equation_parser::is_operator(char)" | Digit: >>=<<
									<<-- "static bool User::Equation_parser::is_operator(char)" | Y
									Operator detected: >>=<< | Token: =
									Token fully decoded:  = | type: 2 | size: 1
									Tokens decoded: 4
									SEEK_NEXT_TOKEN | Decode: >>2<<
									TOKEN_NUMBER | Decode: >>+<<
									Token fully decoded:  2 | type: 0 | size: 1
									Tokens decoded: 5
									SEEK_NEXT_TOKEN | Decode: >>+<<
									-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >>+<<
									<<-- "static bool User::Equation_parser::is_symbol(char)" | N
									-->> "static bool User::Equation_parser::is_operator(char)" | Digit: >>+<<
									<<-- "static bool User::Equation_parser::is_operator(char)" | Y
									Operator detected: >>+<< | Token: +
									Token fully decoded:  + | type: 2 | size: 1
									Tokens decoded: 6
									SEEK_NEXT_TOKEN | Decode: >>3<<
									Token fully decoded:  3 | type: 0 | size: 1
									Tokens decoded: 7
									Equations decoded into 7 tokens
									Token: >>1<< | Type: 0 | Size: 1
									Token: >>+<< | Type: 2 | Size: 1
									Token: >>4<< | Type: 0 | Size: 1
									Token: >>=<< | Type: 2 | Size: 1
									Token: >>2<< | Type: 0 | Size: 1
									Token: >>+<< | Type: 2 | Size: 1
									Token: >>3<< | Type: 0 | Size: 1
								<<-- "static bool User::Equation_parser::equation_to_token_array(std::__cxx11::string, std::vector<std::__cxx11::basic_string<char> >&, std::vector<User::Equation_parser::Token>&)" | Decoded 7 tokens
								Tree wasn't empty: 5 | FLUSH
								-->> "bool User::Tree<Payload>::flush() [with Payload = User::Equation_parser::Token]" | Nodes inside the tree: 5
									-->> "bool User::Tree<Payload>::init_root() [with Payload = User::Equation_parser::Token]" |
									<<-- "bool User::Tree<Payload>::init_root() [with Payload = User::Equation_parser::Token]" |
								<<-- "bool User::Tree<Payload>::flush() [with Payload = User::Equation_parser::Token]" | Nodes inside the tree: 1
								-->> "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | Token Array Size: 7 | Father 0
									-->> "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 7
										Token: 1 | Priority: 0
										Token: + | Priority: 0
										Token: 4 | Priority: 0
										Token: = | Priority: 0
										Token: 2 | Priority: 0
										Token: + | Priority: 0
										Token: 3 | Priority: 0
									<<-- "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 7 | Highest Priority Token: <=> | 0 0
									Core Token: >=< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 0
									LHS: >1<
									LHS: >+<
									LHS: >4<
									RHS: >2<
									RHS: >+<
									RHS: >3<
									LHS Tokens: 3 | RHS Tokens: 3
									ROOT: >=<
									-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 0
									<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
									LHS: >=<
									-->> "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | Token Array Size: 3 | Father 0
										-->> "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 3
											Token: 1 | Priority: 0
											Token: + | Priority: 0
											Token: 4 | Priority: 0
										<<-- "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 3 | Highest Priority Token: <+> | 0 3
										Core Token: >+< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 3
										LHS: >1<
										RHS: >4<
										LHS Tokens: 1 | RHS Tokens: 1
										-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 0
										<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
										-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
										<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 0 | Own Index: 1 | Nodes under Father: 2
										-->> "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | Token Array Size: 1 | Father 1
											-->> "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 1
												Token: 1 | Priority: 0
											<<-- "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 1 | Highest Priority Token: <1> | 0 5
											Core Token: >1< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 5
											LHS Tokens: 0 | RHS Tokens: 0
											-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
											<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 1 | Own Index: 2 | Nodes under Father: 2
										<<-- "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | PASS
										LHS of size 1 under father 1
										-->> "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | Token Array Size: 1 | Father 1
											-->> "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 1
												Token: 4 | Priority: 0
											<<-- "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 1 | Highest Priority Token: <4> | 0 5
											Core Token: >4< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 5
											LHS Tokens: 0 | RHS Tokens: 0
											-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
											<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 1 | Own Index: 3 | Nodes under Father: 3
										<<-- "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | PASS
										RHS of size 1 under father 1
									<<-- "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | PASS
									LHS of size 3 under father 0
									-->> "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | Token Array Size: 3 | Father 0
										-->> "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 3
											Token: 2 | Priority: 0
											Token: + | Priority: 0
											Token: 3 | Priority: 0
										<<-- "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 3 | Highest Priority Token: <+> | 0 3
										Core Token: >+< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 3
										LHS: >2<
										RHS: >3<
										LHS Tokens: 1 | RHS Tokens: 1
										-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
										<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 0 | Own Index: 4 | Nodes under Father: 3
										-->> "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | Token Array Size: 1 | Father 4
											-->> "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 1
												Token: 2 | Priority: 0
											<<-- "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 1 | Highest Priority Token: <2> | 0 5
											Core Token: >2< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 5
											LHS Tokens: 0 | RHS Tokens: 0
											-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
											<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 4 | Own Index: 5 | Nodes under Father: 2
										<<-- "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | PASS
										LHS of size 1 under father 4
										-->> "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | Token Array Size: 1 | Father 4
											-->> "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 1
												Token: 3 | Priority: 0
											<<-- "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 1 | Highest Priority Token: <3> | 0 5
											Core Token: >3< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 5
											LHS Tokens: 0 | RHS Tokens: 0
											-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
											<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 4 | Own Index: 6 | Nodes under Father: 3
										<<-- "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | PASS
										RHS of size 1 under father 4
									<<-- "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | PASS
									RHS of size 3 under father 0
								<<-- "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | PASS
								-->> "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Index: 0
									-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afaa4 | Begin: 1 | Index: 0
									<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 0 | Stack size: 1
									-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
									<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 7 | Stack size: 0
									-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
										-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 0
											Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 2 | Depth: 1
											Found children || Index 4 | Own Index: 4 | Father Index: 0 | Own Priority 1 | Children: 2 | Depth: 1
										<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
									<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 1 | Index: 0
									-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
									<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 7 | Stack size: 0
									-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
										-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 1
											Found children || Index 2 | Own Index: 2 | Father Index: 1 | Own Priority 0 | Children: 0 | Depth: 2
											Found children || Index 3 | Own Index: 3 | Father Index: 1 | Own Priority 1 | Children: 0 | Depth: 2
										<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
									<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 2 | Index: 1
									-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
									<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 7 | Stack size: 0
									-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
										-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 2
										<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
									<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 3 | Index: 2
									-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
									<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 7 | Stack size: 0
									-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
										-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 3
										<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
									<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 4 | Index: 3
									-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
									<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 7 | Stack size: 0
									-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
										-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 4
											Found children || Index 5 | Own Index: 5 | Father Index: 4 | Own Priority 0 | Children: 0 | Depth: 2
											Found children || Index 6 | Own Index: 6 | Father Index: 4 | Own Priority 1 | Children: 0 | Depth: 2
										<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
									<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 5 | Index: 4
									-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
									<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 7 | Stack size: 0
									-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
										-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 5
										<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
									<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 6 | Index: 5
									-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
									<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 7 | Stack size: 0
									-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
										-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 6
										<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
									<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 7 | Index: 6
									-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
									<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 7 | Stack size: 0
								<<-- "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
								-->> "static int User::Equation_parser::aggregate_tree_token_sum_diff(User::Tree<User::Equation_parser::Token>&)" |
									-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 1
									<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
									-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 0
									<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
									-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 2
									<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
									-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 3
									<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
									-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 4
									<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
									-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 0
									<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
									-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 5
									<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
									-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 6
									<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
								<<-- "static int User::Equation_parser::aggregate_tree_token_sum_diff(User::Tree<User::Equation_parser::Token>&)" | Ereased: 0 | Moved: 0
								-->> "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Index: 0
									-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afaa4 | Begin: 1 | Index: 0
									<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 0 | Stack size: 1
									-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
									<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 7 | Stack size: 0
									-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
										-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 0
											Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 2 | Depth: 1
											Found children || Index 4 | Own Index: 4 | Father Index: 0 | Own Priority 1 | Children: 2 | Depth: 1
										<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
									<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 1 | Index: 0
									-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
									<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 7 | Stack size: 0
									-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
										-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 1
											Found children || Index 2 | Own Index: 2 | Father Index: 1 | Own Priority 0 | Children: 0 | Depth: 2
											Found children || Index 3 | Own Index: 3 | Father Index: 1 | Own Priority 1 | Children: 0 | Depth: 2
										<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
									<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 2 | Index: 1
									-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
									<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 7 | Stack size: 0
									-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
										-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 2
										<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
									<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 3 | Index: 2
									-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
									<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 7 | Stack size: 0
									-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
										-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 3
										<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
									<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 4 | Index: 3
									-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
									<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 7 | Stack size: 0
									-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
										-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 4
											Found children || Index 5 | Own Index: 5 | Father Index: 4 | Own Priority 0 | Children: 0 | Depth: 2
											Found children || Index 6 | Own Index: 6 | Father Index: 4 | Own Priority 1 | Children: 0 | Depth: 2
										<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
									<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 5 | Index: 4
									-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
									<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 7 | Stack size: 0
									-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
										-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 5
										<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
									<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 6 | Index: 5
									-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
									<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 7 | Stack size: 0
									-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
										-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 6
										<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
									<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 7 | Index: 6
									-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
									<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 7 | Stack size: 0
								<<-- "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
							<<-- "bool User::Equation_parser::parse(std::__cxx11::string)" | Token array size: 7 | Token tree size: 7
							TOKEN0
							TOKEN1
							TOKEN2
							TOKEN3
							TOKEN4
							TOKEN5
							TOKEN6
							-->> "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Index: 0
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afbf4 | Begin: 1 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 0 | Stack size: 1
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 7 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 0
										Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 2 | Depth: 1
										Found children || Index 4 | Own Index: 4 | Father Index: 0 | Own Priority 1 | Children: 2 | Depth: 1
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 1 | Index: 0
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 7 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 1
										Found children || Index 2 | Own Index: 2 | Father Index: 1 | Own Priority 0 | Children: 0 | Depth: 2
										Found children || Index 3 | Own Index: 3 | Father Index: 1 | Own Priority 1 | Children: 0 | Depth: 2
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 2 | Index: 1
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 7 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 2
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 3 | Index: 2
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 7 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 3
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 4 | Index: 3
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 7 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 4
										Found children || Index 5 | Own Index: 5 | Father Index: 4 | Own Priority 0 | Children: 0 | Depth: 2
										Found children || Index 6 | Own Index: 6 | Father Index: 4 | Own Priority 1 | Children: 0 | Depth: 2
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 5 | Index: 4
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 7 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 5
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 6 | Index: 5
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 7 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 6
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 7 | Index: 6
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 7 | Stack size: 0
							<<-- "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
							-->> "User::Tree<Payload>::Tree(std::vector<User::Tree<Payload>::St_minimal_node>) [with Payload = User::Equation_parser::Token]" | This: 007afdb8 | Nodes: 7
								-->> "bool User::Tree<Payload>::init_class_vars(Payload) [with Payload = User::Equation_parser::Token]" |
								<<-- "bool User::Tree<Payload>::init_class_vars(Payload) [with Payload = User::Equation_parser::Token]" |
								-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
								<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 0 | Own Index: 1 | Nodes under Father: 2
								-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
								<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 0 | Own Index: 2 | Nodes under Father: 3
								-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
								<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 1 | Own Index: 3 | Nodes under Father: 2
								-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
								<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 1 | Own Index: 4 | Nodes under Father: 3
								-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
								<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 2 | Own Index: 5 | Nodes under Father: 2
								-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
								<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 2 | Own Index: 6 | Nodes under Father: 3
								-->> "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Index: 0
									-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afbf4 | Begin: 1 | Index: 0
									<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 0 | Stack size: 1
									-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
									<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 7 | Stack size: 0
									-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
										-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 0
											Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 2 | Depth: 1
											Found children || Index 2 | Own Index: 2 | Father Index: 0 | Own Priority 1 | Children: 2 | Depth: 1
										<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
									<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 1 | Index: 0
									-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
									<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 7 | Stack size: 0
									-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
										-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 1
											Found children || Index 3 | Own Index: 3 | Father Index: 1 | Own Priority 0 | Children: 0 | Depth: 2
											Found children || Index 4 | Own Index: 4 | Father Index: 1 | Own Priority 1 | Children: 0 | Depth: 2
										<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
									<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 2 | Index: 1
									-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
									<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 7 | Stack size: 0
									-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
										-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 3
										<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
									<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 3 | Index: 3
									-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
									<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 7 | Stack size: 0
									-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
										-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 4
										<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
									<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 4 | Index: 4
									-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
									<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 7 | Stack size: 0
									-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
										-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 2
											Found children || Index 5 | Own Index: 5 | Father Index: 2 | Own Priority 0 | Children: 0 | Depth: 2
											Found children || Index 6 | Own Index: 6 | Father Index: 2 | Own Priority 1 | Children: 0 | Depth: 2
										<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
									<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 5 | Index: 2
									-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
									<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 7 | Stack size: 0
									-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
										-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 5
										<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
									<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 6 | Index: 5
									-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
									<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 7 | Stack size: 0
									-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
										-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 6
										<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
									<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 7 | Index: 6
									-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
									<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 7 | Stack size: 0
								<<-- "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
								-->> "bool User::Tree<Payload>::operator==(User::Tree<Payload>&) [with Payload = User::Equation_parser::Token]" |
									-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afb6c | Begin: 1 | Index: 0
									<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 0 | Stack size: 1
									-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afb3c | Begin: 1 | Index: 0
									<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 0 | Stack size: 1
									-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afb9c | Begin: 0 | Index: 0
									<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 7 | Stack size: 0
									-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afbcc | Begin: 0 | Index: 0
									<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 7 | Stack size: 0
									-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
										-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 0
											Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 2 | Depth: 1
											Found children || Index 4 | Own Index: 4 | Father Index: 0 | Own Priority 1 | Children: 2 | Depth: 1
										<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
									<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 1 | Index: 0
									-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
										-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 0
											Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 2 | Depth: 1
											Found children || Index 2 | Own Index: 2 | Father Index: 0 | Own Priority 1 | Children: 2 | Depth: 1
										<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
									<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 1 | Index: 0
									-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afb9c | Begin: 0 | Index: 0
									<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 7 | Stack size: 0
									-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afbcc | Begin: 0 | Index: 0
									<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 7 | Stack size: 0
									-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
										-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 1
											Found children || Index 2 | Own Index: 2 | Father Index: 1 | Own Priority 0 | Children: 0 | Depth: 2
											Found children || Index 3 | Own Index: 3 | Father Index: 1 | Own Priority 1 | Children: 0 | Depth: 2
										<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
									<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 2 | Index: 1
									-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
										-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 1
											Found children || Index 3 | Own Index: 3 | Father Index: 1 | Own Priority 0 | Children: 0 | Depth: 2
											Found children || Index 4 | Own Index: 4 | Father Index: 1 | Own Priority 1 | Children: 0 | Depth: 2
										<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
									<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 2 | Index: 1
									-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afb9c | Begin: 0 | Index: 0
									<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 7 | Stack size: 0
									-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afbcc | Begin: 0 | Index: 0
									<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 7 | Stack size: 0
									-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
										-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 2
										<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
									<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 3 | Index: 2
									-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
										-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 3
										<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
									<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 3 | Index: 3
									-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afb9c | Begin: 0 | Index: 0
									<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 7 | Stack size: 0
									-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afbcc | Begin: 0 | Index: 0
									<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 7 | Stack size: 0
									-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
										-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 3
										<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
									<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 4 | Index: 3
									-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
										-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 4
										<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
									<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 4 | Index: 4
									-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afb9c | Begin: 0 | Index: 0
									<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 7 | Stack size: 0
									-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afbcc | Begin: 0 | Index: 0
									<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 7 | Stack size: 0
									-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
										-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 4
											Found children || Index 5 | Own Index: 5 | Father Index: 4 | Own Priority 0 | Children: 0 | Depth: 2
											Found children || Index 6 | Own Index: 6 | Father Index: 4 | Own Priority 1 | Children: 0 | Depth: 2
										<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
									<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 5 | Index: 4
									-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
										-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 2
											Found children || Index 5 | Own Index: 5 | Father Index: 2 | Own Priority 0 | Children: 0 | Depth: 2
											Found children || Index 6 | Own Index: 6 | Father Index: 2 | Own Priority 1 | Children: 0 | Depth: 2
										<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
									<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 5 | Index: 2
									-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afb9c | Begin: 0 | Index: 0
									<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 7 | Stack size: 0
									-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afbcc | Begin: 0 | Index: 0
									<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 7 | Stack size: 0
									-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
										-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 5
										<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
									<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 6 | Index: 5
									-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
										-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 5
										<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
									<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 6 | Index: 5
									-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afb9c | Begin: 0 | Index: 0
									<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 7 | Stack size: 0
									-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afbcc | Begin: 0 | Index: 0
									<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 7 | Stack size: 0
									-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
										-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 6
										<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
									<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 7 | Index: 6
									-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
										-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 6
										<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
									<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 7 | Index: 6
									-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afb9c | Begin: 0 | Index: 0
									<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 7 | Stack size: 0
									-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afbcc | Begin: 0 | Index: 0
									<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 7 | Stack size: 0
								<<-- "bool User::Tree<Payload>::operator==(User::Tree<Payload>&) [with Payload = User::Equation_parser::Token]" | Same
								PASS pattern: 10
								-->> "User::Tree<Payload>::~Tree() [with Payload = User::Equation_parser::Token]" | This: 007afdb8
								<<-- "User::Tree<Payload>::~Tree() [with Payload = User::Equation_parser::Token]" |
								-->> "User::Tree<Payload>::~Tree() [with Payload = User::Equation_parser::Token]" | This: 007afd6c
								<<-- "User::Tree<Payload>::~Tree() [with Payload = User::Equation_parser::Token]" |
								PATTERN11 >X=1<
								-->> "bool User::Equation_parser::parse(std::__cxx11::string)" | Parse: X=1 | Size: 3
									-->> "static bool User::Equation_parser::equation_to_token_array(std::__cxx11::string, std::vector<std::__cxx11::basic_string<char> >&, std::vector<User::Equation_parser::Token>&)" | Parse: X=1 | Size: 3
										SEEK_NEXT_TOKEN | Decode: >>X<<
										-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >>X<<
										<<-- "static bool User::Equation_parser::is_symbol(char)" | Y
										TOKEN_SYMBOL | Decode: >>=<<
										-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >>=<<
										<<-- "static bool User::Equation_parser::is_symbol(char)" | N
										Token fully decoded:  X | type: 1 | size: 1
										Tokens decoded: 1
										SEEK_NEXT_TOKEN | Decode: >>=<<
										-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >>=<<
										<<-- "static bool User::Equation_parser::is_symbol(char)" | N
										-->> "static bool User::Equation_parser::is_operator(char)" | Digit: >>=<<
										<<-- "static bool User::Equation_parser::is_operator(char)" | Y
										Operator detected: >>=<< | Token: =
										Token fully decoded:  = | type: 2 | size: 1
										Tokens decoded: 2
										SEEK_NEXT_TOKEN | Decode: >>1<<
										Token fully decoded:  1 | type: 0 | size: 1
										Tokens decoded: 3
										Equations decoded into 3 tokens
										Token: >>X<< | Type: 1 | Size: 1
										Token: >>=<< | Type: 2 | Size: 1
										Token: >>1<< | Type: 0 | Size: 1
									<<-- "static bool User::Equation_parser::equation_to_token_array(std::__cxx11::string, std::vector<std::__cxx11::basic_string<char> >&, std::vector<User::Equation_parser::Token>&)" | Decoded 3 tokens
									Tree wasn't empty: 7 | FLUSH
									-->> "bool User::Tree<Payload>::flush() [with Payload = User::Equation_parser::Token]" | Nodes inside the tree: 7
										-->> "bool User::Tree<Payload>::init_root() [with Payload = User::Equation_parser::Token]" |
										<<-- "bool User::Tree<Payload>::init_root() [with Payload = User::Equation_parser::Token]" |
									<<-- "bool User::Tree<Payload>::flush() [with Payload = User::Equation_parser::Token]" | Nodes inside the tree: 1
									-->> "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | Token Array Size: 3 | Father 0
										-->> "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 3
											Token: X | Priority: 0
											Token: = | Priority: 0
											Token: 1 | Priority: 0
										<<-- "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 3 | Highest Priority Token: <=> | 0 0
										Core Token: >=< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 0
										LHS: >X<
										RHS: >1<
										LHS Tokens: 1 | RHS Tokens: 1
										ROOT: >=<
										-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 0
										<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
										LHS: >=<
										-->> "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | Token Array Size: 1 | Father 0
											-->> "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 1
												Token: X | Priority: 0
											<<-- "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 1 | Highest Priority Token: <X> | 0 4
											Core Token: >X< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 4
											LHS Tokens: 0 | RHS Tokens: 0
											-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 0
											<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
											-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
											<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 0 | Own Index: 1 | Nodes under Father: 2
										<<-- "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | PASS
										LHS of size 1 under father 0
										-->> "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | Token Array Size: 1 | Father 0
											-->> "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 1
												Token: 1 | Priority: 0
											<<-- "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 1 | Highest Priority Token: <1> | 0 5
											Core Token: >1< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 5
											LHS Tokens: 0 | RHS Tokens: 0
											-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
											<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 0 | Own Index: 2 | Nodes under Father: 3
										<<-- "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | PASS
										RHS of size 1 under father 0
									<<-- "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | PASS
									-->> "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Index: 0
										-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afaa4 | Begin: 1 | Index: 0
										<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 0 | Stack size: 1
										-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
										<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 3 | Stack size: 0
										-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
											-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 0
												Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 0 | Depth: 1
												Found children || Index 2 | Own Index: 2 | Father Index: 0 | Own Priority 1 | Children: 0 | Depth: 1
											<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
										<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 1 | Index: 0
										-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
										<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 3 | Stack size: 0
										-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
											-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 1
											<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
										<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 2 | Index: 1
										-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
										<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 3 | Stack size: 0
										-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
											-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 2
											<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
										<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 3 | Index: 2
										-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
										<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 3 | Stack size: 0
									<<-- "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
									-->> "static int User::Equation_parser::aggregate_tree_token_sum_diff(User::Tree<User::Equation_parser::Token>&)" |
										-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 1
										<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
										-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 2
										<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
									<<-- "static int User::Equation_parser::aggregate_tree_token_sum_diff(User::Tree<User::Equation_parser::Token>&)" | Ereased: 0 | Moved: 0
									-->> "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Index: 0
										-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afaa4 | Begin: 1 | Index: 0
										<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 0 | Stack size: 1
										-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
										<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 3 | Stack size: 0
										-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
											-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 0
												Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 0 | Depth: 1
												Found children || Index 2 | Own Index: 2 | Father Index: 0 | Own Priority 1 | Children: 0 | Depth: 1
											<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
										<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 1 | Index: 0
										-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
										<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 3 | Stack size: 0
										-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
											-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 1
											<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
										<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 2 | Index: 1
										-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
										<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 3 | Stack size: 0
										-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
											-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 2
											<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
										<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 3 | Index: 2
										-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
										<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 3 | Stack size: 0
									<<-- "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
								<<-- "bool User::Equation_parser::parse(std::__cxx11::string)" | Token array size: 3 | Token tree size: 3
								TOKEN0
								TOKEN1
								TOKEN2
								-->> "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Index: 0
									-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afbf4 | Begin: 1 | Index: 0
									<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 0 | Stack size: 1
									-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
									<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 3 | Stack size: 0
									-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
										-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 0
											Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 0 | Depth: 1
											Found children || Index 2 | Own Index: 2 | Father Index: 0 | Own Priority 1 | Children: 0 | Depth: 1
										<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
									<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 1 | Index: 0
									-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
									<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 3 | Stack size: 0
									-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
										-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 1
										<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
									<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 2 | Index: 1
									-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
									<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 3 | Stack size: 0
									-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
										-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 2
										<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
									<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 3 | Index: 2
									-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
									<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 3 | Stack size: 0
								<<-- "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
								-->> "User::Tree<Payload>::Tree(std::vector<User::Tree<Payload>::St_minimal_node>) [with Payload = User::Equation_parser::Token]" | This: 007afdb8 | Nodes: 3
									-->> "bool User::Tree<Payload>::init_class_vars(Payload) [with Payload = User::Equation_parser::Token]" |
									<<-- "bool User::Tree<Payload>::init_class_vars(Payload) [with Payload = User::Equation_parser::Token]" |
									-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
									<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 0 | Own Index: 1 | Nodes under Father: 2
									-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
									<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 0 | Own Index: 2 | Nodes under Father: 3
									-->> "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Index: 0
										-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afbf4 | Begin: 1 | Index: 0
										<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 0 | Stack size: 1
										-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
										<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 3 | Stack size: 0
										-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
											-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 0
												Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 0 | Depth: 1
												Found children || Index 2 | Own Index: 2 | Father Index: 0 | Own Priority 1 | Children: 0 | Depth: 1
											<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
										<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 1 | Index: 0
										-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
										<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 3 | Stack size: 0
										-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
											-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 1
											<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
										<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 2 | Index: 1
										-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
										<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 3 | Stack size: 0
										-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
											-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 2
											<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
										<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 3 | Index: 2
										-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
										<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 3 | Stack size: 0
									<<-- "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::operator==(User::Tree<Payload>&) [with Payload = User::Equation_parser::Token]" |
										-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afb6c | Begin: 1 | Index: 0
										<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 0 | Stack size: 1
										-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afb3c | Begin: 1 | Index: 0
										<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 0 | Stack size: 1
										-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afb9c | Begin: 0 | Index: 0
										<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 3 | Stack size: 0
										-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afbcc | Begin: 0 | Index: 0
										<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 3 | Stack size: 0
										-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
											-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 0
												Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 0 | Depth: 1
												Found children || Index 2 | Own Index: 2 | Father Index: 0 | Own Priority 1 | Children: 0 | Depth: 1
											<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
										<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 1 | Index: 0
										-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
											-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 0
												Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 0 | Depth: 1
												Found children || Index 2 | Own Index: 2 | Father Index: 0 | Own Priority 1 | Children: 0 | Depth: 1
											<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
										<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 1 | Index: 0
										-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afb9c | Begin: 0 | Index: 0
										<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 3 | Stack size: 0
										-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afbcc | Begin: 0 | Index: 0
										<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 3 | Stack size: 0
										-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
											-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 1
											<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
										<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 2 | Index: 1
										-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
											-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 1
											<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
										<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 2 | Index: 1
										-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afb9c | Begin: 0 | Index: 0
										<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 3 | Stack size: 0
										-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afbcc | Begin: 0 | Index: 0
										<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 3 | Stack size: 0
										-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
											-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 2
											<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
										<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 3 | Index: 2
										-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
											-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 2
											<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
										<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 3 | Index: 2
										-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afb9c | Begin: 0 | Index: 0
										<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 3 | Stack size: 0
										-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afbcc | Begin: 0 | Index: 0
										<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 3 | Stack size: 0
									<<-- "bool User::Tree<Payload>::operator==(User::Tree<Payload>&) [with Payload = User::Equation_parser::Token]" | Same
									PASS pattern: 11
									-->> "User::Tree<Payload>::~Tree() [with Payload = User::Equation_parser::Token]" | This: 007afdb8
									<<-- "User::Tree<Payload>::~Tree() [with Payload = User::Equation_parser::Token]" |
									-->> "User::Tree<Payload>::~Tree() [with Payload = User::Equation_parser::Token]" | This: 007afd6c
									<<-- "User::Tree<Payload>::~Tree() [with Payload = User::Equation_parser::Token]" |
									PATTERN12 >3*X=(5*Y)+C<
									-->> "bool User::Equation_parser::parse(std::__cxx11::string)" | Parse: 3*X=(5*Y)+C | Size: 11
										-->> "static bool User::Equation_parser::equation_to_token_array(std::__cxx11::string, std::vector<std::__cxx11::basic_string<char> >&, std::vector<User::Equation_parser::Token>&)" | Parse: 3*X=(5*Y)+C | Size: 11
											SEEK_NEXT_TOKEN | Decode: >>3<<
											TOKEN_NUMBER | Decode: >>*<<
											Token fully decoded:  3 | type: 0 | size: 1
											Tokens decoded: 1
											SEEK_NEXT_TOKEN | Decode: >>*<<
											-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >>*<<
											<<-- "static bool User::Equation_parser::is_symbol(char)" | N
											-->> "static bool User::Equation_parser::is_operator(char)" | Digit: >>*<<
											<<-- "static bool User::Equation_parser::is_operator(char)" | Y
											Operator detected: >>*<< | Token: *
											Token fully decoded:  * | type: 2 | size: 1
											Tokens decoded: 2
											SEEK_NEXT_TOKEN | Decode: >>X<<
											-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >>X<<
											<<-- "static bool User::Equation_parser::is_symbol(char)" | Y
											TOKEN_SYMBOL | Decode: >>=<<
											-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >>=<<
											<<-- "static bool User::Equation_parser::is_symbol(char)" | N
											Token fully decoded:  X | type: 1 | size: 1
											Tokens decoded: 3
											SEEK_NEXT_TOKEN | Decode: >>=<<
											-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >>=<<
											<<-- "static bool User::Equation_parser::is_symbol(char)" | N
											-->> "static bool User::Equation_parser::is_operator(char)" | Digit: >>=<<
											<<-- "static bool User::Equation_parser::is_operator(char)" | Y
											Operator detected: >>=<< | Token: =
											Token fully decoded:  = | type: 2 | size: 1
											Tokens decoded: 4
											SEEK_NEXT_TOKEN | Decode: >>(<<
											-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >>(<<
											<<-- "static bool User::Equation_parser::is_symbol(char)" | N
											-->> "static bool User::Equation_parser::is_operator(char)" | Digit: >>(<<
											<<-- "static bool User::Equation_parser::is_operator(char)" | N
											Open detected: >>(<< | Token: (
											Token fully decoded:  ( | type: 3 | size: 1
											Tokens decoded: 5
											SEEK_NEXT_TOKEN | Decode: >>5<<
											TOKEN_NUMBER | Decode: >>*<<
											Token fully decoded:  5 | type: 0 | size: 1
											Tokens decoded: 6
											SEEK_NEXT_TOKEN | Decode: >>*<<
											-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >>*<<
											<<-- "static bool User::Equation_parser::is_symbol(char)" | N
											-->> "static bool User::Equation_parser::is_operator(char)" | Digit: >>*<<
											<<-- "static bool User::Equation_parser::is_operator(char)" | Y
											Operator detected: >>*<< | Token: *
											Token fully decoded:  * | type: 2 | size: 1
											Tokens decoded: 7
											SEEK_NEXT_TOKEN | Decode: >>Y<<
											-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >>Y<<
											<<-- "static bool User::Equation_parser::is_symbol(char)" | Y
											TOKEN_SYMBOL | Decode: >>)<<
											-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >>)<<
											<<-- "static bool User::Equation_parser::is_symbol(char)" | N
											Token fully decoded:  Y | type: 1 | size: 1
											Tokens decoded: 8
											SEEK_NEXT_TOKEN | Decode: >>)<<
											-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >>)<<
											<<-- "static bool User::Equation_parser::is_symbol(char)" | N
											-->> "static bool User::Equation_parser::is_operator(char)" | Digit: >>)<<
											<<-- "static bool User::Equation_parser::is_operator(char)" | N
											Close detected: >>)<< | Token: )
											Token fully decoded:  ) | type: 4 | size: 1
											Tokens decoded: 9
											SEEK_NEXT_TOKEN | Decode: >>+<<
											-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >>+<<
											<<-- "static bool User::Equation_parser::is_symbol(char)" | N
											-->> "static bool User::Equation_parser::is_operator(char)" | Digit: >>+<<
											<<-- "static bool User::Equation_parser::is_operator(char)" | Y
											Operator detected: >>+<< | Token: +
											Token fully decoded:  + | type: 2 | size: 1
											Tokens decoded: 10
											SEEK_NEXT_TOKEN | Decode: >>C<<
											-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >>C<<
											<<-- "static bool User::Equation_parser::is_symbol(char)" | Y
											Token fully decoded:  C | type: 1 | size: 1
											Tokens decoded: 11
											Equations decoded into 11 tokens
											Token: >>3<< | Type: 0 | Size: 1
											Token: >>*<< | Type: 2 | Size: 1
											Token: >>X<< | Type: 1 | Size: 1
											Token: >>=<< | Type: 2 | Size: 1
											Token: >>(<< | Type: 3 | Size: 1
											Token: >>5<< | Type: 0 | Size: 1
											Token: >>*<< | Type: 2 | Size: 1
											Token: >>Y<< | Type: 1 | Size: 1
											Token: >>)<< | Type: 4 | Size: 1
											Token: >>+<< | Type: 2 | Size: 1
											Token: >>C<< | Type: 1 | Size: 1
										<<-- "static bool User::Equation_parser::equation_to_token_array(std::__cxx11::string, std::vector<std::__cxx11::basic_string<char> >&, std::vector<User::Equation_parser::Token>&)" | Decoded 11 tokens
										Tree wasn't empty: 3 | FLUSH
										-->> "bool User::Tree<Payload>::flush() [with Payload = User::Equation_parser::Token]" | Nodes inside the tree: 3
											-->> "bool User::Tree<Payload>::init_root() [with Payload = User::Equation_parser::Token]" |
											<<-- "bool User::Tree<Payload>::init_root() [with Payload = User::Equation_parser::Token]" |
										<<-- "bool User::Tree<Payload>::flush() [with Payload = User::Equation_parser::Token]" | Nodes inside the tree: 1
										-->> "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | Token Array Size: 11 | Father 0
											-->> "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 11
												Token: 3 | Priority: 0
												Token: * | Priority: 0
												Token: X | Priority: 0
												Token: = | Priority: 0
												Open | Priority: 1
												Token: 5 | Priority: 1
												Token: * | Priority: 1
												Token: Y | Priority: 1
												Close| Priority: 1
												Token: + | Priority: 0
												Token: C | Priority: 0
											<<-- "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 11 | Highest Priority Token: <=> | 0 0
											Core Token: >=< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 0
											LHS: >3<
											LHS: >*<
											LHS: >X<
											RHS: >(<
											RHS: >5<
											RHS: >*<
											RHS: >Y<
											RHS: >)<
											RHS: >+<
											RHS: >C<
											LHS Tokens: 3 | RHS Tokens: 7
											ROOT: >=<
											-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 0
											<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
											LHS: >=<
											-->> "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | Token Array Size: 3 | Father 0
												-->> "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 3
												Token: 3 | Priority: 0
												Token: * | Priority: 0
												Token: X | Priority: 0
											<<-- "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 3 | Highest Priority Token: <*> | 0 1
											Core Token: >*< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 1
											LHS: >3<
											RHS: >X<
											LHS Tokens: 1 | RHS Tokens: 1
											-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 0
											<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
											-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
											<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 0 | Own Index: 1 | Nodes under Father: 2
											-->> "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | Token Array Size: 1 | Father 1
												-->> "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 1
												Token: 3 | Priority: 0
											<<-- "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 1 | Highest Priority Token: <3> | 0 5
											Core Token: >3< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 5
											LHS Tokens: 0 | RHS Tokens: 0
											-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
											<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 1 | Own Index: 2 | Nodes under Father: 2
										<<-- "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | PASS
										LHS of size 1 under father 1
										-->> "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | Token Array Size: 1 | Father 1
											-->> "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 1
												Token: X | Priority: 0
											<<-- "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 1 | Highest Priority Token: <X> | 0 4
											Core Token: >X< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 4
											LHS Tokens: 0 | RHS Tokens: 0
											-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
											<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 1 | Own Index: 3 | Nodes under Father: 3
										<<-- "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | PASS
										RHS of size 1 under father 1
									<<-- "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | PASS
									LHS of size 3 under father 0
									-->> "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | Token Array Size: 7 | Father 0
										-->> "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 7
											Open | Priority: 1
											Token: 5 | Priority: 1
											Token: * | Priority: 1
											Token: Y | Priority: 1
											Close| Priority: 1
											Token: + | Priority: 0
											Token: C | Priority: 0
										<<-- "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 7 | Highest Priority Token: <+> | 0 3
										Core Token: >+< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 3
										LHS: >(<
										LHS: >5<
										LHS: >*<
										LHS: >Y<
										LHS: >)<
										RHS: >C<
										LHS Tokens: 5 | RHS Tokens: 1
										-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
										<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 0 | Own Index: 4 | Nodes under Father: 3
										-->> "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | Token Array Size: 5 | Father 4
											-->> "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 5
												Open | Priority: 1
												Token: 5 | Priority: 1
												Token: * | Priority: 1
												Token: Y | Priority: 1
												Close| Priority: 1
												Delete Open 0 | Priority: 1 | Min Priority: 1 
												Delete Close 3 | Priority: 1 | Min Priority: 1 
												Deleted redundant priority tokens | Tokens: 3
											<<-- "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 3 | Highest Priority Token: <*> | 0 1
											Core Token: >*< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 1
											LHS: >5<
											RHS: >Y<
											LHS Tokens: 1 | RHS Tokens: 1
											-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
											<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 4 | Own Index: 5 | Nodes under Father: 2
											-->> "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | Token Array Size: 1 | Father 5
												-->> "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 1
												Token: 5 | Priority: 0
											<<-- "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 1 | Highest Priority Token: <5> | 0 5
											Core Token: >5< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 5
											LHS Tokens: 0 | RHS Tokens: 0
											-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
											<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 5 | Own Index: 6 | Nodes under Father: 2
										<<-- "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | PASS
										LHS of size 1 under father 5
										-->> "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | Token Array Size: 1 | Father 5
											-->> "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 1
												Token: Y | Priority: 0
											<<-- "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 1 | Highest Priority Token: <Y> | 0 4
											Core Token: >Y< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 4
											LHS Tokens: 0 | RHS Tokens: 0
											-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
											<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 5 | Own Index: 7 | Nodes under Father: 3
										<<-- "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | PASS
										RHS of size 1 under father 5
									<<-- "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | PASS
									LHS of size 3 under father 4
									-->> "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | Token Array Size: 1 | Father 4
										-->> "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 1
											Token: C | Priority: 0
										<<-- "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 1 | Highest Priority Token: <C> | 0 4
										Core Token: >C< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 4
										LHS Tokens: 0 | RHS Tokens: 0
										-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
										<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 4 | Own Index: 8 | Nodes under Father: 3
									<<-- "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | PASS
									RHS of size 1 under father 4
								<<-- "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | PASS
								RHS of size 7 under father 0
							<<-- "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | PASS
							-->> "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Index: 0
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afaa4 | Begin: 1 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 0 | Stack size: 1
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 9 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 0
										Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 2 | Depth: 1
										Found children || Index 4 | Own Index: 4 | Father Index: 0 | Own Priority 1 | Children: 2 | Depth: 1
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 1 | Index: 0
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 9 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 1
										Found children || Index 2 | Own Index: 2 | Father Index: 1 | Own Priority 0 | Children: 0 | Depth: 2
										Found children || Index 3 | Own Index: 3 | Father Index: 1 | Own Priority 1 | Children: 0 | Depth: 2
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 2 | Index: 1
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 9 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 2
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 3 | Index: 2
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 9 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 3
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 4 | Index: 3
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 9 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 4
										Found children || Index 5 | Own Index: 5 | Father Index: 4 | Own Priority 0 | Children: 2 | Depth: 2
										Found children || Index 8 | Own Index: 8 | Father Index: 4 | Own Priority 1 | Children: 0 | Depth: 2
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 5 | Index: 4
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 9 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 5
										Found children || Index 6 | Own Index: 6 | Father Index: 5 | Own Priority 0 | Children: 0 | Depth: 3
										Found children || Index 7 | Own Index: 7 | Father Index: 5 | Own Priority 1 | Children: 0 | Depth: 3
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 6 | Index: 5
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 9 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 6
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 7 | Index: 6
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 9 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 7
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 8 | Index: 7
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 9 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 8
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 9 | Index: 8
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 9 | Stack size: 0
							<<-- "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
							-->> "static int User::Equation_parser::aggregate_tree_token_sum_diff(User::Tree<User::Equation_parser::Token>&)" |
								-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 1
								<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
								-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 2
								<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
								-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 3
								<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
								-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 4
								<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
								-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 0
								<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
								-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 5
								<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
								-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 6
								<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
								-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 7
								<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
								-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 8
								<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
							<<-- "static int User::Equation_parser::aggregate_tree_token_sum_diff(User::Tree<User::Equation_parser::Token>&)" | Ereased: 0 | Moved: 0
							-->> "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Index: 0
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afaa4 | Begin: 1 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 0 | Stack size: 1
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 9 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 0
										Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 2 | Depth: 1
										Found children || Index 4 | Own Index: 4 | Father Index: 0 | Own Priority 1 | Children: 2 | Depth: 1
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 1 | Index: 0
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 9 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 1
										Found children || Index 2 | Own Index: 2 | Father Index: 1 | Own Priority 0 | Children: 0 | Depth: 2
										Found children || Index 3 | Own Index: 3 | Father Index: 1 | Own Priority 1 | Children: 0 | Depth: 2
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 2 | Index: 1
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 9 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 2
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 3 | Index: 2
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 9 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 3
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 4 | Index: 3
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 9 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 4
										Found children || Index 5 | Own Index: 5 | Father Index: 4 | Own Priority 0 | Children: 2 | Depth: 2
										Found children || Index 8 | Own Index: 8 | Father Index: 4 | Own Priority 1 | Children: 0 | Depth: 2
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 5 | Index: 4
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 9 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 5
										Found children || Index 6 | Own Index: 6 | Father Index: 5 | Own Priority 0 | Children: 0 | Depth: 3
										Found children || Index 7 | Own Index: 7 | Father Index: 5 | Own Priority 1 | Children: 0 | Depth: 3
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 6 | Index: 5
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 9 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 6
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 7 | Index: 6
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 9 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 7
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 8 | Index: 7
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 9 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 8
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 9 | Index: 8
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 9 | Stack size: 0
							<<-- "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
						<<-- "bool User::Equation_parser::parse(std::__cxx11::string)" | Token array size: 11 | Token tree size: 9
						TOKEN0
						TOKEN1
						TOKEN2
						TOKEN3
						TOKEN4
						TOKEN5
						TOKEN6
						TOKEN7
						TOKEN8
						TOKEN9
						TOKEN10
						-->> "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Index: 0
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afbf4 | Begin: 1 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 0 | Stack size: 1
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 9 | Stack size: 0
							-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
								-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 0
									Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 2 | Depth: 1
									Found children || Index 4 | Own Index: 4 | Father Index: 0 | Own Priority 1 | Children: 2 | Depth: 1
								<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
							<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 1 | Index: 0
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 9 | Stack size: 0
							-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
								-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 1
									Found children || Index 2 | Own Index: 2 | Father Index: 1 | Own Priority 0 | Children: 0 | Depth: 2
									Found children || Index 3 | Own Index: 3 | Father Index: 1 | Own Priority 1 | Children: 0 | Depth: 2
								<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
							<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 2 | Index: 1
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 9 | Stack size: 0
							-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
								-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 2
								<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
							<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 3 | Index: 2
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 9 | Stack size: 0
							-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
								-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 3
								<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
							<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 4 | Index: 3
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 9 | Stack size: 0
							-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
								-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 4
									Found children || Index 5 | Own Index: 5 | Father Index: 4 | Own Priority 0 | Children: 2 | Depth: 2
									Found children || Index 8 | Own Index: 8 | Father Index: 4 | Own Priority 1 | Children: 0 | Depth: 2
								<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
							<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 5 | Index: 4
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 9 | Stack size: 0
							-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
								-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 5
									Found children || Index 6 | Own Index: 6 | Father Index: 5 | Own Priority 0 | Children: 0 | Depth: 3
									Found children || Index 7 | Own Index: 7 | Father Index: 5 | Own Priority 1 | Children: 0 | Depth: 3
								<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
							<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 6 | Index: 5
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 9 | Stack size: 0
							-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
								-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 6
								<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
							<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 7 | Index: 6
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 9 | Stack size: 0
							-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
								-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 7
								<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
							<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 8 | Index: 7
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 9 | Stack size: 0
							-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
								-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 8
								<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
							<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 9 | Index: 8
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 9 | Stack size: 0
						<<-- "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
						-->> "User::Tree<Payload>::Tree(std::vector<User::Tree<Payload>::St_minimal_node>) [with Payload = User::Equation_parser::Token]" | This: 007afdb8 | Nodes: 9
							-->> "bool User::Tree<Payload>::init_class_vars(Payload) [with Payload = User::Equation_parser::Token]" |
							<<-- "bool User::Tree<Payload>::init_class_vars(Payload) [with Payload = User::Equation_parser::Token]" |
							-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
							<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 0 | Own Index: 1 | Nodes under Father: 2
							-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
							<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 0 | Own Index: 2 | Nodes under Father: 3
							-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
							<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 1 | Own Index: 3 | Nodes under Father: 2
							-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
							<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 1 | Own Index: 4 | Nodes under Father: 3
							-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
							<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 2 | Own Index: 5 | Nodes under Father: 2
							-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
							<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 2 | Own Index: 6 | Nodes under Father: 3
							-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
							<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 5 | Own Index: 7 | Nodes under Father: 2
							-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
							<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 5 | Own Index: 8 | Nodes under Father: 3
							-->> "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Index: 0
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afbf4 | Begin: 1 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 0 | Stack size: 1
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 9 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 0
										Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 2 | Depth: 1
										Found children || Index 2 | Own Index: 2 | Father Index: 0 | Own Priority 1 | Children: 2 | Depth: 1
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 1 | Index: 0
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 9 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 1
										Found children || Index 3 | Own Index: 3 | Father Index: 1 | Own Priority 0 | Children: 0 | Depth: 2
										Found children || Index 4 | Own Index: 4 | Father Index: 1 | Own Priority 1 | Children: 0 | Depth: 2
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 2 | Index: 1
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 9 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 3
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 3 | Index: 3
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 9 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 4
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 4 | Index: 4
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 9 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 2
										Found children || Index 5 | Own Index: 5 | Father Index: 2 | Own Priority 0 | Children: 2 | Depth: 2
										Found children || Index 6 | Own Index: 6 | Father Index: 2 | Own Priority 1 | Children: 0 | Depth: 2
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 5 | Index: 2
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 9 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 5
										Found children || Index 7 | Own Index: 7 | Father Index: 5 | Own Priority 0 | Children: 0 | Depth: 3
										Found children || Index 8 | Own Index: 8 | Father Index: 5 | Own Priority 1 | Children: 0 | Depth: 3
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 6 | Index: 5
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 9 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 7
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 7 | Index: 7
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 9 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 8
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 8 | Index: 8
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 9 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 6
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 9 | Index: 6
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 9 | Stack size: 0
							<<-- "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
							-->> "bool User::Tree<Payload>::operator==(User::Tree<Payload>&) [with Payload = User::Equation_parser::Token]" |
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afb6c | Begin: 1 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 0 | Stack size: 1
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afb3c | Begin: 1 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 0 | Stack size: 1
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afb9c | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 9 | Stack size: 0
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afbcc | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 9 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 0
										Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 2 | Depth: 1
										Found children || Index 4 | Own Index: 4 | Father Index: 0 | Own Priority 1 | Children: 2 | Depth: 1
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 1 | Index: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 0
										Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 2 | Depth: 1
										Found children || Index 2 | Own Index: 2 | Father Index: 0 | Own Priority 1 | Children: 2 | Depth: 1
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 1 | Index: 0
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afb9c | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 9 | Stack size: 0
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afbcc | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 9 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 1
										Found children || Index 2 | Own Index: 2 | Father Index: 1 | Own Priority 0 | Children: 0 | Depth: 2
										Found children || Index 3 | Own Index: 3 | Father Index: 1 | Own Priority 1 | Children: 0 | Depth: 2
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 2 | Index: 1
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 1
										Found children || Index 3 | Own Index: 3 | Father Index: 1 | Own Priority 0 | Children: 0 | Depth: 2
										Found children || Index 4 | Own Index: 4 | Father Index: 1 | Own Priority 1 | Children: 0 | Depth: 2
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 2 | Index: 1
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afb9c | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 9 | Stack size: 0
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afbcc | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 9 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 2
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 3 | Index: 2
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 3
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 3 | Index: 3
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afb9c | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 9 | Stack size: 0
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afbcc | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 9 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 3
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 4 | Index: 3
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 4
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 4 | Index: 4
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afb9c | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 9 | Stack size: 0
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afbcc | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 9 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 4
										Found children || Index 5 | Own Index: 5 | Father Index: 4 | Own Priority 0 | Children: 2 | Depth: 2
										Found children || Index 8 | Own Index: 8 | Father Index: 4 | Own Priority 1 | Children: 0 | Depth: 2
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 5 | Index: 4
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 2
										Found children || Index 5 | Own Index: 5 | Father Index: 2 | Own Priority 0 | Children: 2 | Depth: 2
										Found children || Index 6 | Own Index: 6 | Father Index: 2 | Own Priority 1 | Children: 0 | Depth: 2
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 5 | Index: 2
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afb9c | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 9 | Stack size: 0
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afbcc | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 9 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 5
										Found children || Index 6 | Own Index: 6 | Father Index: 5 | Own Priority 0 | Children: 0 | Depth: 3
										Found children || Index 7 | Own Index: 7 | Father Index: 5 | Own Priority 1 | Children: 0 | Depth: 3
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 6 | Index: 5
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 5
										Found children || Index 7 | Own Index: 7 | Father Index: 5 | Own Priority 0 | Children: 0 | Depth: 3
										Found children || Index 8 | Own Index: 8 | Father Index: 5 | Own Priority 1 | Children: 0 | Depth: 3
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 6 | Index: 5
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afb9c | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 9 | Stack size: 0
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afbcc | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 9 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 6
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 7 | Index: 6
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 7
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 7 | Index: 7
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afb9c | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 9 | Stack size: 0
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afbcc | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 9 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 7
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 8 | Index: 7
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 8
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 8 | Index: 8
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afb9c | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 9 | Stack size: 0
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afbcc | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 9 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 8
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 9 | Index: 8
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 6
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 9 | Index: 6
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afb9c | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 9 | Stack size: 0
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afbcc | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 9 | Stack size: 0
							<<-- "bool User::Tree<Payload>::operator==(User::Tree<Payload>&) [with Payload = User::Equation_parser::Token]" | Same
							PASS pattern: 12
							-->> "User::Tree<Payload>::~Tree() [with Payload = User::Equation_parser::Token]" | This: 007afdb8
							<<-- "User::Tree<Payload>::~Tree() [with Payload = User::Equation_parser::Token]" |
							-->> "User::Tree<Payload>::~Tree() [with Payload = User::Equation_parser::Token]" | This: 007afd6c
							<<-- "User::Tree<Payload>::~Tree() [with Payload = User::Equation_parser::Token]" |
							PATTERN13 >Pippo=Pluto+self_awareness<
							-->> "bool User::Equation_parser::parse(std::__cxx11::string)" | Parse: Pippo=Pluto+self_awareness | Size: 26
								-->> "static bool User::Equation_parser::equation_to_token_array(std::__cxx11::string, std::vector<std::__cxx11::basic_string<char> >&, std::vector<User::Equation_parser::Token>&)" | Parse: Pippo=Pluto+self_awareness | Size: 26
									SEEK_NEXT_TOKEN | Decode: >>P<<
									-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >>P<<
									<<-- "static bool User::Equation_parser::is_symbol(char)" | Y
									TOKEN_SYMBOL | Decode: >>i<<
									-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >>i<<
									<<-- "static bool User::Equation_parser::is_symbol(char)" | Y
									TOKEN_SYMBOL | Decode: >>p<<
									-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >>p<<
									<<-- "static bool User::Equation_parser::is_symbol(char)" | Y
									TOKEN_SYMBOL | Decode: >>p<<
									-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >>p<<
									<<-- "static bool User::Equation_parser::is_symbol(char)" | Y
									TOKEN_SYMBOL | Decode: >>o<<
									-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >>o<<
									<<-- "static bool User::Equation_parser::is_symbol(char)" | Y
									TOKEN_SYMBOL | Decode: >>=<<
									-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >>=<<
									<<-- "static bool User::Equation_parser::is_symbol(char)" | N
									Token fully decoded:  Pippo | type: 1 | size: 5
									Tokens decoded: 1
									SEEK_NEXT_TOKEN | Decode: >>=<<
									-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >>=<<
									<<-- "static bool User::Equation_parser::is_symbol(char)" | N
									-->> "static bool User::Equation_parser::is_operator(char)" | Digit: >>=<<
									<<-- "static bool User::Equation_parser::is_operator(char)" | Y
									Operator detected: >>=<< | Token: =
									Token fully decoded:  = | type: 2 | size: 1
									Tokens decoded: 2
									SEEK_NEXT_TOKEN | Decode: >>P<<
									-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >>P<<
									<<-- "static bool User::Equation_parser::is_symbol(char)" | Y
									TOKEN_SYMBOL | Decode: >>l<<
									-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >>l<<
									<<-- "static bool User::Equation_parser::is_symbol(char)" | Y
									TOKEN_SYMBOL | Decode: >>u<<
									-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >>u<<
									<<-- "static bool User::Equation_parser::is_symbol(char)" | Y
									TOKEN_SYMBOL | Decode: >>t<<
									-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >>t<<
									<<-- "static bool User::Equation_parser::is_symbol(char)" | Y
									TOKEN_SYMBOL | Decode: >>o<<
									-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >>o<<
									<<-- "static bool User::Equation_parser::is_symbol(char)" | Y
									TOKEN_SYMBOL | Decode: >>+<<
									-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >>+<<
									<<-- "static bool User::Equation_parser::is_symbol(char)" | N
									Token fully decoded:  Pluto | type: 1 | size: 5
									Tokens decoded: 3
									SEEK_NEXT_TOKEN | Decode: >>+<<
									-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >>+<<
									<<-- "static bool User::Equation_parser::is_symbol(char)" | N
									-->> "static bool User::Equation_parser::is_operator(char)" | Digit: >>+<<
									<<-- "static bool User::Equation_parser::is_operator(char)" | Y
									Operator detected: >>+<< | Token: +
									Token fully decoded:  + | type: 2 | size: 1
									Tokens decoded: 4
									SEEK_NEXT_TOKEN | Decode: >>s<<
									-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >>s<<
									<<-- "static bool User::Equation_parser::is_symbol(char)" | Y
									TOKEN_SYMBOL | Decode: >>e<<
									-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >>e<<
									<<-- "static bool User::Equation_parser::is_symbol(char)" | Y
									TOKEN_SYMBOL | Decode: >>l<<
									-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >>l<<
									<<-- "static bool User::Equation_parser::is_symbol(char)" | Y
									TOKEN_SYMBOL | Decode: >>f<<
									-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >>f<<
									<<-- "static bool User::Equation_parser::is_symbol(char)" | Y
									TOKEN_SYMBOL | Decode: >>_<<
									-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >>_<<
									<<-- "static bool User::Equation_parser::is_symbol(char)" | Y
									TOKEN_SYMBOL | Decode: >>a<<
									-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >>a<<
									<<-- "static bool User::Equation_parser::is_symbol(char)" | Y
									TOKEN_SYMBOL | Decode: >>w<<
									-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >>w<<
									<<-- "static bool User::Equation_parser::is_symbol(char)" | Y
									TOKEN_SYMBOL | Decode: >>a<<
									-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >>a<<
									<<-- "static bool User::Equation_parser::is_symbol(char)" | Y
									TOKEN_SYMBOL | Decode: >>r<<
									-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >>r<<
									<<-- "static bool User::Equation_parser::is_symbol(char)" | Y
									TOKEN_SYMBOL | Decode: >>e<<
									-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >>e<<
									<<-- "static bool User::Equation_parser::is_symbol(char)" | Y
									TOKEN_SYMBOL | Decode: >>n<<
									-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >>n<<
									<<-- "static bool User::Equation_parser::is_symbol(char)" | Y
									TOKEN_SYMBOL | Decode: >>e<<
									-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >>e<<
									<<-- "static bool User::Equation_parser::is_symbol(char)" | Y
									TOKEN_SYMBOL | Decode: >>s<<
									-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >>s<<
									<<-- "static bool User::Equation_parser::is_symbol(char)" | Y
									TOKEN_SYMBOL | Decode: >>s<<
									-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >>s<<
									<<-- "static bool User::Equation_parser::is_symbol(char)" | Y
									Token fully decoded:  self_awareness | type: 1 | size: 14
									Tokens decoded: 5
									Equations decoded into 5 tokens
									Token: >>Pippo<< | Type: 1 | Size: 5
									Token: >>=<< | Type: 2 | Size: 1
									Token: >>Pluto<< | Type: 1 | Size: 5
									Token: >>+<< | Type: 2 | Size: 1
									Token: >>self_awareness<< | Type: 1 | Size: 14
								<<-- "static bool User::Equation_parser::equation_to_token_array(std::__cxx11::string, std::vector<std::__cxx11::basic_string<char> >&, std::vector<User::Equation_parser::Token>&)" | Decoded 5 tokens
								Tree wasn't empty: 9 | FLUSH
								-->> "bool User::Tree<Payload>::flush() [with Payload = User::Equation_parser::Token]" | Nodes inside the tree: 9
									-->> "bool User::Tree<Payload>::init_root() [with Payload = User::Equation_parser::Token]" |
									<<-- "bool User::Tree<Payload>::init_root() [with Payload = User::Equation_parser::Token]" |
								<<-- "bool User::Tree<Payload>::flush() [with Payload = User::Equation_parser::Token]" | Nodes inside the tree: 1
								-->> "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | Token Array Size: 5 | Father 0
									-->> "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 5
										Token: Pippo | Priority: 0
										Token: = | Priority: 0
										Token: Pluto | Priority: 0
										Token: + | Priority: 0
										Token: self_awareness | Priority: 0
									<<-- "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 5 | Highest Priority Token: <=> | 0 0
									Core Token: >=< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 0
									LHS: >Pippo<
									RHS: >Pluto<
									RHS: >+<
									RHS: >self_awareness<
									LHS Tokens: 1 | RHS Tokens: 3
									ROOT: >=<
									-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 0
									<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
									LHS: >=<
									-->> "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | Token Array Size: 1 | Father 0
										-->> "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 1
											Token: Pippo | Priority: 0
										<<-- "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 1 | Highest Priority Token: <Pippo> | 0 4
										Core Token: >Pippo< | Size: 5 | Open/Close Priority: 0 | Symbol Priority: 4
										LHS Tokens: 0 | RHS Tokens: 0
										-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 0
										<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
										-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
										<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 0 | Own Index: 1 | Nodes under Father: 2
									<<-- "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | PASS
									LHS of size 1 under father 0
									-->> "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | Token Array Size: 3 | Father 0
										-->> "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 3
											Token: Pluto | Priority: 0
											Token: + | Priority: 0
											Token: self_awareness | Priority: 0
										<<-- "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 3 | Highest Priority Token: <+> | 0 3
										Core Token: >+< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 3
										LHS: >Pluto<
										RHS: >self_awareness<
										LHS Tokens: 1 | RHS Tokens: 1
										-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
										<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 0 | Own Index: 2 | Nodes under Father: 3
										-->> "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | Token Array Size: 1 | Father 2
											-->> "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 1
												Token: Pluto | Priority: 0
											<<-- "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 1 | Highest Priority Token: <Pluto> | 0 4
											Core Token: >Pluto< | Size: 5 | Open/Close Priority: 0 | Symbol Priority: 4
											LHS Tokens: 0 | RHS Tokens: 0
											-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
											<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 2 | Own Index: 3 | Nodes under Father: 2
										<<-- "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | PASS
										LHS of size 1 under father 2
										-->> "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | Token Array Size: 1 | Father 2
											-->> "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 1
												Token: self_awareness | Priority: 0
											<<-- "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 1 | Highest Priority Token: <self_awareness> | 0 4
											Core Token: >self_awareness< | Size: 14 | Open/Close Priority: 0 | Symbol Priority: 4
											LHS Tokens: 0 | RHS Tokens: 0
											-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
											<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 2 | Own Index: 4 | Nodes under Father: 3
										<<-- "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | PASS
										RHS of size 1 under father 2
									<<-- "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | PASS
									RHS of size 3 under father 0
								<<-- "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | PASS
								-->> "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Index: 0
									-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afaa4 | Begin: 1 | Index: 0
									<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 0 | Stack size: 1
									-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
									<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
									-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
										-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 0
											Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 0 | Depth: 1
											Found children || Index 2 | Own Index: 2 | Father Index: 0 | Own Priority 1 | Children: 2 | Depth: 1
										<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
									<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 1 | Index: 0
									-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
									<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
									-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
										-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 1
										<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
									<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 2 | Index: 1
									-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
									<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
									-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
										-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 2
											Found children || Index 3 | Own Index: 3 | Father Index: 2 | Own Priority 0 | Children: 0 | Depth: 2
											Found children || Index 4 | Own Index: 4 | Father Index: 2 | Own Priority 1 | Children: 0 | Depth: 2
										<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
									<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 3 | Index: 2
									-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
									<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
									-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
										-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 3
										<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
									<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 4 | Index: 3
									-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
									<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
									-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
										-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 4
										<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
									<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 5 | Index: 4
									-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
									<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
								<<-- "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
								-->> "static int User::Equation_parser::aggregate_tree_token_sum_diff(User::Tree<User::Equation_parser::Token>&)" |
									-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 1
									<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
									-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 2
									<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
									-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 0
									<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
									-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 3
									<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
									-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 4
									<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
								<<-- "static int User::Equation_parser::aggregate_tree_token_sum_diff(User::Tree<User::Equation_parser::Token>&)" | Ereased: 0 | Moved: 0
								-->> "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Index: 0
									-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afaa4 | Begin: 1 | Index: 0
									<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 0 | Stack size: 1
									-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
									<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
									-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
										-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 0
											Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 0 | Depth: 1
											Found children || Index 2 | Own Index: 2 | Father Index: 0 | Own Priority 1 | Children: 2 | Depth: 1
										<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
									<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 1 | Index: 0
									-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
									<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
									-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
										-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 1
										<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
									<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 2 | Index: 1
									-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
									<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
									-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
										-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 2
											Found children || Index 3 | Own Index: 3 | Father Index: 2 | Own Priority 0 | Children: 0 | Depth: 2
											Found children || Index 4 | Own Index: 4 | Father Index: 2 | Own Priority 1 | Children: 0 | Depth: 2
										<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
									<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 3 | Index: 2
									-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
									<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
									-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
										-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 3
										<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
									<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 4 | Index: 3
									-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
									<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
									-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
										-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 4
										<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
									<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 5 | Index: 4
									-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
									<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
								<<-- "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
							<<-- "bool User::Equation_parser::parse(std::__cxx11::string)" | Token array size: 5 | Token tree size: 5
							TOKEN0
							TOKEN1
							TOKEN2
							TOKEN3
							TOKEN4
							-->> "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Index: 0
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afbf4 | Begin: 1 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 0 | Stack size: 1
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 0
										Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 0 | Depth: 1
										Found children || Index 2 | Own Index: 2 | Father Index: 0 | Own Priority 1 | Children: 2 | Depth: 1
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 1 | Index: 0
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 1
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 2 | Index: 1
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 2
										Found children || Index 3 | Own Index: 3 | Father Index: 2 | Own Priority 0 | Children: 0 | Depth: 2
										Found children || Index 4 | Own Index: 4 | Father Index: 2 | Own Priority 1 | Children: 0 | Depth: 2
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 3 | Index: 2
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 3
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 4 | Index: 3
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 4
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 5 | Index: 4
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
							<<-- "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
							-->> "User::Tree<Payload>::Tree(std::vector<User::Tree<Payload>::St_minimal_node>) [with Payload = User::Equation_parser::Token]" | This: 007afdb8 | Nodes: 5
								-->> "bool User::Tree<Payload>::init_class_vars(Payload) [with Payload = User::Equation_parser::Token]" |
								<<-- "bool User::Tree<Payload>::init_class_vars(Payload) [with Payload = User::Equation_parser::Token]" |
								-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
								<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 0 | Own Index: 1 | Nodes under Father: 2
								-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
								<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 0 | Own Index: 2 | Nodes under Father: 3
								-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
								<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 2 | Own Index: 3 | Nodes under Father: 2
								-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
								<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 2 | Own Index: 4 | Nodes under Father: 3
								-->> "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Index: 0
									-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afbf4 | Begin: 1 | Index: 0
									<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 0 | Stack size: 1
									-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
									<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
									-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
										-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 0
											Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 0 | Depth: 1
											Found children || Index 2 | Own Index: 2 | Father Index: 0 | Own Priority 1 | Children: 2 | Depth: 1
										<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
									<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 1 | Index: 0
									-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
									<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
									-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
										-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 1
										<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
									<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 2 | Index: 1
									-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
									<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
									-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
										-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 2
											Found children || Index 3 | Own Index: 3 | Father Index: 2 | Own Priority 0 | Children: 0 | Depth: 2
											Found children || Index 4 | Own Index: 4 | Father Index: 2 | Own Priority 1 | Children: 0 | Depth: 2
										<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
									<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 3 | Index: 2
									-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
									<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
									-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
										-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 3
										<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
									<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 4 | Index: 3
									-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
									<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
									-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
										-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 4
										<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
									<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 5 | Index: 4
									-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
									<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
								<<-- "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
								-->> "bool User::Tree<Payload>::operator==(User::Tree<Payload>&) [with Payload = User::Equation_parser::Token]" |
									-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afb6c | Begin: 1 | Index: 0
									<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 0 | Stack size: 1
									-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afb3c | Begin: 1 | Index: 0
									<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 0 | Stack size: 1
									-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afb9c | Begin: 0 | Index: 0
									<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
									-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afbcc | Begin: 0 | Index: 0
									<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
									-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
										-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 0
											Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 0 | Depth: 1
											Found children || Index 2 | Own Index: 2 | Father Index: 0 | Own Priority 1 | Children: 2 | Depth: 1
										<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
									<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 1 | Index: 0
									-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
										-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 0
											Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 0 | Depth: 1
											Found children || Index 2 | Own Index: 2 | Father Index: 0 | Own Priority 1 | Children: 2 | Depth: 1
										<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
									<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 1 | Index: 0
									-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afb9c | Begin: 0 | Index: 0
									<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
									-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afbcc | Begin: 0 | Index: 0
									<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
									-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
										-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 1
										<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
									<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 2 | Index: 1
									-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
										-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 1
										<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
									<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 2 | Index: 1
									-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afb9c | Begin: 0 | Index: 0
									<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
									-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afbcc | Begin: 0 | Index: 0
									<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
									-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
										-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 2
											Found children || Index 3 | Own Index: 3 | Father Index: 2 | Own Priority 0 | Children: 0 | Depth: 2
											Found children || Index 4 | Own Index: 4 | Father Index: 2 | Own Priority 1 | Children: 0 | Depth: 2
										<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
									<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 3 | Index: 2
									-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
										-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 2
											Found children || Index 3 | Own Index: 3 | Father Index: 2 | Own Priority 0 | Children: 0 | Depth: 2
											Found children || Index 4 | Own Index: 4 | Father Index: 2 | Own Priority 1 | Children: 0 | Depth: 2
										<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
									<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 3 | Index: 2
									-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afb9c | Begin: 0 | Index: 0
									<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
									-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afbcc | Begin: 0 | Index: 0
									<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
									-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
										-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 3
										<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
									<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 4 | Index: 3
									-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
										-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 3
										<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
									<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 4 | Index: 3
									-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afb9c | Begin: 0 | Index: 0
									<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
									-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afbcc | Begin: 0 | Index: 0
									<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
									-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
										-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 4
										<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
									<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 5 | Index: 4
									-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
										-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 4
										<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
									<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 5 | Index: 4
									-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afb9c | Begin: 0 | Index: 0
									<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
									-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afbcc | Begin: 0 | Index: 0
									<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
								<<-- "bool User::Tree<Payload>::operator==(User::Tree<Payload>&) [with Payload = User::Equation_parser::Token]" | Same
								PASS pattern: 13
								-->> "User::Tree<Payload>::~Tree() [with Payload = User::Equation_parser::Token]" | This: 007afdb8
								<<-- "User::Tree<Payload>::~Tree() [with Payload = User::Equation_parser::Token]" |
								-->> "User::Tree<Payload>::~Tree() [with Payload = User::Equation_parser::Token]" | This: 007afd6c
								<<-- "User::Tree<Payload>::~Tree() [with Payload = User::Equation_parser::Token]" |
								PATTERN14 >3=1+1+1<
								-->> "bool User::Equation_parser::parse(std::__cxx11::string)" | Parse: 3=1+1+1 | Size: 7
									-->> "static bool User::Equation_parser::equation_to_token_array(std::__cxx11::string, std::vector<std::__cxx11::basic_string<char> >&, std::vector<User::Equation_parser::Token>&)" | Parse: 3=1+1+1 | Size: 7
										SEEK_NEXT_TOKEN | Decode: >>3<<
										TOKEN_NUMBER | Decode: >>=<<
										Token fully decoded:  3 | type: 0 | size: 1
										Tokens decoded: 1
										SEEK_NEXT_TOKEN | Decode: >>=<<
										-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >>=<<
										<<-- "static bool User::Equation_parser::is_symbol(char)" | N
										-->> "static bool User::Equation_parser::is_operator(char)" | Digit: >>=<<
										<<-- "static bool User::Equation_parser::is_operator(char)" | Y
										Operator detected: >>=<< | Token: =
										Token fully decoded:  = | type: 2 | size: 1
										Tokens decoded: 2
										SEEK_NEXT_TOKEN | Decode: >>1<<
										TOKEN_NUMBER | Decode: >>+<<
										Token fully decoded:  1 | type: 0 | size: 1
										Tokens decoded: 3
										SEEK_NEXT_TOKEN | Decode: >>+<<
										-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >>+<<
										<<-- "static bool User::Equation_parser::is_symbol(char)" | N
										-->> "static bool User::Equation_parser::is_operator(char)" | Digit: >>+<<
										<<-- "static bool User::Equation_parser::is_operator(char)" | Y
										Operator detected: >>+<< | Token: +
										Token fully decoded:  + | type: 2 | size: 1
										Tokens decoded: 4
										SEEK_NEXT_TOKEN | Decode: >>1<<
										TOKEN_NUMBER | Decode: >>+<<
										Token fully decoded:  1 | type: 0 | size: 1
										Tokens decoded: 5
										SEEK_NEXT_TOKEN | Decode: >>+<<
										-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >>+<<
										<<-- "static bool User::Equation_parser::is_symbol(char)" | N
										-->> "static bool User::Equation_parser::is_operator(char)" | Digit: >>+<<
										<<-- "static bool User::Equation_parser::is_operator(char)" | Y
										Operator detected: >>+<< | Token: +
										Token fully decoded:  + | type: 2 | size: 1
										Tokens decoded: 6
										SEEK_NEXT_TOKEN | Decode: >>1<<
										Token fully decoded:  1 | type: 0 | size: 1
										Tokens decoded: 7
										Equations decoded into 7 tokens
										Token: >>3<< | Type: 0 | Size: 1
										Token: >>=<< | Type: 2 | Size: 1
										Token: >>1<< | Type: 0 | Size: 1
										Token: >>+<< | Type: 2 | Size: 1
										Token: >>1<< | Type: 0 | Size: 1
										Token: >>+<< | Type: 2 | Size: 1
										Token: >>1<< | Type: 0 | Size: 1
									<<-- "static bool User::Equation_parser::equation_to_token_array(std::__cxx11::string, std::vector<std::__cxx11::basic_string<char> >&, std::vector<User::Equation_parser::Token>&)" | Decoded 7 tokens
									Tree wasn't empty: 5 | FLUSH
									-->> "bool User::Tree<Payload>::flush() [with Payload = User::Equation_parser::Token]" | Nodes inside the tree: 5
										-->> "bool User::Tree<Payload>::init_root() [with Payload = User::Equation_parser::Token]" |
										<<-- "bool User::Tree<Payload>::init_root() [with Payload = User::Equation_parser::Token]" |
									<<-- "bool User::Tree<Payload>::flush() [with Payload = User::Equation_parser::Token]" | Nodes inside the tree: 1
									-->> "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | Token Array Size: 7 | Father 0
										-->> "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 7
											Token: 3 | Priority: 0
											Token: = | Priority: 0
											Token: 1 | Priority: 0
											Token: + | Priority: 0
											Token: 1 | Priority: 0
											Token: + | Priority: 0
											Token: 1 | Priority: 0
										<<-- "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 7 | Highest Priority Token: <=> | 0 0
										Core Token: >=< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 0
										LHS: >3<
										RHS: >1<
										RHS: >+<
										RHS: >1<
										RHS: >+<
										RHS: >1<
										LHS Tokens: 1 | RHS Tokens: 5
										ROOT: >=<
										-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 0
										<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
										LHS: >=<
										-->> "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | Token Array Size: 1 | Father 0
											-->> "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 1
												Token: 3 | Priority: 0
											<<-- "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 1 | Highest Priority Token: <3> | 0 5
											Core Token: >3< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 5
											LHS Tokens: 0 | RHS Tokens: 0
											-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 0
											<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
											-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
											<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 0 | Own Index: 1 | Nodes under Father: 2
										<<-- "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | PASS
										LHS of size 1 under father 0
										-->> "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | Token Array Size: 5 | Father 0
											-->> "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 5
												Token: 1 | Priority: 0
												Token: + | Priority: 0
												Token: 1 | Priority: 0
												Token: + | Priority: 0
												Token: 1 | Priority: 0
											<<-- "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 5 | Highest Priority Token: <+> | 0 3
											Core Token: >+< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 3
											LHS: >1<
											RHS: >1<
											RHS: >+<
											RHS: >1<
											LHS Tokens: 1 | RHS Tokens: 3
											-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
											<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 0 | Own Index: 2 | Nodes under Father: 3
											-->> "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | Token Array Size: 1 | Father 2
												-->> "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 1
												Token: 1 | Priority: 0
											<<-- "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 1 | Highest Priority Token: <1> | 0 5
											Core Token: >1< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 5
											LHS Tokens: 0 | RHS Tokens: 0
											-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
											<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 2 | Own Index: 3 | Nodes under Father: 2
										<<-- "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | PASS
										LHS of size 1 under father 2
										-->> "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | Token Array Size: 3 | Father 2
											-->> "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 3
												Token: 1 | Priority: 0
												Token: + | Priority: 0
												Token: 1 | Priority: 0
											<<-- "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 3 | Highest Priority Token: <+> | 0 3
											Core Token: >+< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 3
											LHS: >1<
											RHS: >1<
											LHS Tokens: 1 | RHS Tokens: 1
											-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
											<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 2 | Own Index: 4 | Nodes under Father: 3
											-->> "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | Token Array Size: 1 | Father 4
												-->> "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 1
												Token: 1 | Priority: 0
											<<-- "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 1 | Highest Priority Token: <1> | 0 5
											Core Token: >1< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 5
											LHS Tokens: 0 | RHS Tokens: 0
											-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
											<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 4 | Own Index: 5 | Nodes under Father: 2
										<<-- "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | PASS
										LHS of size 1 under father 4
										-->> "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | Token Array Size: 1 | Father 4
											-->> "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 1
												Token: 1 | Priority: 0
											<<-- "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 1 | Highest Priority Token: <1> | 0 5
											Core Token: >1< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 5
											LHS Tokens: 0 | RHS Tokens: 0
											-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
											<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 4 | Own Index: 6 | Nodes under Father: 3
										<<-- "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | PASS
										RHS of size 1 under father 4
									<<-- "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | PASS
									RHS of size 3 under father 2
								<<-- "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | PASS
								RHS of size 5 under father 0
							<<-- "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | PASS
							-->> "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Index: 0
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afaa4 | Begin: 1 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 0 | Stack size: 1
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 7 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 0
										Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 0 | Depth: 1
										Found children || Index 2 | Own Index: 2 | Father Index: 0 | Own Priority 1 | Children: 2 | Depth: 1
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 1 | Index: 0
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 7 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 1
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 2 | Index: 1
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 7 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 2
										Found children || Index 3 | Own Index: 3 | Father Index: 2 | Own Priority 0 | Children: 0 | Depth: 2
										Found children || Index 4 | Own Index: 4 | Father Index: 2 | Own Priority 1 | Children: 2 | Depth: 2
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 3 | Index: 2
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 7 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 3
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 4 | Index: 3
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 7 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 4
										Found children || Index 5 | Own Index: 5 | Father Index: 4 | Own Priority 0 | Children: 0 | Depth: 3
										Found children || Index 6 | Own Index: 6 | Father Index: 4 | Own Priority 1 | Children: 0 | Depth: 3
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 5 | Index: 4
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 7 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 5
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 6 | Index: 5
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 7 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 6
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 7 | Index: 6
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 7 | Stack size: 0
							<<-- "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
							-->> "static int User::Equation_parser::aggregate_tree_token_sum_diff(User::Tree<User::Equation_parser::Token>&)" |
								-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 1
								<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
								-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 2
								<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
								-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 0
								<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
								-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 3
								<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
								-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 4
								<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
								-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 2
								<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
								Candidate 4
								-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 4
									Found children || Index 5 | Own Index: 5 | Father Index: 4 | Own Priority 0 | Children: 0 | Depth: 3
									Found children || Index 6 | Own Index: 6 | Father Index: 4 | Own Priority 1 | Children: 0 | Depth: 3
								<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
								Children: 2
								-->> "bool User::Tree<Payload>::move(size_t, size_t, User::Tree<Payload>::Move_mode) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::relink_node_nocheck(size_t, size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Target Index: 5 | New Father: 2
										Relink Node 5 as child of 2
										With priority 2 of 3
										Old father 4 now has 1 children
										Previous sibling 6 now has priority 0 of 1
									<<-- "bool User::Tree<Payload>::relink_node_nocheck(size_t, size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
								<<-- "bool User::Tree<Payload>::move(size_t, size_t, User::Tree<Payload>::Move_mode) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Success: OK
								-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 4
									Found children || Index 6 | Own Index: 6 | Father Index: 4 | Own Priority 0 | Children: 0 | Depth: 3
								<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 1 | 1 children
								Children: 1
								-->> "bool User::Tree<Payload>::move(size_t, size_t, User::Tree<Payload>::Move_mode) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::relink_node_nocheck(size_t, size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Target Index: 6 | New Father: 2
										Relink Node 6 as child of 2
										With priority 3 of 4
										Old father 4 now has 0 children
									<<-- "bool User::Tree<Payload>::relink_node_nocheck(size_t, size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
								<<-- "bool User::Tree<Payload>::move(size_t, size_t, User::Tree<Payload>::Move_mode) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Success: OK
								-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 4
								<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
								-->> "bool User::Tree<Payload>::erease(size_t, User::Tree<Payload>::Erease_mode) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::bump_children(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
										-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 4
										<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
									<<-- "bool User::Tree<Payload>::bump_children(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | target node has 0 children to be bumped as siblings
									-->> "bool User::Tree<Payload>::erease_single_node(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Erease index 4
										Erease node: 5
										Father 2 now has 3 children
										Adjust priority of node 5 to 1
										Adjusted own index of node 4
										Adjust priority of node 6 to 2
										Adjusted own index of node 5
									<<-- "bool User::Tree<Payload>::erease_single_node(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
								<<-- "bool User::Tree<Payload>::erease(size_t, User::Tree<Payload>::Erease_mode) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
								-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 1
								<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
								-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 2
								<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
								-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 0
								<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
								-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 3
								<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
								-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 4
								<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
								-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 5
								<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
							<<-- "static int User::Equation_parser::aggregate_tree_token_sum_diff(User::Tree<User::Equation_parser::Token>&)" | Ereased: 1 | Moved: 2
							-->> "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Index: 0
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afaa4 | Begin: 1 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 0 | Stack size: 1
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 6 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 0
										Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 0 | Depth: 1
										Found children || Index 2 | Own Index: 2 | Father Index: 0 | Own Priority 1 | Children: 3 | Depth: 1
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 1 | Index: 0
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 6 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 1
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 2 | Index: 1
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 6 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 2
										Found children || Index 3 | Own Index: 3 | Father Index: 2 | Own Priority 0 | Children: 0 | Depth: 2
										Found children || Index 4 | Own Index: 4 | Father Index: 2 | Own Priority 1 | Children: 0 | Depth: 2
										Found children || Index 5 | Own Index: 5 | Father Index: 2 | Own Priority 2 | Children: 0 | Depth: 2
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 3 | 3 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 3 | Index: 2
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 6 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 3
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 4 | Index: 3
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 6 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 4
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 5 | Index: 4
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 6 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 5
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 6 | Index: 5
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 6 | Stack size: 0
							<<-- "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
						<<-- "bool User::Equation_parser::parse(std::__cxx11::string)" | Token array size: 7 | Token tree size: 6
						TOKEN0
						TOKEN1
						TOKEN2
						TOKEN3
						TOKEN4
						TOKEN5
						TOKEN6
						-->> "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Index: 0
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afbf4 | Begin: 1 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 0 | Stack size: 1
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 6 | Stack size: 0
							-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
								-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 0
									Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 0 | Depth: 1
									Found children || Index 2 | Own Index: 2 | Father Index: 0 | Own Priority 1 | Children: 3 | Depth: 1
								<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
							<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 1 | Index: 0
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 6 | Stack size: 0
							-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
								-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 1
								<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
							<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 2 | Index: 1
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 6 | Stack size: 0
							-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
								-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 2
									Found children || Index 3 | Own Index: 3 | Father Index: 2 | Own Priority 0 | Children: 0 | Depth: 2
									Found children || Index 4 | Own Index: 4 | Father Index: 2 | Own Priority 1 | Children: 0 | Depth: 2
									Found children || Index 5 | Own Index: 5 | Father Index: 2 | Own Priority 2 | Children: 0 | Depth: 2
								<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 3 | 3 children
							<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 3 | Index: 2
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 6 | Stack size: 0
							-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
								-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 3
								<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
							<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 4 | Index: 3
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 6 | Stack size: 0
							-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
								-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 4
								<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
							<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 5 | Index: 4
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 6 | Stack size: 0
							-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
								-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 5
								<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
							<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 6 | Index: 5
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 6 | Stack size: 0
						<<-- "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
						-->> "User::Tree<Payload>::Tree(std::vector<User::Tree<Payload>::St_minimal_node>) [with Payload = User::Equation_parser::Token]" | This: 007afdb8 | Nodes: 6
							-->> "bool User::Tree<Payload>::init_class_vars(Payload) [with Payload = User::Equation_parser::Token]" |
							<<-- "bool User::Tree<Payload>::init_class_vars(Payload) [with Payload = User::Equation_parser::Token]" |
							-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
							<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 0 | Own Index: 1 | Nodes under Father: 2
							-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
							<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 0 | Own Index: 2 | Nodes under Father: 3
							-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
							<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 2 | Own Index: 3 | Nodes under Father: 2
							-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
							<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 2 | Own Index: 4 | Nodes under Father: 3
							-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
							<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 2 | Own Index: 5 | Nodes under Father: 4
							-->> "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Index: 0
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afbf4 | Begin: 1 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 0 | Stack size: 1
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 6 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 0
										Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 0 | Depth: 1
										Found children || Index 2 | Own Index: 2 | Father Index: 0 | Own Priority 1 | Children: 3 | Depth: 1
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 1 | Index: 0
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 6 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 1
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 2 | Index: 1
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 6 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 2
										Found children || Index 3 | Own Index: 3 | Father Index: 2 | Own Priority 0 | Children: 0 | Depth: 2
										Found children || Index 4 | Own Index: 4 | Father Index: 2 | Own Priority 1 | Children: 0 | Depth: 2
										Found children || Index 5 | Own Index: 5 | Father Index: 2 | Own Priority 2 | Children: 0 | Depth: 2
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 3 | 3 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 3 | Index: 2
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 6 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 3
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 4 | Index: 3
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 6 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 4
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 5 | Index: 4
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 6 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 5
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 6 | Index: 5
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 6 | Stack size: 0
							<<-- "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
							-->> "bool User::Tree<Payload>::operator==(User::Tree<Payload>&) [with Payload = User::Equation_parser::Token]" |
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afb6c | Begin: 1 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 0 | Stack size: 1
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afb3c | Begin: 1 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 0 | Stack size: 1
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afb9c | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 6 | Stack size: 0
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afbcc | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 6 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 0
										Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 0 | Depth: 1
										Found children || Index 2 | Own Index: 2 | Father Index: 0 | Own Priority 1 | Children: 3 | Depth: 1
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 1 | Index: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 0
										Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 0 | Depth: 1
										Found children || Index 2 | Own Index: 2 | Father Index: 0 | Own Priority 1 | Children: 3 | Depth: 1
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 1 | Index: 0
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afb9c | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 6 | Stack size: 0
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afbcc | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 6 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 1
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 2 | Index: 1
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 1
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 2 | Index: 1
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afb9c | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 6 | Stack size: 0
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afbcc | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 6 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 2
										Found children || Index 3 | Own Index: 3 | Father Index: 2 | Own Priority 0 | Children: 0 | Depth: 2
										Found children || Index 4 | Own Index: 4 | Father Index: 2 | Own Priority 1 | Children: 0 | Depth: 2
										Found children || Index 5 | Own Index: 5 | Father Index: 2 | Own Priority 2 | Children: 0 | Depth: 2
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 3 | 3 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 3 | Index: 2
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 2
										Found children || Index 3 | Own Index: 3 | Father Index: 2 | Own Priority 0 | Children: 0 | Depth: 2
										Found children || Index 4 | Own Index: 4 | Father Index: 2 | Own Priority 1 | Children: 0 | Depth: 2
										Found children || Index 5 | Own Index: 5 | Father Index: 2 | Own Priority 2 | Children: 0 | Depth: 2
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 3 | 3 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 3 | Index: 2
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afb9c | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 6 | Stack size: 0
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afbcc | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 6 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 3
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 4 | Index: 3
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 3
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 4 | Index: 3
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afb9c | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 6 | Stack size: 0
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afbcc | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 6 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 4
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 5 | Index: 4
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 4
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 5 | Index: 4
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afb9c | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 6 | Stack size: 0
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afbcc | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 6 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 5
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 6 | Index: 5
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 5
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 6 | Index: 5
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afb9c | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 6 | Stack size: 0
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afbcc | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 6 | Stack size: 0
							<<-- "bool User::Tree<Payload>::operator==(User::Tree<Payload>&) [with Payload = User::Equation_parser::Token]" | Same
							PASS pattern: 14
							-->> "User::Tree<Payload>::~Tree() [with Payload = User::Equation_parser::Token]" | This: 007afdb8
							<<-- "User::Tree<Payload>::~Tree() [with Payload = User::Equation_parser::Token]" |
							-->> "User::Tree<Payload>::~Tree() [with Payload = User::Equation_parser::Token]" | This: 007afd6c
							<<-- "User::Tree<Payload>::~Tree() [with Payload = User::Equation_parser::Token]" |
							PATTERN15 >28=1+2+3+4+5+6+7<
							-->> "bool User::Equation_parser::parse(std::__cxx11::string)" | Parse: 28=1+2+3+4+5+6+7 | Size: 16
								-->> "static bool User::Equation_parser::equation_to_token_array(std::__cxx11::string, std::vector<std::__cxx11::basic_string<char> >&, std::vector<User::Equation_parser::Token>&)" | Parse: 28=1+2+3+4+5+6+7 | Size: 16
									SEEK_NEXT_TOKEN | Decode: >>2<<
									TOKEN_NUMBER | Decode: >>8<<
									TOKEN_NUMBER | Decode: >>=<<
									Token fully decoded:  28 | type: 0 | size: 2
									Tokens decoded: 1
									SEEK_NEXT_TOKEN | Decode: >>=<<
									-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >>=<<
									<<-- "static bool User::Equation_parser::is_symbol(char)" | N
									-->> "static bool User::Equation_parser::is_operator(char)" | Digit: >>=<<
									<<-- "static bool User::Equation_parser::is_operator(char)" | Y
									Operator detected: >>=<< | Token: =
									Token fully decoded:  = | type: 2 | size: 1
									Tokens decoded: 2
									SEEK_NEXT_TOKEN | Decode: >>1<<
									TOKEN_NUMBER | Decode: >>+<<
									Token fully decoded:  1 | type: 0 | size: 1
									Tokens decoded: 3
									SEEK_NEXT_TOKEN | Decode: >>+<<
									-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >>+<<
									<<-- "static bool User::Equation_parser::is_symbol(char)" | N
									-->> "static bool User::Equation_parser::is_operator(char)" | Digit: >>+<<
									<<-- "static bool User::Equation_parser::is_operator(char)" | Y
									Operator detected: >>+<< | Token: +
									Token fully decoded:  + | type: 2 | size: 1
									Tokens decoded: 4
									SEEK_NEXT_TOKEN | Decode: >>2<<
									TOKEN_NUMBER | Decode: >>+<<
									Token fully decoded:  2 | type: 0 | size: 1
									Tokens decoded: 5
									SEEK_NEXT_TOKEN | Decode: >>+<<
									-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >>+<<
									<<-- "static bool User::Equation_parser::is_symbol(char)" | N
									-->> "static bool User::Equation_parser::is_operator(char)" | Digit: >>+<<
									<<-- "static bool User::Equation_parser::is_operator(char)" | Y
									Operator detected: >>+<< | Token: +
									Token fully decoded:  + | type: 2 | size: 1
									Tokens decoded: 6
									SEEK_NEXT_TOKEN | Decode: >>3<<
									TOKEN_NUMBER | Decode: >>+<<
									Token fully decoded:  3 | type: 0 | size: 1
									Tokens decoded: 7
									SEEK_NEXT_TOKEN | Decode: >>+<<
									-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >>+<<
									<<-- "static bool User::Equation_parser::is_symbol(char)" | N
									-->> "static bool User::Equation_parser::is_operator(char)" | Digit: >>+<<
									<<-- "static bool User::Equation_parser::is_operator(char)" | Y
									Operator detected: >>+<< | Token: +
									Token fully decoded:  + | type: 2 | size: 1
									Tokens decoded: 8
									SEEK_NEXT_TOKEN | Decode: >>4<<
									TOKEN_NUMBER | Decode: >>+<<
									Token fully decoded:  4 | type: 0 | size: 1
									Tokens decoded: 9
									SEEK_NEXT_TOKEN | Decode: >>+<<
									-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >>+<<
									<<-- "static bool User::Equation_parser::is_symbol(char)" | N
									-->> "static bool User::Equation_parser::is_operator(char)" | Digit: >>+<<
									<<-- "static bool User::Equation_parser::is_operator(char)" | Y
									Operator detected: >>+<< | Token: +
									Token fully decoded:  + | type: 2 | size: 1
									Tokens decoded: 10
									SEEK_NEXT_TOKEN | Decode: >>5<<
									TOKEN_NUMBER | Decode: >>+<<
									Token fully decoded:  5 | type: 0 | size: 1
									Tokens decoded: 11
									SEEK_NEXT_TOKEN | Decode: >>+<<
									-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >>+<<
									<<-- "static bool User::Equation_parser::is_symbol(char)" | N
									-->> "static bool User::Equation_parser::is_operator(char)" | Digit: >>+<<
									<<-- "static bool User::Equation_parser::is_operator(char)" | Y
									Operator detected: >>+<< | Token: +
									Token fully decoded:  + | type: 2 | size: 1
									Tokens decoded: 12
									SEEK_NEXT_TOKEN | Decode: >>6<<
									TOKEN_NUMBER | Decode: >>+<<
									Token fully decoded:  6 | type: 0 | size: 1
									Tokens decoded: 13
									SEEK_NEXT_TOKEN | Decode: >>+<<
									-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >>+<<
									<<-- "static bool User::Equation_parser::is_symbol(char)" | N
									-->> "static bool User::Equation_parser::is_operator(char)" | Digit: >>+<<
									<<-- "static bool User::Equation_parser::is_operator(char)" | Y
									Operator detected: >>+<< | Token: +
									Token fully decoded:  + | type: 2 | size: 1
									Tokens decoded: 14
									SEEK_NEXT_TOKEN | Decode: >>7<<
									Token fully decoded:  7 | type: 0 | size: 1
									Tokens decoded: 15
									Equations decoded into 15 tokens
									Token: >>28<< | Type: 0 | Size: 2
									Token: >>=<< | Type: 2 | Size: 1
									Token: >>1<< | Type: 0 | Size: 1
									Token: >>+<< | Type: 2 | Size: 1
									Token: >>2<< | Type: 0 | Size: 1
									Token: >>+<< | Type: 2 | Size: 1
									Token: >>3<< | Type: 0 | Size: 1
									Token: >>+<< | Type: 2 | Size: 1
									Token: >>4<< | Type: 0 | Size: 1
									Token: >>+<< | Type: 2 | Size: 1
									Token: >>5<< | Type: 0 | Size: 1
									Token: >>+<< | Type: 2 | Size: 1
									Token: >>6<< | Type: 0 | Size: 1
									Token: >>+<< | Type: 2 | Size: 1
									Token: >>7<< | Type: 0 | Size: 1
								<<-- "static bool User::Equation_parser::equation_to_token_array(std::__cxx11::string, std::vector<std::__cxx11::basic_string<char> >&, std::vector<User::Equation_parser::Token>&)" | Decoded 15 tokens
								Tree wasn't empty: 6 | FLUSH
								-->> "bool User::Tree<Payload>::flush() [with Payload = User::Equation_parser::Token]" | Nodes inside the tree: 6
									-->> "bool User::Tree<Payload>::init_root() [with Payload = User::Equation_parser::Token]" |
									<<-- "bool User::Tree<Payload>::init_root() [with Payload = User::Equation_parser::Token]" |
								<<-- "bool User::Tree<Payload>::flush() [with Payload = User::Equation_parser::Token]" | Nodes inside the tree: 1
								-->> "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | Token Array Size: 15 | Father 0
									-->> "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 15
										Token: 28 | Priority: 0
										Token: = | Priority: 0
										Token: 1 | Priority: 0
										Token: + | Priority: 0
										Token: 2 | Priority: 0
										Token: + | Priority: 0
										Token: 3 | Priority: 0
										Token: + | Priority: 0
										Token: 4 | Priority: 0
										Token: + | Priority: 0
										Token: 5 | Priority: 0
										Token: + | Priority: 0
										Token: 6 | Priority: 0
										Token: + | Priority: 0
										Token: 7 | Priority: 0
									<<-- "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 15 | Highest Priority Token: <=> | 0 0
									Core Token: >=< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 0
									LHS: >28<
									RHS: >1<
									RHS: >+<
									RHS: >2<
									RHS: >+<
									RHS: >3<
									RHS: >+<
									RHS: >4<
									RHS: >+<
									RHS: >5<
									RHS: >+<
									RHS: >6<
									RHS: >+<
									RHS: >7<
									LHS Tokens: 1 | RHS Tokens: 13
									ROOT: >=<
									-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 0
									<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
									LHS: >=<
									-->> "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | Token Array Size: 1 | Father 0
										-->> "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 1
											Token: 28 | Priority: 0
										<<-- "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 1 | Highest Priority Token: <28> | 0 5
										Core Token: >28< | Size: 2 | Open/Close Priority: 0 | Symbol Priority: 5
										LHS Tokens: 0 | RHS Tokens: 0
										-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 0
										<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
										-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
										<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 0 | Own Index: 1 | Nodes under Father: 2
									<<-- "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | PASS
									LHS of size 1 under father 0
									-->> "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | Token Array Size: 13 | Father 0
										-->> "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 13
											Token: 1 | Priority: 0
											Token: + | Priority: 0
											Token: 2 | Priority: 0
											Token: + | Priority: 0
											Token: 3 | Priority: 0
											Token: + | Priority: 0
											Token: 4 | Priority: 0
											Token: + | Priority: 0
											Token: 5 | Priority: 0
											Token: + | Priority: 0
											Token: 6 | Priority: 0
											Token: + | Priority: 0
											Token: 7 | Priority: 0
										<<-- "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 13 | Highest Priority Token: <+> | 0 3
										Core Token: >+< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 3
										LHS: >1<
										RHS: >2<
										RHS: >+<
										RHS: >3<
										RHS: >+<
										RHS: >4<
										RHS: >+<
										RHS: >5<
										RHS: >+<
										RHS: >6<
										RHS: >+<
										RHS: >7<
										LHS Tokens: 1 | RHS Tokens: 11
										-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
										<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 0 | Own Index: 2 | Nodes under Father: 3
										-->> "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | Token Array Size: 1 | Father 2
											-->> "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 1
												Token: 1 | Priority: 0
											<<-- "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 1 | Highest Priority Token: <1> | 0 5
											Core Token: >1< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 5
											LHS Tokens: 0 | RHS Tokens: 0
											-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
											<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 2 | Own Index: 3 | Nodes under Father: 2
										<<-- "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | PASS
										LHS of size 1 under father 2
										-->> "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | Token Array Size: 11 | Father 2
											-->> "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 11
												Token: 2 | Priority: 0
												Token: + | Priority: 0
												Token: 3 | Priority: 0
												Token: + | Priority: 0
												Token: 4 | Priority: 0
												Token: + | Priority: 0
												Token: 5 | Priority: 0
												Token: + | Priority: 0
												Token: 6 | Priority: 0
												Token: + | Priority: 0
												Token: 7 | Priority: 0
											<<-- "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 11 | Highest Priority Token: <+> | 0 3
											Core Token: >+< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 3
											LHS: >2<
											RHS: >3<
											RHS: >+<
											RHS: >4<
											RHS: >+<
											RHS: >5<
											RHS: >+<
											RHS: >6<
											RHS: >+<
											RHS: >7<
											LHS Tokens: 1 | RHS Tokens: 9
											-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
											<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 2 | Own Index: 4 | Nodes under Father: 3
											-->> "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | Token Array Size: 1 | Father 4
												-->> "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 1
												Token: 2 | Priority: 0
											<<-- "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 1 | Highest Priority Token: <2> | 0 5
											Core Token: >2< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 5
											LHS Tokens: 0 | RHS Tokens: 0
											-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
											<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 4 | Own Index: 5 | Nodes under Father: 2
										<<-- "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | PASS
										LHS of size 1 under father 4
										-->> "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | Token Array Size: 9 | Father 4
											-->> "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 9
												Token: 3 | Priority: 0
												Token: + | Priority: 0
												Token: 4 | Priority: 0
												Token: + | Priority: 0
												Token: 5 | Priority: 0
												Token: + | Priority: 0
												Token: 6 | Priority: 0
												Token: + | Priority: 0
												Token: 7 | Priority: 0
											<<-- "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 9 | Highest Priority Token: <+> | 0 3
											Core Token: >+< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 3
											LHS: >3<
											RHS: >4<
											RHS: >+<
											RHS: >5<
											RHS: >+<
											RHS: >6<
											RHS: >+<
											RHS: >7<
											LHS Tokens: 1 | RHS Tokens: 7
											-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
											<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 4 | Own Index: 6 | Nodes under Father: 3
											-->> "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | Token Array Size: 1 | Father 6
												-->> "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 1
												Token: 3 | Priority: 0
											<<-- "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 1 | Highest Priority Token: <3> | 0 5
											Core Token: >3< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 5
											LHS Tokens: 0 | RHS Tokens: 0
											-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
											<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 6 | Own Index: 7 | Nodes under Father: 2
										<<-- "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | PASS
										LHS of size 1 under father 6
										-->> "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | Token Array Size: 7 | Father 6
											-->> "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 7
												Token: 4 | Priority: 0
												Token: + | Priority: 0
												Token: 5 | Priority: 0
												Token: + | Priority: 0
												Token: 6 | Priority: 0
												Token: + | Priority: 0
												Token: 7 | Priority: 0
											<<-- "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 7 | Highest Priority Token: <+> | 0 3
											Core Token: >+< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 3
											LHS: >4<
											RHS: >5<
											RHS: >+<
											RHS: >6<
											RHS: >+<
											RHS: >7<
											LHS Tokens: 1 | RHS Tokens: 5
											-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
											<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 6 | Own Index: 8 | Nodes under Father: 3
											-->> "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | Token Array Size: 1 | Father 8
												-->> "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 1
												Token: 4 | Priority: 0
											<<-- "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 1 | Highest Priority Token: <4> | 0 5
											Core Token: >4< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 5
											LHS Tokens: 0 | RHS Tokens: 0
											-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
											<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 8 | Own Index: 9 | Nodes under Father: 2
										<<-- "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | PASS
										LHS of size 1 under father 8
										-->> "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | Token Array Size: 5 | Father 8
											-->> "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 5
												Token: 5 | Priority: 0
												Token: + | Priority: 0
												Token: 6 | Priority: 0
												Token: + | Priority: 0
												Token: 7 | Priority: 0
											<<-- "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 5 | Highest Priority Token: <+> | 0 3
											Core Token: >+< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 3
											LHS: >5<
											RHS: >6<
											RHS: >+<
											RHS: >7<
											LHS Tokens: 1 | RHS Tokens: 3
											-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
											<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 8 | Own Index: 10 | Nodes under Father: 3
											-->> "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | Token Array Size: 1 | Father 10
												-->> "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 1
												Token: 5 | Priority: 0
											<<-- "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 1 | Highest Priority Token: <5> | 0 5
											Core Token: >5< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 5
											LHS Tokens: 0 | RHS Tokens: 0
											-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
											<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 10 | Own Index: 11 | Nodes under Father: 2
										<<-- "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | PASS
										LHS of size 1 under father 10
										-->> "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | Token Array Size: 3 | Father 10
											-->> "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 3
												Token: 6 | Priority: 0
												Token: + | Priority: 0
												Token: 7 | Priority: 0
											<<-- "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 3 | Highest Priority Token: <+> | 0 3
											Core Token: >+< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 3
											LHS: >6<
											RHS: >7<
											LHS Tokens: 1 | RHS Tokens: 1
											-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
											<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 10 | Own Index: 12 | Nodes under Father: 3
											-->> "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | Token Array Size: 1 | Father 12
												-->> "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 1
												Token: 6 | Priority: 0
											<<-- "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 1 | Highest Priority Token: <6> | 0 5
											Core Token: >6< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 5
											LHS Tokens: 0 | RHS Tokens: 0
											-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
											<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 12 | Own Index: 13 | Nodes under Father: 2
										<<-- "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | PASS
										LHS of size 1 under father 12
										-->> "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | Token Array Size: 1 | Father 12
											-->> "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 1
												Token: 7 | Priority: 0
											<<-- "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 1 | Highest Priority Token: <7> | 0 5
											Core Token: >7< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 5
											LHS Tokens: 0 | RHS Tokens: 0
											-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
											<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 12 | Own Index: 14 | Nodes under Father: 3
										<<-- "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | PASS
										RHS of size 1 under father 12
									<<-- "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | PASS
									RHS of size 3 under father 10
								<<-- "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | PASS
								RHS of size 5 under father 8
							<<-- "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | PASS
							RHS of size 7 under father 6
						<<-- "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | PASS
						RHS of size 9 under father 4
					<<-- "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | PASS
					RHS of size 11 under father 2
				<<-- "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | PASS
				RHS of size 13 under father 0
			<<-- "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | PASS
			-->> "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Index: 0
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afaa4 | Begin: 1 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 0 | Stack size: 1
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 0
						Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 0 | Depth: 1
						Found children || Index 2 | Own Index: 2 | Father Index: 0 | Own Priority 1 | Children: 2 | Depth: 1
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 1 | Index: 0
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 1
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 2 | Index: 1
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 2
						Found children || Index 3 | Own Index: 3 | Father Index: 2 | Own Priority 0 | Children: 0 | Depth: 2
						Found children || Index 4 | Own Index: 4 | Father Index: 2 | Own Priority 1 | Children: 2 | Depth: 2
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 3 | Index: 2
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 3
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 4 | Index: 3
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 4
						Found children || Index 5 | Own Index: 5 | Father Index: 4 | Own Priority 0 | Children: 0 | Depth: 3
						Found children || Index 6 | Own Index: 6 | Father Index: 4 | Own Priority 1 | Children: 2 | Depth: 3
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 5 | Index: 4
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 5
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 6 | Index: 5
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 6
						Found children || Index 7 | Own Index: 7 | Father Index: 6 | Own Priority 0 | Children: 0 | Depth: 4
						Found children || Index 8 | Own Index: 8 | Father Index: 6 | Own Priority 1 | Children: 2 | Depth: 4
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 7 | Index: 6
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 7
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 8 | Index: 7
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 8
						Found children || Index 9 | Own Index: 9 | Father Index: 8 | Own Priority 0 | Children: 0 | Depth: 5
						Found children || Index 10 | Own Index: 10 | Father Index: 8 | Own Priority 1 | Children: 2 | Depth: 5
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 9 | Index: 8
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 9
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 10 | Index: 9
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 10
						Found children || Index 11 | Own Index: 11 | Father Index: 10 | Own Priority 0 | Children: 0 | Depth: 6
						Found children || Index 12 | Own Index: 12 | Father Index: 10 | Own Priority 1 | Children: 2 | Depth: 6
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 11 | Index: 10
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 11
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 12 | Index: 11
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 12
						Found children || Index 13 | Own Index: 13 | Father Index: 12 | Own Priority 0 | Children: 0 | Depth: 7
						Found children || Index 14 | Own Index: 14 | Father Index: 12 | Own Priority 1 | Children: 0 | Depth: 7
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 13 | Index: 12
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 13
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 14 | Index: 13
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 14
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 15 | Index: 14
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
			<<-- "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
			-->> "static int User::Equation_parser::aggregate_tree_token_sum_diff(User::Tree<User::Equation_parser::Token>&)" |
				-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 1
				<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 2
				<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 0
				<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 3
				<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 4
				<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 2
				<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				Candidate 4
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 4
					Found children || Index 5 | Own Index: 5 | Father Index: 4 | Own Priority 0 | Children: 0 | Depth: 3
					Found children || Index 6 | Own Index: 6 | Father Index: 4 | Own Priority 1 | Children: 2 | Depth: 3
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
				Children: 2
				-->> "bool User::Tree<Payload>::move(size_t, size_t, User::Tree<Payload>::Move_mode) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::relink_node_nocheck(size_t, size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Target Index: 5 | New Father: 2
						Relink Node 5 as child of 2
						With priority 2 of 3
						Old father 4 now has 1 children
						Previous sibling 6 now has priority 0 of 1
					<<-- "bool User::Tree<Payload>::relink_node_nocheck(size_t, size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				<<-- "bool User::Tree<Payload>::move(size_t, size_t, User::Tree<Payload>::Move_mode) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Success: OK
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 4
					Found children || Index 6 | Own Index: 6 | Father Index: 4 | Own Priority 0 | Children: 2 | Depth: 3
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 1 | 1 children
				Children: 1
				-->> "bool User::Tree<Payload>::move(size_t, size_t, User::Tree<Payload>::Move_mode) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::relink_node_nocheck(size_t, size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Target Index: 6 | New Father: 2
						Relink Node 6 as child of 2
						With priority 3 of 4
						Old father 4 now has 0 children
					<<-- "bool User::Tree<Payload>::relink_node_nocheck(size_t, size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				<<-- "bool User::Tree<Payload>::move(size_t, size_t, User::Tree<Payload>::Move_mode) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Success: OK
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 4
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
				-->> "bool User::Tree<Payload>::erease(size_t, User::Tree<Payload>::Erease_mode) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::bump_children(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
						-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 4
						<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
					<<-- "bool User::Tree<Payload>::bump_children(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | target node has 0 children to be bumped as siblings
					-->> "bool User::Tree<Payload>::erease_single_node(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Erease index 4
						Erease node: 5
						Father 2 now has 3 children
						Adjust priority of node 5 to 1
						Adjusted own index of node 4
						Adjust priority of node 6 to 2
						Adjusted own index of node 5
						Adjusted own index of node 6
						Adjusted father of node 6 to 5
						Adjusted own index of node 7
						Adjusted father of node 7 to 5
						Adjusted own index of node 8
						Adjusted father of node 8 to 7
						Adjusted own index of node 9
						Adjusted father of node 9 to 7
						Adjusted own index of node 10
						Adjusted father of node 10 to 9
						Adjusted own index of node 11
						Adjusted father of node 11 to 9
						Adjusted own index of node 12
						Adjusted father of node 12 to 11
						Adjusted own index of node 13
						Adjusted father of node 13 to 11
					<<-- "bool User::Tree<Payload>::erease_single_node(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				<<-- "bool User::Tree<Payload>::erease(size_t, User::Tree<Payload>::Erease_mode) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 1
				<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 2
				<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 0
				<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 3
				<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 4
				<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 5
				<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 2
				<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				Candidate 5
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 5
					Found children || Index 6 | Own Index: 6 | Father Index: 5 | Own Priority 0 | Children: 0 | Depth: 4
					Found children || Index 7 | Own Index: 7 | Father Index: 5 | Own Priority 1 | Children: 2 | Depth: 4
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
				Children: 2
				-->> "bool User::Tree<Payload>::move(size_t, size_t, User::Tree<Payload>::Move_mode) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::relink_node_nocheck(size_t, size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Target Index: 6 | New Father: 2
						Relink Node 6 as child of 2
						With priority 3 of 4
						Old father 5 now has 1 children
						Previous sibling 7 now has priority 0 of 1
					<<-- "bool User::Tree<Payload>::relink_node_nocheck(size_t, size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				<<-- "bool User::Tree<Payload>::move(size_t, size_t, User::Tree<Payload>::Move_mode) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Success: OK
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 5
					Found children || Index 7 | Own Index: 7 | Father Index: 5 | Own Priority 0 | Children: 2 | Depth: 4
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 1 | 1 children
				Children: 1
				-->> "bool User::Tree<Payload>::move(size_t, size_t, User::Tree<Payload>::Move_mode) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::relink_node_nocheck(size_t, size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Target Index: 7 | New Father: 2
						Relink Node 7 as child of 2
						With priority 4 of 5
						Old father 5 now has 0 children
					<<-- "bool User::Tree<Payload>::relink_node_nocheck(size_t, size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				<<-- "bool User::Tree<Payload>::move(size_t, size_t, User::Tree<Payload>::Move_mode) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Success: OK
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 5
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
				-->> "bool User::Tree<Payload>::erease(size_t, User::Tree<Payload>::Erease_mode) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::bump_children(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
						-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 5
						<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
					<<-- "bool User::Tree<Payload>::bump_children(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | target node has 0 children to be bumped as siblings
					-->> "bool User::Tree<Payload>::erease_single_node(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Erease index 5
						Erease node: 6
						Father 2 now has 4 children
						Adjust priority of node 6 to 2
						Adjusted own index of node 5
						Adjust priority of node 7 to 3
						Adjusted own index of node 6
						Adjusted own index of node 7
						Adjusted father of node 7 to 6
						Adjusted own index of node 8
						Adjusted father of node 8 to 6
						Adjusted own index of node 9
						Adjusted father of node 9 to 8
						Adjusted own index of node 10
						Adjusted father of node 10 to 8
						Adjusted own index of node 11
						Adjusted father of node 11 to 10
						Adjusted own index of node 12
						Adjusted father of node 12 to 10
					<<-- "bool User::Tree<Payload>::erease_single_node(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				<<-- "bool User::Tree<Payload>::erease(size_t, User::Tree<Payload>::Erease_mode) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 1
				<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 2
				<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 0
				<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 3
				<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 4
				<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 5
				<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 6
				<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 2
				<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				Candidate 6
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 6
					Found children || Index 7 | Own Index: 7 | Father Index: 6 | Own Priority 0 | Children: 0 | Depth: 5
					Found children || Index 8 | Own Index: 8 | Father Index: 6 | Own Priority 1 | Children: 2 | Depth: 5
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
				Children: 2
				-->> "bool User::Tree<Payload>::move(size_t, size_t, User::Tree<Payload>::Move_mode) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::relink_node_nocheck(size_t, size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Target Index: 7 | New Father: 2
						Relink Node 7 as child of 2
						With priority 4 of 5
						Old father 6 now has 1 children
						Previous sibling 8 now has priority 0 of 1
					<<-- "bool User::Tree<Payload>::relink_node_nocheck(size_t, size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				<<-- "bool User::Tree<Payload>::move(size_t, size_t, User::Tree<Payload>::Move_mode) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Success: OK
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 6
					Found children || Index 8 | Own Index: 8 | Father Index: 6 | Own Priority 0 | Children: 2 | Depth: 5
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 1 | 1 children
				Children: 1
				-->> "bool User::Tree<Payload>::move(size_t, size_t, User::Tree<Payload>::Move_mode) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::relink_node_nocheck(size_t, size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Target Index: 8 | New Father: 2
						Relink Node 8 as child of 2
						With priority 5 of 6
						Old father 6 now has 0 children
					<<-- "bool User::Tree<Payload>::relink_node_nocheck(size_t, size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				<<-- "bool User::Tree<Payload>::move(size_t, size_t, User::Tree<Payload>::Move_mode) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Success: OK
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 6
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
				-->> "bool User::Tree<Payload>::erease(size_t, User::Tree<Payload>::Erease_mode) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::bump_children(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
						-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 6
						<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
					<<-- "bool User::Tree<Payload>::bump_children(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | target node has 0 children to be bumped as siblings
					-->> "bool User::Tree<Payload>::erease_single_node(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Erease index 6
						Erease node: 7
						Father 2 now has 5 children
						Adjust priority of node 7 to 3
						Adjusted own index of node 6
						Adjust priority of node 8 to 4
						Adjusted own index of node 7
						Adjusted own index of node 8
						Adjusted father of node 8 to 7
						Adjusted own index of node 9
						Adjusted father of node 9 to 7
						Adjusted own index of node 10
						Adjusted father of node 10 to 9
						Adjusted own index of node 11
						Adjusted father of node 11 to 9
					<<-- "bool User::Tree<Payload>::erease_single_node(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				<<-- "bool User::Tree<Payload>::erease(size_t, User::Tree<Payload>::Erease_mode) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 1
				<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 2
				<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 0
				<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 3
				<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 4
				<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 5
				<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 6
				<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 7
				<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 2
				<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				Candidate 7
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 7
					Found children || Index 8 | Own Index: 8 | Father Index: 7 | Own Priority 0 | Children: 0 | Depth: 6
					Found children || Index 9 | Own Index: 9 | Father Index: 7 | Own Priority 1 | Children: 2 | Depth: 6
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
				Children: 2
				-->> "bool User::Tree<Payload>::move(size_t, size_t, User::Tree<Payload>::Move_mode) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::relink_node_nocheck(size_t, size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Target Index: 8 | New Father: 2
						Relink Node 8 as child of 2
						With priority 5 of 6
						Old father 7 now has 1 children
						Previous sibling 9 now has priority 0 of 1
					<<-- "bool User::Tree<Payload>::relink_node_nocheck(size_t, size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				<<-- "bool User::Tree<Payload>::move(size_t, size_t, User::Tree<Payload>::Move_mode) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Success: OK
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 7
					Found children || Index 9 | Own Index: 9 | Father Index: 7 | Own Priority 0 | Children: 2 | Depth: 6
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 1 | 1 children
				Children: 1
				-->> "bool User::Tree<Payload>::move(size_t, size_t, User::Tree<Payload>::Move_mode) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::relink_node_nocheck(size_t, size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Target Index: 9 | New Father: 2
						Relink Node 9 as child of 2
						With priority 6 of 7
						Old father 7 now has 0 children
					<<-- "bool User::Tree<Payload>::relink_node_nocheck(size_t, size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				<<-- "bool User::Tree<Payload>::move(size_t, size_t, User::Tree<Payload>::Move_mode) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Success: OK
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 7
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
				-->> "bool User::Tree<Payload>::erease(size_t, User::Tree<Payload>::Erease_mode) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::bump_children(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
						-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 7
						<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
					<<-- "bool User::Tree<Payload>::bump_children(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | target node has 0 children to be bumped as siblings
					-->> "bool User::Tree<Payload>::erease_single_node(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Erease index 7
						Erease node: 8
						Father 2 now has 6 children
						Adjust priority of node 8 to 4
						Adjusted own index of node 7
						Adjust priority of node 9 to 5
						Adjusted own index of node 8
						Adjusted own index of node 9
						Adjusted father of node 9 to 8
						Adjusted own index of node 10
						Adjusted father of node 10 to 8
					<<-- "bool User::Tree<Payload>::erease_single_node(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				<<-- "bool User::Tree<Payload>::erease(size_t, User::Tree<Payload>::Erease_mode) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 1
				<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 2
				<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 0
				<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 3
				<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 4
				<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 5
				<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 6
				<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 7
				<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 8
				<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 2
				<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				Candidate 8
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 8
					Found children || Index 9 | Own Index: 9 | Father Index: 8 | Own Priority 0 | Children: 0 | Depth: 7
					Found children || Index 10 | Own Index: 10 | Father Index: 8 | Own Priority 1 | Children: 0 | Depth: 7
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
				Children: 2
				-->> "bool User::Tree<Payload>::move(size_t, size_t, User::Tree<Payload>::Move_mode) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::relink_node_nocheck(size_t, size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Target Index: 9 | New Father: 2
						Relink Node 9 as child of 2
						With priority 6 of 7
						Old father 8 now has 1 children
						Previous sibling 10 now has priority 0 of 1
					<<-- "bool User::Tree<Payload>::relink_node_nocheck(size_t, size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				<<-- "bool User::Tree<Payload>::move(size_t, size_t, User::Tree<Payload>::Move_mode) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Success: OK
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 8
					Found children || Index 10 | Own Index: 10 | Father Index: 8 | Own Priority 0 | Children: 0 | Depth: 7
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 1 | 1 children
				Children: 1
				-->> "bool User::Tree<Payload>::move(size_t, size_t, User::Tree<Payload>::Move_mode) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::relink_node_nocheck(size_t, size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Target Index: 10 | New Father: 2
						Relink Node 10 as child of 2
						With priority 7 of 8
						Old father 8 now has 0 children
					<<-- "bool User::Tree<Payload>::relink_node_nocheck(size_t, size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				<<-- "bool User::Tree<Payload>::move(size_t, size_t, User::Tree<Payload>::Move_mode) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Success: OK
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 8
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
				-->> "bool User::Tree<Payload>::erease(size_t, User::Tree<Payload>::Erease_mode) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::bump_children(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
						-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 8
						<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
					<<-- "bool User::Tree<Payload>::bump_children(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | target node has 0 children to be bumped as siblings
					-->> "bool User::Tree<Payload>::erease_single_node(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Erease index 8
						Erease node: 9
						Father 2 now has 7 children
						Adjust priority of node 9 to 5
						Adjusted own index of node 8
						Adjust priority of node 10 to 6
						Adjusted own index of node 9
					<<-- "bool User::Tree<Payload>::erease_single_node(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				<<-- "bool User::Tree<Payload>::erease(size_t, User::Tree<Payload>::Erease_mode) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 1
				<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 2
				<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 0
				<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 3
				<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 4
				<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 5
				<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 6
				<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 7
				<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 8
				<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 9
				<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
			<<-- "static int User::Equation_parser::aggregate_tree_token_sum_diff(User::Tree<User::Equation_parser::Token>&)" | Ereased: 5 | Moved: 10
			-->> "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Index: 0
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afaa4 | Begin: 1 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 0 | Stack size: 1
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 10 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 0
						Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 0 | Depth: 1
						Found children || Index 2 | Own Index: 2 | Father Index: 0 | Own Priority 1 | Children: 7 | Depth: 1
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 1 | Index: 0
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 10 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 1
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 2 | Index: 1
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 10 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 2
						Found children || Index 3 | Own Index: 3 | Father Index: 2 | Own Priority 0 | Children: 0 | Depth: 2
						Found children || Index 4 | Own Index: 4 | Father Index: 2 | Own Priority 1 | Children: 0 | Depth: 2
						Found children || Index 5 | Own Index: 5 | Father Index: 2 | Own Priority 2 | Children: 0 | Depth: 2
						Found children || Index 6 | Own Index: 6 | Father Index: 2 | Own Priority 3 | Children: 0 | Depth: 2
						Found children || Index 7 | Own Index: 7 | Father Index: 2 | Own Priority 4 | Children: 0 | Depth: 2
						Found children || Index 8 | Own Index: 8 | Father Index: 2 | Own Priority 5 | Children: 0 | Depth: 2
						Found children || Index 9 | Own Index: 9 | Father Index: 2 | Own Priority 6 | Children: 0 | Depth: 2
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 7 | 7 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 3 | Index: 2
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 10 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 3
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 4 | Index: 3
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 10 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 4
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 5 | Index: 4
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 10 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 5
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 6 | Index: 5
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 10 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 6
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 7 | Index: 6
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 10 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 7
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 8 | Index: 7
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 10 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 8
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 9 | Index: 8
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 10 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 9
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 10 | Index: 9
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 10 | Stack size: 0
			<<-- "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
		<<-- "bool User::Equation_parser::parse(std::__cxx11::string)" | Token array size: 15 | Token tree size: 10
		TOKEN0
		TOKEN1
		TOKEN2
		TOKEN3
		TOKEN4
		TOKEN5
		TOKEN6
		TOKEN7
		TOKEN8
		TOKEN9
		TOKEN10
		TOKEN11
		TOKEN12
		TOKEN13
		TOKEN14
		-->> "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Index: 0
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afbf4 | Begin: 1 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 0 | Stack size: 1
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 10 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 0
					Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 0 | Depth: 1
					Found children || Index 2 | Own Index: 2 | Father Index: 0 | Own Priority 1 | Children: 7 | Depth: 1
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 1 | Index: 0
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 10 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 1
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 2 | Index: 1
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 10 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 2
					Found children || Index 3 | Own Index: 3 | Father Index: 2 | Own Priority 0 | Children: 0 | Depth: 2
					Found children || Index 4 | Own Index: 4 | Father Index: 2 | Own Priority 1 | Children: 0 | Depth: 2
					Found children || Index 5 | Own Index: 5 | Father Index: 2 | Own Priority 2 | Children: 0 | Depth: 2
					Found children || Index 6 | Own Index: 6 | Father Index: 2 | Own Priority 3 | Children: 0 | Depth: 2
					Found children || Index 7 | Own Index: 7 | Father Index: 2 | Own Priority 4 | Children: 0 | Depth: 2
					Found children || Index 8 | Own Index: 8 | Father Index: 2 | Own Priority 5 | Children: 0 | Depth: 2
					Found children || Index 9 | Own Index: 9 | Father Index: 2 | Own Priority 6 | Children: 0 | Depth: 2
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 7 | 7 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 3 | Index: 2
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 10 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 3
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 4 | Index: 3
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 10 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 4
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 5 | Index: 4
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 10 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 5
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 6 | Index: 5
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 10 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 6
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 7 | Index: 6
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 10 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 7
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 8 | Index: 7
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 10 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 8
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 9 | Index: 8
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 10 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 9
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 10 | Index: 9
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 10 | Stack size: 0
		<<-- "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
		-->> "User::Tree<Payload>::Tree(std::vector<User::Tree<Payload>::St_minimal_node>) [with Payload = User::Equation_parser::Token]" | This: 007afdb8 | Nodes: 10
			-->> "bool User::Tree<Payload>::init_class_vars(Payload) [with Payload = User::Equation_parser::Token]" |
			<<-- "bool User::Tree<Payload>::init_class_vars(Payload) [with Payload = User::Equation_parser::Token]" |
			-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
			<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 0 | Own Index: 1 | Nodes under Father: 2
			-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
			<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 0 | Own Index: 2 | Nodes under Father: 3
			-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
			<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 2 | Own Index: 3 | Nodes under Father: 2
			-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
			<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 2 | Own Index: 4 | Nodes under Father: 3
			-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
			<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 2 | Own Index: 5 | Nodes under Father: 4
			-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
			<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 2 | Own Index: 6 | Nodes under Father: 5
			-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
			<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 2 | Own Index: 7 | Nodes under Father: 6
			-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
			<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 2 | Own Index: 8 | Nodes under Father: 7
			-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
			<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 2 | Own Index: 9 | Nodes under Father: 8
			-->> "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Index: 0
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afbf4 | Begin: 1 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 0 | Stack size: 1
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 10 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 0
						Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 0 | Depth: 1
						Found children || Index 2 | Own Index: 2 | Father Index: 0 | Own Priority 1 | Children: 7 | Depth: 1
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 1 | Index: 0
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 10 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 1
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 2 | Index: 1
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 10 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 2
						Found children || Index 3 | Own Index: 3 | Father Index: 2 | Own Priority 0 | Children: 0 | Depth: 2
						Found children || Index 4 | Own Index: 4 | Father Index: 2 | Own Priority 1 | Children: 0 | Depth: 2
						Found children || Index 5 | Own Index: 5 | Father Index: 2 | Own Priority 2 | Children: 0 | Depth: 2
						Found children || Index 6 | Own Index: 6 | Father Index: 2 | Own Priority 3 | Children: 0 | Depth: 2
						Found children || Index 7 | Own Index: 7 | Father Index: 2 | Own Priority 4 | Children: 0 | Depth: 2
						Found children || Index 8 | Own Index: 8 | Father Index: 2 | Own Priority 5 | Children: 0 | Depth: 2
						Found children || Index 9 | Own Index: 9 | Father Index: 2 | Own Priority 6 | Children: 0 | Depth: 2
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 7 | 7 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 3 | Index: 2
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 10 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 3
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 4 | Index: 3
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 10 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 4
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 5 | Index: 4
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 10 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 5
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 6 | Index: 5
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 10 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 6
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 7 | Index: 6
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 10 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 7
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 8 | Index: 7
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 10 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 8
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 9 | Index: 8
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 10 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 9
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 10 | Index: 9
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 10 | Stack size: 0
			<<-- "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
			-->> "bool User::Tree<Payload>::operator==(User::Tree<Payload>&) [with Payload = User::Equation_parser::Token]" |
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afb6c | Begin: 1 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 0 | Stack size: 1
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afb3c | Begin: 1 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 0 | Stack size: 1
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afb9c | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 10 | Stack size: 0
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afbcc | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 10 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 0
						Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 0 | Depth: 1
						Found children || Index 2 | Own Index: 2 | Father Index: 0 | Own Priority 1 | Children: 7 | Depth: 1
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 1 | Index: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 0
						Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 0 | Depth: 1
						Found children || Index 2 | Own Index: 2 | Father Index: 0 | Own Priority 1 | Children: 7 | Depth: 1
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 1 | Index: 0
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afb9c | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 10 | Stack size: 0
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afbcc | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 10 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 1
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 2 | Index: 1
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 1
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 2 | Index: 1
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afb9c | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 10 | Stack size: 0
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afbcc | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 10 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 2
						Found children || Index 3 | Own Index: 3 | Father Index: 2 | Own Priority 0 | Children: 0 | Depth: 2
						Found children || Index 4 | Own Index: 4 | Father Index: 2 | Own Priority 1 | Children: 0 | Depth: 2
						Found children || Index 5 | Own Index: 5 | Father Index: 2 | Own Priority 2 | Children: 0 | Depth: 2
						Found children || Index 6 | Own Index: 6 | Father Index: 2 | Own Priority 3 | Children: 0 | Depth: 2
						Found children || Index 7 | Own Index: 7 | Father Index: 2 | Own Priority 4 | Children: 0 | Depth: 2
						Found children || Index 8 | Own Index: 8 | Father Index: 2 | Own Priority 5 | Children: 0 | Depth: 2
						Found children || Index 9 | Own Index: 9 | Father Index: 2 | Own Priority 6 | Children: 0 | Depth: 2
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 7 | 7 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 3 | Index: 2
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 2
						Found children || Index 3 | Own Index: 3 | Father Index: 2 | Own Priority 0 | Children: 0 | Depth: 2
						Found children || Index 4 | Own Index: 4 | Father Index: 2 | Own Priority 1 | Children: 0 | Depth: 2
						Found children || Index 5 | Own Index: 5 | Father Index: 2 | Own Priority 2 | Children: 0 | Depth: 2
						Found children || Index 6 | Own Index: 6 | Father Index: 2 | Own Priority 3 | Children: 0 | Depth: 2
						Found children || Index 7 | Own Index: 7 | Father Index: 2 | Own Priority 4 | Children: 0 | Depth: 2
						Found children || Index 8 | Own Index: 8 | Father Index: 2 | Own Priority 5 | Children: 0 | Depth: 2
						Found children || Index 9 | Own Index: 9 | Father Index: 2 | Own Priority 6 | Children: 0 | Depth: 2
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 7 | 7 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 3 | Index: 2
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afb9c | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 10 | Stack size: 0
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afbcc | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 10 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 3
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 4 | Index: 3
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 3
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 4 | Index: 3
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afb9c | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 10 | Stack size: 0
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afbcc | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 10 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 4
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 5 | Index: 4
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 4
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 5 | Index: 4
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afb9c | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 10 | Stack size: 0
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afbcc | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 10 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 5
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 6 | Index: 5
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 5
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 6 | Index: 5
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afb9c | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 10 | Stack size: 0
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afbcc | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 10 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 6
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 7 | Index: 6
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 6
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 7 | Index: 6
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afb9c | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 10 | Stack size: 0
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afbcc | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 10 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 7
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 8 | Index: 7
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 7
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 8 | Index: 7
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afb9c | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 10 | Stack size: 0
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afbcc | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 10 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 8
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 9 | Index: 8
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 8
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 9 | Index: 8
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afb9c | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 10 | Stack size: 0
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afbcc | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 10 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 9
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 10 | Index: 9
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 9
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 10 | Index: 9
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afb9c | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 10 | Stack size: 0
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afbcc | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 10 | Stack size: 0
			<<-- "bool User::Tree<Payload>::operator==(User::Tree<Payload>&) [with Payload = User::Equation_parser::Token]" | Same
			PASS pattern: 15
			-->> "User::Tree<Payload>::~Tree() [with Payload = User::Equation_parser::Token]" | This: 007afdb8
			<<-- "User::Tree<Payload>::~Tree() [with Payload = User::Equation_parser::Token]" |
			-->> "User::Tree<Payload>::~Tree() [with Payload = User::Equation_parser::Token]" | This: 007afd6c
			<<-- "User::Tree<Payload>::~Tree() [with Payload = User::Equation_parser::Token]" |
			PATTERN16 >Y=1+(3*X)+2+(5*sephiroth +100 +101)+4<
			-->> "bool User::Equation_parser::parse(std::__cxx11::string)" | Parse: Y=1+(3*X)+2+(5*sephiroth +100 +101)+4 | Size: 37
				-->> "static bool User::Equation_parser::equation_to_token_array(std::__cxx11::string, std::vector<std::__cxx11::basic_string<char> >&, std::vector<User::Equation_parser::Token>&)" | Parse: Y=1+(3*X)+2+(5*sephiroth +100 +101)+4 | Size: 37
					SEEK_NEXT_TOKEN | Decode: >>Y<<
					-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >>Y<<
					<<-- "static bool User::Equation_parser::is_symbol(char)" | Y
					TOKEN_SYMBOL | Decode: >>=<<
					-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >>=<<
					<<-- "static bool User::Equation_parser::is_symbol(char)" | N
					Token fully decoded:  Y | type: 1 | size: 1
					Tokens decoded: 1
					SEEK_NEXT_TOKEN | Decode: >>=<<
					-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >>=<<
					<<-- "static bool User::Equation_parser::is_symbol(char)" | N
					-->> "static bool User::Equation_parser::is_operator(char)" | Digit: >>=<<
					<<-- "static bool User::Equation_parser::is_operator(char)" | Y
					Operator detected: >>=<< | Token: =
					Token fully decoded:  = | type: 2 | size: 1
					Tokens decoded: 2
					SEEK_NEXT_TOKEN | Decode: >>1<<
					TOKEN_NUMBER | Decode: >>+<<
					Token fully decoded:  1 | type: 0 | size: 1
					Tokens decoded: 3
					SEEK_NEXT_TOKEN | Decode: >>+<<
					-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >>+<<
					<<-- "static bool User::Equation_parser::is_symbol(char)" | N
					-->> "static bool User::Equation_parser::is_operator(char)" | Digit: >>+<<
					<<-- "static bool User::Equation_parser::is_operator(char)" | Y
					Operator detected: >>+<< | Token: +
					Token fully decoded:  + | type: 2 | size: 1
					Tokens decoded: 4
					SEEK_NEXT_TOKEN | Decode: >>(<<
					-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >>(<<
					<<-- "static bool User::Equation_parser::is_symbol(char)" | N
					-->> "static bool User::Equation_parser::is_operator(char)" | Digit: >>(<<
					<<-- "static bool User::Equation_parser::is_operator(char)" | N
					Open detected: >>(<< | Token: (
					Token fully decoded:  ( | type: 3 | size: 1
					Tokens decoded: 5
					SEEK_NEXT_TOKEN | Decode: >>3<<
					TOKEN_NUMBER | Decode: >>*<<
					Token fully decoded:  3 | type: 0 | size: 1
					Tokens decoded: 6
					SEEK_NEXT_TOKEN | Decode: >>*<<
					-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >>*<<
					<<-- "static bool User::Equation_parser::is_symbol(char)" | N
					-->> "static bool User::Equation_parser::is_operator(char)" | Digit: >>*<<
					<<-- "static bool User::Equation_parser::is_operator(char)" | Y
					Operator detected: >>*<< | Token: *
					Token fully decoded:  * | type: 2 | size: 1
					Tokens decoded: 7
					SEEK_NEXT_TOKEN | Decode: >>X<<
					-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >>X<<
					<<-- "static bool User::Equation_parser::is_symbol(char)" | Y
					TOKEN_SYMBOL | Decode: >>)<<
					-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >>)<<
					<<-- "static bool User::Equation_parser::is_symbol(char)" | N
					Token fully decoded:  X | type: 1 | size: 1
					Tokens decoded: 8
					SEEK_NEXT_TOKEN | Decode: >>)<<
					-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >>)<<
					<<-- "static bool User::Equation_parser::is_symbol(char)" | N
					-->> "static bool User::Equation_parser::is_operator(char)" | Digit: >>)<<
					<<-- "static bool User::Equation_parser::is_operator(char)" | N
					Close detected: >>)<< | Token: )
					Token fully decoded:  ) | type: 4 | size: 1
					Tokens decoded: 9
					SEEK_NEXT_TOKEN | Decode: >>+<<
					-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >>+<<
					<<-- "static bool User::Equation_parser::is_symbol(char)" | N
					-->> "static bool User::Equation_parser::is_operator(char)" | Digit: >>+<<
					<<-- "static bool User::Equation_parser::is_operator(char)" | Y
					Operator detected: >>+<< | Token: +
					Token fully decoded:  + | type: 2 | size: 1
					Tokens decoded: 10
					SEEK_NEXT_TOKEN | Decode: >>2<<
					TOKEN_NUMBER | Decode: >>+<<
					Token fully decoded:  2 | type: 0 | size: 1
					Tokens decoded: 11
					SEEK_NEXT_TOKEN | Decode: >>+<<
					-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >>+<<
					<<-- "static bool User::Equation_parser::is_symbol(char)" | N
					-->> "static bool User::Equation_parser::is_operator(char)" | Digit: >>+<<
					<<-- "static bool User::Equation_parser::is_operator(char)" | Y
					Operator detected: >>+<< | Token: +
					Token fully decoded:  + | type: 2 | size: 1
					Tokens decoded: 12
					SEEK_NEXT_TOKEN | Decode: >>(<<
					-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >>(<<
					<<-- "static bool User::Equation_parser::is_symbol(char)" | N
					-->> "static bool User::Equation_parser::is_operator(char)" | Digit: >>(<<
					<<-- "static bool User::Equation_parser::is_operator(char)" | N
					Open detected: >>(<< | Token: (
					Token fully decoded:  ( | type: 3 | size: 1
					Tokens decoded: 13
					SEEK_NEXT_TOKEN | Decode: >>5<<
					TOKEN_NUMBER | Decode: >>*<<
					Token fully decoded:  5 | type: 0 | size: 1
					Tokens decoded: 14
					SEEK_NEXT_TOKEN | Decode: >>*<<
					-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >>*<<
					<<-- "static bool User::Equation_parser::is_symbol(char)" | N
					-->> "static bool User::Equation_parser::is_operator(char)" | Digit: >>*<<
					<<-- "static bool User::Equation_parser::is_operator(char)" | Y
					Operator detected: >>*<< | Token: *
					Token fully decoded:  * | type: 2 | size: 1
					Tokens decoded: 15
					SEEK_NEXT_TOKEN | Decode: >>s<<
					-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >>s<<
					<<-- "static bool User::Equation_parser::is_symbol(char)" | Y
					TOKEN_SYMBOL | Decode: >>e<<
					-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >>e<<
					<<-- "static bool User::Equation_parser::is_symbol(char)" | Y
					TOKEN_SYMBOL | Decode: >>p<<
					-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >>p<<
					<<-- "static bool User::Equation_parser::is_symbol(char)" | Y
					TOKEN_SYMBOL | Decode: >>h<<
					-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >>h<<
					<<-- "static bool User::Equation_parser::is_symbol(char)" | Y
					TOKEN_SYMBOL | Decode: >>i<<
					-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >>i<<
					<<-- "static bool User::Equation_parser::is_symbol(char)" | Y
					TOKEN_SYMBOL | Decode: >>r<<
					-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >>r<<
					<<-- "static bool User::Equation_parser::is_symbol(char)" | Y
					TOKEN_SYMBOL | Decode: >>o<<
					-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >>o<<
					<<-- "static bool User::Equation_parser::is_symbol(char)" | Y
					TOKEN_SYMBOL | Decode: >>t<<
					-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >>t<<
					<<-- "static bool User::Equation_parser::is_symbol(char)" | Y
					TOKEN_SYMBOL | Decode: >>h<<
					-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >>h<<
					<<-- "static bool User::Equation_parser::is_symbol(char)" | Y
					TOKEN_SYMBOL | Decode: >> <<
					-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >> <<
					<<-- "static bool User::Equation_parser::is_symbol(char)" | N
					Token fully decoded:  sephiroth | type: 1 | size: 9
					Tokens decoded: 16
					SEEK_NEXT_TOKEN | Decode: >> <<
					-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >> <<
					<<-- "static bool User::Equation_parser::is_symbol(char)" | N
					-->> "static bool User::Equation_parser::is_operator(char)" | Digit: >> <<
					<<-- "static bool User::Equation_parser::is_operator(char)" | N
					ERR1133: Invalid Digit >> <<
					SEEK_NEXT_TOKEN | Decode: >>+<<
					-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >>+<<
					<<-- "static bool User::Equation_parser::is_symbol(char)" | N
					-->> "static bool User::Equation_parser::is_operator(char)" | Digit: >>+<<
					<<-- "static bool User::Equation_parser::is_operator(char)" | Y
					Operator detected: >>+<< | Token: +
					Token fully decoded:  + | type: 2 | size: 1
					Tokens decoded: 17
					SEEK_NEXT_TOKEN | Decode: >>1<<
					TOKEN_NUMBER | Decode: >>0<<
					TOKEN_NUMBER | Decode: >>0<<
					TOKEN_NUMBER | Decode: >> <<
					Token fully decoded:  100 | type: 0 | size: 3
					Tokens decoded: 18
					SEEK_NEXT_TOKEN | Decode: >> <<
					-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >> <<
					<<-- "static bool User::Equation_parser::is_symbol(char)" | N
					-->> "static bool User::Equation_parser::is_operator(char)" | Digit: >> <<
					<<-- "static bool User::Equation_parser::is_operator(char)" | N
					ERR1133: Invalid Digit >> <<
					SEEK_NEXT_TOKEN | Decode: >>+<<
					-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >>+<<
					<<-- "static bool User::Equation_parser::is_symbol(char)" | N
					-->> "static bool User::Equation_parser::is_operator(char)" | Digit: >>+<<
					<<-- "static bool User::Equation_parser::is_operator(char)" | Y
					Operator detected: >>+<< | Token: +
					Token fully decoded:  + | type: 2 | size: 1
					Tokens decoded: 19
					SEEK_NEXT_TOKEN | Decode: >>1<<
					TOKEN_NUMBER | Decode: >>0<<
					TOKEN_NUMBER | Decode: >>1<<
					TOKEN_NUMBER | Decode: >>)<<
					Token fully decoded:  101 | type: 0 | size: 3
					Tokens decoded: 20
					SEEK_NEXT_TOKEN | Decode: >>)<<
					-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >>)<<
					<<-- "static bool User::Equation_parser::is_symbol(char)" | N
					-->> "static bool User::Equation_parser::is_operator(char)" | Digit: >>)<<
					<<-- "static bool User::Equation_parser::is_operator(char)" | N
					Close detected: >>)<< | Token: )
					Token fully decoded:  ) | type: 4 | size: 1
					Tokens decoded: 21
					SEEK_NEXT_TOKEN | Decode: >>+<<
					-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >>+<<
					<<-- "static bool User::Equation_parser::is_symbol(char)" | N
					-->> "static bool User::Equation_parser::is_operator(char)" | Digit: >>+<<
					<<-- "static bool User::Equation_parser::is_operator(char)" | Y
					Operator detected: >>+<< | Token: +
					Token fully decoded:  + | type: 2 | size: 1
					Tokens decoded: 22
					SEEK_NEXT_TOKEN | Decode: >>4<<
					Token fully decoded:  4 | type: 0 | size: 1
					Tokens decoded: 23
					Equations decoded into 23 tokens
					Token: >>Y<< | Type: 1 | Size: 1
					Token: >>=<< | Type: 2 | Size: 1
					Token: >>1<< | Type: 0 | Size: 1
					Token: >>+<< | Type: 2 | Size: 1
					Token: >>(<< | Type: 3 | Size: 1
					Token: >>3<< | Type: 0 | Size: 1
					Token: >>*<< | Type: 2 | Size: 1
					Token: >>X<< | Type: 1 | Size: 1
					Token: >>)<< | Type: 4 | Size: 1
					Token: >>+<< | Type: 2 | Size: 1
					Token: >>2<< | Type: 0 | Size: 1
					Token: >>+<< | Type: 2 | Size: 1
					Token: >>(<< | Type: 3 | Size: 1
					Token: >>5<< | Type: 0 | Size: 1
					Token: >>*<< | Type: 2 | Size: 1
					Token: >>sephiroth<< | Type: 1 | Size: 9
					Token: >>+<< | Type: 2 | Size: 1
					Token: >>100<< | Type: 0 | Size: 3
					Token: >>+<< | Type: 2 | Size: 1
					Token: >>101<< | Type: 0 | Size: 3
					Token: >>)<< | Type: 4 | Size: 1
					Token: >>+<< | Type: 2 | Size: 1
					Token: >>4<< | Type: 0 | Size: 1
				<<-- "static bool User::Equation_parser::equation_to_token_array(std::__cxx11::string, std::vector<std::__cxx11::basic_string<char> >&, std::vector<User::Equation_parser::Token>&)" | Decoded 23 tokens
				Tree wasn't empty: 10 | FLUSH
				-->> "bool User::Tree<Payload>::flush() [with Payload = User::Equation_parser::Token]" | Nodes inside the tree: 10
					-->> "bool User::Tree<Payload>::init_root() [with Payload = User::Equation_parser::Token]" |
					<<-- "bool User::Tree<Payload>::init_root() [with Payload = User::Equation_parser::Token]" |
				<<-- "bool User::Tree<Payload>::flush() [with Payload = User::Equation_parser::Token]" | Nodes inside the tree: 1
				-->> "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | Token Array Size: 23 | Father 0
					-->> "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 23
						Token: Y | Priority: 0
						Token: = | Priority: 0
						Token: 1 | Priority: 0
						Token: + | Priority: 0
						Open | Priority: 1
						Token: 3 | Priority: 1
						Token: * | Priority: 1
						Token: X | Priority: 1
						Close| Priority: 1
						Token: + | Priority: 0
						Token: 2 | Priority: 0
						Token: + | Priority: 0
						Open | Priority: 1
						Token: 5 | Priority: 1
						Token: * | Priority: 1
						Token: sephiroth | Priority: 1
						Token: + | Priority: 1
						Token: 100 | Priority: 1
						Token: + | Priority: 1
						Token: 101 | Priority: 1
						Close| Priority: 1
						Token: + | Priority: 0
						Token: 4 | Priority: 0
					<<-- "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 23 | Highest Priority Token: <=> | 0 0
					Core Token: >=< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 0
					LHS: >Y<
					RHS: >1<
					RHS: >+<
					RHS: >(<
					RHS: >3<
					RHS: >*<
					RHS: >X<
					RHS: >)<
					RHS: >+<
					RHS: >2<
					RHS: >+<
					RHS: >(<
					RHS: >5<
					RHS: >*<
					RHS: >sephiroth<
					RHS: >+<
					RHS: >100<
					RHS: >+<
					RHS: >101<
					RHS: >)<
					RHS: >+<
					RHS: >4<
					LHS Tokens: 1 | RHS Tokens: 21
					ROOT: >=<
					-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 0
					<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					LHS: >=<
					-->> "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | Token Array Size: 1 | Father 0
						-->> "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 1
							Token: Y | Priority: 0
						<<-- "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 1 | Highest Priority Token: <Y> | 0 4
						Core Token: >Y< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 4
						LHS Tokens: 0 | RHS Tokens: 0
						-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 0
						<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
						-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
						<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 0 | Own Index: 1 | Nodes under Father: 2
					<<-- "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | PASS
					LHS of size 1 under father 0
					-->> "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | Token Array Size: 21 | Father 0
						-->> "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 21
							Token: 1 | Priority: 0
							Token: + | Priority: 0
							Open | Priority: 1
							Token: 3 | Priority: 1
							Token: * | Priority: 1
							Token: X | Priority: 1
							Close| Priority: 1
							Token: + | Priority: 0
							Token: 2 | Priority: 0
							Token: + | Priority: 0
							Open | Priority: 1
							Token: 5 | Priority: 1
							Token: * | Priority: 1
							Token: sephiroth | Priority: 1
							Token: + | Priority: 1
							Token: 100 | Priority: 1
							Token: + | Priority: 1
							Token: 101 | Priority: 1
							Close| Priority: 1
							Token: + | Priority: 0
							Token: 4 | Priority: 0
						<<-- "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 21 | Highest Priority Token: <+> | 0 3
						Core Token: >+< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 3
						LHS: >1<
						RHS: >(<
						RHS: >3<
						RHS: >*<
						RHS: >X<
						RHS: >)<
						RHS: >+<
						RHS: >2<
						RHS: >+<
						RHS: >(<
						RHS: >5<
						RHS: >*<
						RHS: >sephiroth<
						RHS: >+<
						RHS: >100<
						RHS: >+<
						RHS: >101<
						RHS: >)<
						RHS: >+<
						RHS: >4<
						LHS Tokens: 1 | RHS Tokens: 19
						-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
						<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 0 | Own Index: 2 | Nodes under Father: 3
						-->> "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | Token Array Size: 1 | Father 2
							-->> "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 1
								Token: 1 | Priority: 0
							<<-- "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 1 | Highest Priority Token: <1> | 0 5
							Core Token: >1< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 5
							LHS Tokens: 0 | RHS Tokens: 0
							-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
							<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 2 | Own Index: 3 | Nodes under Father: 2
						<<-- "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | PASS
						LHS of size 1 under father 2
						-->> "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | Token Array Size: 19 | Father 2
							-->> "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 19
								Open | Priority: 1
								Token: 3 | Priority: 1
								Token: * | Priority: 1
								Token: X | Priority: 1
								Close| Priority: 1
								Token: + | Priority: 0
								Token: 2 | Priority: 0
								Token: + | Priority: 0
								Open | Priority: 1
								Token: 5 | Priority: 1
								Token: * | Priority: 1
								Token: sephiroth | Priority: 1
								Token: + | Priority: 1
								Token: 100 | Priority: 1
								Token: + | Priority: 1
								Token: 101 | Priority: 1
								Close| Priority: 1
								Token: + | Priority: 0
								Token: 4 | Priority: 0
							<<-- "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 19 | Highest Priority Token: <+> | 0 3
							Core Token: >+< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 3
							LHS: >(<
							LHS: >3<
							LHS: >*<
							LHS: >X<
							LHS: >)<
							RHS: >2<
							RHS: >+<
							RHS: >(<
							RHS: >5<
							RHS: >*<
							RHS: >sephiroth<
							RHS: >+<
							RHS: >100<
							RHS: >+<
							RHS: >101<
							RHS: >)<
							RHS: >+<
							RHS: >4<
							LHS Tokens: 5 | RHS Tokens: 13
							-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
							<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 2 | Own Index: 4 | Nodes under Father: 3
							-->> "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | Token Array Size: 5 | Father 4
								-->> "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 5
									Open | Priority: 1
									Token: 3 | Priority: 1
									Token: * | Priority: 1
									Token: X | Priority: 1
									Close| Priority: 1
									Delete Open 0 | Priority: 1 | Min Priority: 1 
									Delete Close 3 | Priority: 1 | Min Priority: 1 
									Deleted redundant priority tokens | Tokens: 3
								<<-- "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 3 | Highest Priority Token: <*> | 0 1
								Core Token: >*< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 1
								LHS: >3<
								RHS: >X<
								LHS Tokens: 1 | RHS Tokens: 1
								-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
								<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 4 | Own Index: 5 | Nodes under Father: 2
								-->> "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | Token Array Size: 1 | Father 5
									-->> "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 1
										Token: 3 | Priority: 0
									<<-- "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 1 | Highest Priority Token: <3> | 0 5
									Core Token: >3< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 5
									LHS Tokens: 0 | RHS Tokens: 0
									-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
									<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 5 | Own Index: 6 | Nodes under Father: 2
								<<-- "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | PASS
								LHS of size 1 under father 5
								-->> "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | Token Array Size: 1 | Father 5
									-->> "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 1
										Token: X | Priority: 0
									<<-- "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 1 | Highest Priority Token: <X> | 0 4
									Core Token: >X< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 4
									LHS Tokens: 0 | RHS Tokens: 0
									-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
									<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 5 | Own Index: 7 | Nodes under Father: 3
								<<-- "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | PASS
								RHS of size 1 under father 5
							<<-- "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | PASS
							LHS of size 3 under father 4
							-->> "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | Token Array Size: 13 | Father 4
								-->> "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 13
									Token: 2 | Priority: 0
									Token: + | Priority: 0
									Open | Priority: 1
									Token: 5 | Priority: 1
									Token: * | Priority: 1
									Token: sephiroth | Priority: 1
									Token: + | Priority: 1
									Token: 100 | Priority: 1
									Token: + | Priority: 1
									Token: 101 | Priority: 1
									Close| Priority: 1
									Token: + | Priority: 0
									Token: 4 | Priority: 0
								<<-- "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 13 | Highest Priority Token: <+> | 0 3
								Core Token: >+< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 3
								LHS: >2<
								RHS: >(<
								RHS: >5<
								RHS: >*<
								RHS: >sephiroth<
								RHS: >+<
								RHS: >100<
								RHS: >+<
								RHS: >101<
								RHS: >)<
								RHS: >+<
								RHS: >4<
								LHS Tokens: 1 | RHS Tokens: 11
								-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
								<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 4 | Own Index: 8 | Nodes under Father: 3
								-->> "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | Token Array Size: 1 | Father 8
									-->> "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 1
										Token: 2 | Priority: 0
									<<-- "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 1 | Highest Priority Token: <2> | 0 5
									Core Token: >2< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 5
									LHS Tokens: 0 | RHS Tokens: 0
									-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
									<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 8 | Own Index: 9 | Nodes under Father: 2
								<<-- "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | PASS
								LHS of size 1 under father 8
								-->> "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | Token Array Size: 11 | Father 8
									-->> "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 11
										Open | Priority: 1
										Token: 5 | Priority: 1
										Token: * | Priority: 1
										Token: sephiroth | Priority: 1
										Token: + | Priority: 1
										Token: 100 | Priority: 1
										Token: + | Priority: 1
										Token: 101 | Priority: 1
										Close| Priority: 1
										Token: + | Priority: 0
										Token: 4 | Priority: 0
									<<-- "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 11 | Highest Priority Token: <+> | 0 3
									Core Token: >+< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 3
									LHS: >(<
									LHS: >5<
									LHS: >*<
									LHS: >sephiroth<
									LHS: >+<
									LHS: >100<
									LHS: >+<
									LHS: >101<
									LHS: >)<
									RHS: >4<
									LHS Tokens: 9 | RHS Tokens: 1
									-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
									<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 8 | Own Index: 10 | Nodes under Father: 3
									-->> "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | Token Array Size: 9 | Father 10
										-->> "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 9
											Open | Priority: 1
											Token: 5 | Priority: 1
											Token: * | Priority: 1
											Token: sephiroth | Priority: 1
											Token: + | Priority: 1
											Token: 100 | Priority: 1
											Token: + | Priority: 1
											Token: 101 | Priority: 1
											Close| Priority: 1
											Delete Open 0 | Priority: 1 | Min Priority: 1 
											Delete Close 7 | Priority: 1 | Min Priority: 1 
											Deleted redundant priority tokens | Tokens: 7
										<<-- "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 7 | Highest Priority Token: <*> | 0 1
										Core Token: >*< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 1
										LHS: >5<
										RHS: >sephiroth<
										RHS: >+<
										RHS: >100<
										RHS: >+<
										RHS: >101<
										LHS Tokens: 1 | RHS Tokens: 5
										-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
										<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 10 | Own Index: 11 | Nodes under Father: 2
										-->> "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | Token Array Size: 1 | Father 11
											-->> "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 1
												Token: 5 | Priority: 0
											<<-- "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 1 | Highest Priority Token: <5> | 0 5
											Core Token: >5< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 5
											LHS Tokens: 0 | RHS Tokens: 0
											-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
											<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 11 | Own Index: 12 | Nodes under Father: 2
										<<-- "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | PASS
										LHS of size 1 under father 11
										-->> "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | Token Array Size: 5 | Father 11
											-->> "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 5
												Token: sephiroth | Priority: 0
												Token: + | Priority: 0
												Token: 100 | Priority: 0
												Token: + | Priority: 0
												Token: 101 | Priority: 0
											<<-- "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 5 | Highest Priority Token: <+> | 0 3
											Core Token: >+< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 3
											LHS: >sephiroth<
											RHS: >100<
											RHS: >+<
											RHS: >101<
											LHS Tokens: 1 | RHS Tokens: 3
											-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
											<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 11 | Own Index: 13 | Nodes under Father: 3
											-->> "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | Token Array Size: 1 | Father 13
												-->> "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 1
												Token: sephiroth | Priority: 0
											<<-- "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 1 | Highest Priority Token: <sephiroth> | 0 4
											Core Token: >sephiroth< | Size: 9 | Open/Close Priority: 0 | Symbol Priority: 4
											LHS Tokens: 0 | RHS Tokens: 0
											-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
											<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 13 | Own Index: 14 | Nodes under Father: 2
										<<-- "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | PASS
										LHS of size 1 under father 13
										-->> "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | Token Array Size: 3 | Father 13
											-->> "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 3
												Token: 100 | Priority: 0
												Token: + | Priority: 0
												Token: 101 | Priority: 0
											<<-- "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 3 | Highest Priority Token: <+> | 0 3
											Core Token: >+< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 3
											LHS: >100<
											RHS: >101<
											LHS Tokens: 1 | RHS Tokens: 1
											-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
											<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 13 | Own Index: 15 | Nodes under Father: 3
											-->> "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | Token Array Size: 1 | Father 15
												-->> "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 1
												Token: 100 | Priority: 0
											<<-- "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 1 | Highest Priority Token: <100> | 0 5
											Core Token: >100< | Size: 3 | Open/Close Priority: 0 | Symbol Priority: 5
											LHS Tokens: 0 | RHS Tokens: 0
											-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
											<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 15 | Own Index: 16 | Nodes under Father: 2
										<<-- "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | PASS
										LHS of size 1 under father 15
										-->> "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | Token Array Size: 1 | Father 15
											-->> "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 1
												Token: 101 | Priority: 0
											<<-- "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 1 | Highest Priority Token: <101> | 0 5
											Core Token: >101< | Size: 3 | Open/Close Priority: 0 | Symbol Priority: 5
											LHS Tokens: 0 | RHS Tokens: 0
											-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
											<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 15 | Own Index: 17 | Nodes under Father: 3
										<<-- "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | PASS
										RHS of size 1 under father 15
									<<-- "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | PASS
									RHS of size 3 under father 13
								<<-- "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | PASS
								RHS of size 5 under father 11
							<<-- "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | PASS
							LHS of size 7 under father 10
							-->> "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | Token Array Size: 1 | Father 10
								-->> "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 1
									Token: 4 | Priority: 0
								<<-- "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 1 | Highest Priority Token: <4> | 0 5
								Core Token: >4< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 5
								LHS Tokens: 0 | RHS Tokens: 0
								-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
								<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 10 | Own Index: 18 | Nodes under Father: 3
							<<-- "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | PASS
							RHS of size 1 under father 10
						<<-- "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | PASS
						RHS of size 11 under father 8
					<<-- "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | PASS
					RHS of size 13 under father 4
				<<-- "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | PASS
				RHS of size 19 under father 2
			<<-- "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | PASS
			RHS of size 21 under father 0
		<<-- "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | PASS
		-->> "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Index: 0
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afaa4 | Begin: 1 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 0 | Stack size: 1
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 19 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 0
					Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 0 | Depth: 1
					Found children || Index 2 | Own Index: 2 | Father Index: 0 | Own Priority 1 | Children: 2 | Depth: 1
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 1 | Index: 0
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 19 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 1
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 2 | Index: 1
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 19 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 2
					Found children || Index 3 | Own Index: 3 | Father Index: 2 | Own Priority 0 | Children: 0 | Depth: 2
					Found children || Index 4 | Own Index: 4 | Father Index: 2 | Own Priority 1 | Children: 2 | Depth: 2
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 3 | Index: 2
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 19 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 3
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 4 | Index: 3
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 19 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 4
					Found children || Index 5 | Own Index: 5 | Father Index: 4 | Own Priority 0 | Children: 2 | Depth: 3
					Found children || Index 8 | Own Index: 8 | Father Index: 4 | Own Priority 1 | Children: 2 | Depth: 3
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 5 | Index: 4
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 19 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 5
					Found children || Index 6 | Own Index: 6 | Father Index: 5 | Own Priority 0 | Children: 0 | Depth: 4
					Found children || Index 7 | Own Index: 7 | Father Index: 5 | Own Priority 1 | Children: 0 | Depth: 4
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 6 | Index: 5
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 19 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 6
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 7 | Index: 6
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 19 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 7
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 8 | Index: 7
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 19 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 8
					Found children || Index 9 | Own Index: 9 | Father Index: 8 | Own Priority 0 | Children: 0 | Depth: 4
					Found children || Index 10 | Own Index: 10 | Father Index: 8 | Own Priority 1 | Children: 2 | Depth: 4
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 9 | Index: 8
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 19 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 9
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 10 | Index: 9
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 19 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 10
					Found children || Index 11 | Own Index: 11 | Father Index: 10 | Own Priority 0 | Children: 2 | Depth: 5
					Found children || Index 18 | Own Index: 18 | Father Index: 10 | Own Priority 1 | Children: 0 | Depth: 5
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 11 | Index: 10
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 19 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 11
					Found children || Index 12 | Own Index: 12 | Father Index: 11 | Own Priority 0 | Children: 0 | Depth: 6
					Found children || Index 13 | Own Index: 13 | Father Index: 11 | Own Priority 1 | Children: 2 | Depth: 6
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 12 | Index: 11
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 19 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 12
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 13 | Index: 12
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 19 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 13
					Found children || Index 14 | Own Index: 14 | Father Index: 13 | Own Priority 0 | Children: 0 | Depth: 7
					Found children || Index 15 | Own Index: 15 | Father Index: 13 | Own Priority 1 | Children: 2 | Depth: 7
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 14 | Index: 13
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 19 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 14
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 15 | Index: 14
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 19 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 15
					Found children || Index 16 | Own Index: 16 | Father Index: 15 | Own Priority 0 | Children: 0 | Depth: 8
					Found children || Index 17 | Own Index: 17 | Father Index: 15 | Own Priority 1 | Children: 0 | Depth: 8
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 16 | Index: 15
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 19 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 16
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 17 | Index: 16
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 19 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 17
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 18 | Index: 17
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 19 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 18
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 19 | Index: 18
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 19 | Stack size: 0
		<<-- "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
		-->> "static int User::Equation_parser::aggregate_tree_token_sum_diff(User::Tree<User::Equation_parser::Token>&)" |
			-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 1
			<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
			-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 2
			<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
			-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 0
			<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
			-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 3
			<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
			-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 4
			<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
			-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 2
			<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
			Candidate 4
			-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 4
				Found children || Index 5 | Own Index: 5 | Father Index: 4 | Own Priority 0 | Children: 2 | Depth: 3
				Found children || Index 8 | Own Index: 8 | Father Index: 4 | Own Priority 1 | Children: 2 | Depth: 3
			<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
			Children: 2
			-->> "bool User::Tree<Payload>::move(size_t, size_t, User::Tree<Payload>::Move_mode) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::relink_node_nocheck(size_t, size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Target Index: 5 | New Father: 2
					Relink Node 5 as child of 2
					With priority 2 of 3
					Old father 4 now has 1 children
					Previous sibling 8 now has priority 0 of 1
				<<-- "bool User::Tree<Payload>::relink_node_nocheck(size_t, size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
			<<-- "bool User::Tree<Payload>::move(size_t, size_t, User::Tree<Payload>::Move_mode) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Success: OK
			-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 4
				Found children || Index 8 | Own Index: 8 | Father Index: 4 | Own Priority 0 | Children: 2 | Depth: 3
			<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 1 | 1 children
			Children: 1
			-->> "bool User::Tree<Payload>::move(size_t, size_t, User::Tree<Payload>::Move_mode) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::relink_node_nocheck(size_t, size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Target Index: 8 | New Father: 2
					Relink Node 8 as child of 2
					With priority 3 of 4
					Old father 4 now has 0 children
				<<-- "bool User::Tree<Payload>::relink_node_nocheck(size_t, size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
			<<-- "bool User::Tree<Payload>::move(size_t, size_t, User::Tree<Payload>::Move_mode) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Success: OK
			-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 4
			<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
			-->> "bool User::Tree<Payload>::erease(size_t, User::Tree<Payload>::Erease_mode) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::bump_children(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 4
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "bool User::Tree<Payload>::bump_children(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | target node has 0 children to be bumped as siblings
				-->> "bool User::Tree<Payload>::erease_single_node(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Erease index 4
					Erease node: 5
					Father 2 now has 3 children
					Adjust priority of node 5 to 1
					Adjusted own index of node 4
					Adjusted own index of node 5
					Adjusted father of node 5 to 4
					Adjusted own index of node 6
					Adjusted father of node 6 to 4
					Adjust priority of node 8 to 2
					Adjusted own index of node 7
					Adjusted own index of node 8
					Adjusted father of node 8 to 7
					Adjusted own index of node 9
					Adjusted father of node 9 to 7
					Adjusted own index of node 10
					Adjusted father of node 10 to 9
					Adjusted own index of node 11
					Adjusted father of node 11 to 10
					Adjusted own index of node 12
					Adjusted father of node 12 to 10
					Adjusted own index of node 13
					Adjusted father of node 13 to 12
					Adjusted own index of node 14
					Adjusted father of node 14 to 12
					Adjusted own index of node 15
					Adjusted father of node 15 to 14
					Adjusted own index of node 16
					Adjusted father of node 16 to 14
					Adjusted own index of node 17
					Adjusted father of node 17 to 9
				<<-- "bool User::Tree<Payload>::erease_single_node(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
			<<-- "bool User::Tree<Payload>::erease(size_t, User::Tree<Payload>::Erease_mode) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
			-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 1
			<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
			-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 2
			<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
			-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 0
			<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
			-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 3
			<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
			-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 4
			<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
			-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 5
			<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
			-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 6
			<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
			-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 7
			<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
			-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 2
			<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
			Candidate 7
			-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 7
				Found children || Index 8 | Own Index: 8 | Father Index: 7 | Own Priority 0 | Children: 0 | Depth: 4
				Found children || Index 9 | Own Index: 9 | Father Index: 7 | Own Priority 1 | Children: 2 | Depth: 4
			<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
			Children: 2
			-->> "bool User::Tree<Payload>::move(size_t, size_t, User::Tree<Payload>::Move_mode) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::relink_node_nocheck(size_t, size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Target Index: 8 | New Father: 2
					Relink Node 8 as child of 2
					With priority 3 of 4
					Old father 7 now has 1 children
					Previous sibling 9 now has priority 0 of 1
				<<-- "bool User::Tree<Payload>::relink_node_nocheck(size_t, size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
			<<-- "bool User::Tree<Payload>::move(size_t, size_t, User::Tree<Payload>::Move_mode) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Success: OK
			-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 7
				Found children || Index 9 | Own Index: 9 | Father Index: 7 | Own Priority 0 | Children: 2 | Depth: 4
			<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 1 | 1 children
			Children: 1
			-->> "bool User::Tree<Payload>::move(size_t, size_t, User::Tree<Payload>::Move_mode) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::relink_node_nocheck(size_t, size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Target Index: 9 | New Father: 2
					Relink Node 9 as child of 2
					With priority 4 of 5
					Old father 7 now has 0 children
				<<-- "bool User::Tree<Payload>::relink_node_nocheck(size_t, size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
			<<-- "bool User::Tree<Payload>::move(size_t, size_t, User::Tree<Payload>::Move_mode) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Success: OK
			-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 7
			<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
			-->> "bool User::Tree<Payload>::erease(size_t, User::Tree<Payload>::Erease_mode) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::bump_children(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 7
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "bool User::Tree<Payload>::bump_children(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | target node has 0 children to be bumped as siblings
				-->> "bool User::Tree<Payload>::erease_single_node(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Erease index 7
					Erease node: 8
					Father 2 now has 4 children
					Adjust priority of node 8 to 2
					Adjusted own index of node 7
					Adjust priority of node 9 to 3
					Adjusted own index of node 8
					Adjusted own index of node 9
					Adjusted father of node 9 to 8
					Adjusted own index of node 10
					Adjusted father of node 10 to 9
					Adjusted own index of node 11
					Adjusted father of node 11 to 9
					Adjusted own index of node 12
					Adjusted father of node 12 to 11
					Adjusted own index of node 13
					Adjusted father of node 13 to 11
					Adjusted own index of node 14
					Adjusted father of node 14 to 13
					Adjusted own index of node 15
					Adjusted father of node 15 to 13
					Adjusted own index of node 16
					Adjusted father of node 16 to 8
				<<-- "bool User::Tree<Payload>::erease_single_node(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
			<<-- "bool User::Tree<Payload>::erease(size_t, User::Tree<Payload>::Erease_mode) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
			-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 1
			<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
			-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 2
			<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
			-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 0
			<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
			-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 3
			<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
			-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 4
			<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
			-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 5
			<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
			-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 6
			<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
			-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 7
			<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
			-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 8
			<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
			-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 2
			<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
			Candidate 8
			-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 8
				Found children || Index 9 | Own Index: 9 | Father Index: 8 | Own Priority 0 | Children: 2 | Depth: 5
				Found children || Index 16 | Own Index: 16 | Father Index: 8 | Own Priority 1 | Children: 0 | Depth: 5
			<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
			Children: 2
			-->> "bool User::Tree<Payload>::move(size_t, size_t, User::Tree<Payload>::Move_mode) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::relink_node_nocheck(size_t, size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Target Index: 9 | New Father: 2
					Relink Node 9 as child of 2
					With priority 4 of 5
					Old father 8 now has 1 children
					Previous sibling 16 now has priority 0 of 1
				<<-- "bool User::Tree<Payload>::relink_node_nocheck(size_t, size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
			<<-- "bool User::Tree<Payload>::move(size_t, size_t, User::Tree<Payload>::Move_mode) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Success: OK
			-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 8
				Found children || Index 16 | Own Index: 16 | Father Index: 8 | Own Priority 0 | Children: 0 | Depth: 5
			<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 1 | 1 children
			Children: 1
			-->> "bool User::Tree<Payload>::move(size_t, size_t, User::Tree<Payload>::Move_mode) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::relink_node_nocheck(size_t, size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Target Index: 16 | New Father: 2
					Relink Node 16 as child of 2
					With priority 5 of 6
					Old father 8 now has 0 children
				<<-- "bool User::Tree<Payload>::relink_node_nocheck(size_t, size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
			<<-- "bool User::Tree<Payload>::move(size_t, size_t, User::Tree<Payload>::Move_mode) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Success: OK
			-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 8
			<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
			-->> "bool User::Tree<Payload>::erease(size_t, User::Tree<Payload>::Erease_mode) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::bump_children(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 8
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "bool User::Tree<Payload>::bump_children(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | target node has 0 children to be bumped as siblings
				-->> "bool User::Tree<Payload>::erease_single_node(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Erease index 8
					Erease node: 9
					Father 2 now has 5 children
					Adjust priority of node 9 to 3
					Adjusted own index of node 8
					Adjusted own index of node 9
					Adjusted father of node 9 to 8
					Adjusted own index of node 10
					Adjusted father of node 10 to 8
					Adjusted own index of node 11
					Adjusted father of node 11 to 10
					Adjusted own index of node 12
					Adjusted father of node 12 to 10
					Adjusted own index of node 13
					Adjusted father of node 13 to 12
					Adjusted own index of node 14
					Adjusted father of node 14 to 12
					Adjust priority of node 16 to 4
					Adjusted own index of node 15
				<<-- "bool User::Tree<Payload>::erease_single_node(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
			<<-- "bool User::Tree<Payload>::erease(size_t, User::Tree<Payload>::Erease_mode) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
			-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 1
			<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
			-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 2
			<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
			-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 0
			<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
			-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 3
			<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
			-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 4
			<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
			-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 5
			<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
			-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 6
			<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
			-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 7
			<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
			-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 8
			<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
			-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 9
			<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
			-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 10
			<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
			-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 8
			<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
			-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 11
			<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
			-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 12
			<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
			-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 10
			<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
			Candidate 12
			-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 12
				Found children || Index 13 | Own Index: 13 | Father Index: 12 | Own Priority 0 | Children: 0 | Depth: 8
				Found children || Index 14 | Own Index: 14 | Father Index: 12 | Own Priority 1 | Children: 0 | Depth: 8
			<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
			Children: 2
			-->> "bool User::Tree<Payload>::move(size_t, size_t, User::Tree<Payload>::Move_mode) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::relink_node_nocheck(size_t, size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Target Index: 13 | New Father: 10
					Relink Node 13 as child of 10
					With priority 2 of 3
					Old father 12 now has 1 children
					Previous sibling 14 now has priority 0 of 1
				<<-- "bool User::Tree<Payload>::relink_node_nocheck(size_t, size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
			<<-- "bool User::Tree<Payload>::move(size_t, size_t, User::Tree<Payload>::Move_mode) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Success: OK
			-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 12
				Found children || Index 14 | Own Index: 14 | Father Index: 12 | Own Priority 0 | Children: 0 | Depth: 8
			<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 1 | 1 children
			Children: 1
			-->> "bool User::Tree<Payload>::move(size_t, size_t, User::Tree<Payload>::Move_mode) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::relink_node_nocheck(size_t, size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Target Index: 14 | New Father: 10
					Relink Node 14 as child of 10
					With priority 3 of 4
					Old father 12 now has 0 children
				<<-- "bool User::Tree<Payload>::relink_node_nocheck(size_t, size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
			<<-- "bool User::Tree<Payload>::move(size_t, size_t, User::Tree<Payload>::Move_mode) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Success: OK
			-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 12
			<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
			-->> "bool User::Tree<Payload>::erease(size_t, User::Tree<Payload>::Erease_mode) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::bump_children(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 12
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "bool User::Tree<Payload>::bump_children(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | target node has 0 children to be bumped as siblings
				-->> "bool User::Tree<Payload>::erease_single_node(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Erease index 12
					Erease node: 13
					Father 10 now has 3 children
					Adjust priority of node 13 to 1
					Adjusted own index of node 12
					Adjust priority of node 14 to 2
					Adjusted own index of node 13
					Adjusted own index of node 14
				<<-- "bool User::Tree<Payload>::erease_single_node(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
			<<-- "bool User::Tree<Payload>::erease(size_t, User::Tree<Payload>::Erease_mode) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
			-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 1
			<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
			-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 2
			<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
			-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 0
			<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
			-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 3
			<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
			-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 4
			<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
			-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 5
			<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
			-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 6
			<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
			-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 7
			<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
			-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 8
			<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
			-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 9
			<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
			-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 10
			<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
			-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 8
			<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
			-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 11
			<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
			-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 12
			<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
			-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 13
			<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
			-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 14
			<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
		<<-- "static int User::Equation_parser::aggregate_tree_token_sum_diff(User::Tree<User::Equation_parser::Token>&)" | Ereased: 4 | Moved: 8
		-->> "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Index: 0
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afaa4 | Begin: 1 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 0 | Stack size: 1
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 0
					Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 0 | Depth: 1
					Found children || Index 2 | Own Index: 2 | Father Index: 0 | Own Priority 1 | Children: 5 | Depth: 1
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 1 | Index: 0
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 1
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 2 | Index: 1
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 2
					Found children || Index 3 | Own Index: 3 | Father Index: 2 | Own Priority 0 | Children: 0 | Depth: 2
					Found children || Index 4 | Own Index: 4 | Father Index: 2 | Own Priority 1 | Children: 2 | Depth: 2
					Found children || Index 7 | Own Index: 7 | Father Index: 2 | Own Priority 2 | Children: 0 | Depth: 2
					Found children || Index 8 | Own Index: 8 | Father Index: 2 | Own Priority 3 | Children: 2 | Depth: 2
					Found children || Index 14 | Own Index: 14 | Father Index: 2 | Own Priority 4 | Children: 0 | Depth: 2
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 5 | 5 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 3 | Index: 2
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 3
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 4 | Index: 3
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 4
					Found children || Index 5 | Own Index: 5 | Father Index: 4 | Own Priority 0 | Children: 0 | Depth: 4
					Found children || Index 6 | Own Index: 6 | Father Index: 4 | Own Priority 1 | Children: 0 | Depth: 4
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 5 | Index: 4
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 5
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
				ERR532: n_depth of children 4 is inconsistent with depth of father 2... FIXED
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 6 | Index: 5
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 6
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
				ERR532: n_depth of children 4 is inconsistent with depth of father 2... FIXED
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 7 | Index: 6
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 7
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 8 | Index: 7
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 8
					Found children || Index 9 | Own Index: 9 | Father Index: 8 | Own Priority 0 | Children: 0 | Depth: 6
					Found children || Index 10 | Own Index: 10 | Father Index: 8 | Own Priority 1 | Children: 3 | Depth: 6
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 9 | Index: 8
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 9
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
				ERR532: n_depth of children 6 is inconsistent with depth of father 2... FIXED
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 10 | Index: 9
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 10
					Found children || Index 11 | Own Index: 11 | Father Index: 10 | Own Priority 0 | Children: 0 | Depth: 7
					Found children || Index 12 | Own Index: 12 | Father Index: 10 | Own Priority 1 | Children: 0 | Depth: 7
					Found children || Index 13 | Own Index: 13 | Father Index: 10 | Own Priority 2 | Children: 0 | Depth: 7
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 3 | 3 children
				ERR532: n_depth of children 6 is inconsistent with depth of father 2... FIXED
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 11 | Index: 10
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 11
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
				ERR532: n_depth of children 7 is inconsistent with depth of father 3... FIXED
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 12 | Index: 11
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 12
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
				ERR532: n_depth of children 7 is inconsistent with depth of father 3... FIXED
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 13 | Index: 12
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 13
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
				ERR532: n_depth of children 7 is inconsistent with depth of father 3... FIXED
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 14 | Index: 13
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 14
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 15 | Index: 14
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
		<<-- "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
	<<-- "bool User::Equation_parser::parse(std::__cxx11::string)" | Token array size: 23 | Token tree size: 15
	TOKEN0
	TOKEN1
	TOKEN2
	TOKEN3
	TOKEN4
	TOKEN5
	TOKEN6
	TOKEN7
	TOKEN8
	TOKEN9
	TOKEN10
	TOKEN11
	TOKEN12
	TOKEN13
	TOKEN14
	TOKEN15
	TOKEN16
	TOKEN17
	TOKEN18
	TOKEN19
	TOKEN20
	TOKEN21
	TOKEN22
	-->> "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Index: 0
		-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afbf4 | Begin: 1 | Index: 0
		<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 0 | Stack size: 1
		-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
		<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
		-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
			-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 0
				Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 0 | Depth: 1
				Found children || Index 2 | Own Index: 2 | Father Index: 0 | Own Priority 1 | Children: 5 | Depth: 1
			<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
		<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 1 | Index: 0
		-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
		<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
		-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
			-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 1
			<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
		<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 2 | Index: 1
		-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
		<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
		-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
			-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 2
				Found children || Index 3 | Own Index: 3 | Father Index: 2 | Own Priority 0 | Children: 0 | Depth: 2
				Found children || Index 4 | Own Index: 4 | Father Index: 2 | Own Priority 1 | Children: 2 | Depth: 2
				Found children || Index 7 | Own Index: 7 | Father Index: 2 | Own Priority 2 | Children: 0 | Depth: 2
				Found children || Index 8 | Own Index: 8 | Father Index: 2 | Own Priority 3 | Children: 2 | Depth: 2
				Found children || Index 14 | Own Index: 14 | Father Index: 2 | Own Priority 4 | Children: 0 | Depth: 2
			<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 5 | 5 children
		<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 3 | Index: 2
		-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
		<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
		-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
			-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 3
			<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
		<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 4 | Index: 3
		-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
		<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
		-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
			-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 4
				Found children || Index 5 | Own Index: 5 | Father Index: 4 | Own Priority 0 | Children: 0 | Depth: 3
				Found children || Index 6 | Own Index: 6 | Father Index: 4 | Own Priority 1 | Children: 0 | Depth: 3
			<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
		<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 5 | Index: 4
		-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
		<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
		-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
			-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 5
			<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
		<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 6 | Index: 5
		-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
		<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
		-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
			-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 6
			<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
		<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 7 | Index: 6
		-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
		<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
		-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
			-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 7
			<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
		<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 8 | Index: 7
		-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
		<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
		-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
			-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 8
				Found children || Index 9 | Own Index: 9 | Father Index: 8 | Own Priority 0 | Children: 0 | Depth: 3
				Found children || Index 10 | Own Index: 10 | Father Index: 8 | Own Priority 1 | Children: 3 | Depth: 3
			<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
		<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 9 | Index: 8
		-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
		<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
		-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
			-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 9
			<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
		<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 10 | Index: 9
		-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
		<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
		-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
			-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 10
				Found children || Index 11 | Own Index: 11 | Father Index: 10 | Own Priority 0 | Children: 0 | Depth: 4
				Found children || Index 12 | Own Index: 12 | Father Index: 10 | Own Priority 1 | Children: 0 | Depth: 4
				Found children || Index 13 | Own Index: 13 | Father Index: 10 | Own Priority 2 | Children: 0 | Depth: 4
			<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 3 | 3 children
		<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 11 | Index: 10
		-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
		<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
		-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
			-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 11
			<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
		<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 12 | Index: 11
		-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
		<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
		-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
			-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 12
			<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
		<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 13 | Index: 12
		-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
		<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
		-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
			-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 13
			<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
		<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 14 | Index: 13
		-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
		<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
		-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
			-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 14
			<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
		<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 15 | Index: 14
		-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
		<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
	<<-- "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
	-->> "User::Tree<Payload>::Tree(std::vector<User::Tree<Payload>::St_minimal_node>) [with Payload = User::Equation_parser::Token]" | This: 007afdb8 | Nodes: 15
		-->> "bool User::Tree<Payload>::init_class_vars(Payload) [with Payload = User::Equation_parser::Token]" |
		<<-- "bool User::Tree<Payload>::init_class_vars(Payload) [with Payload = User::Equation_parser::Token]" |
		-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
		<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 0 | Own Index: 1 | Nodes under Father: 2
		-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
		<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 0 | Own Index: 2 | Nodes under Father: 3
		-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
		<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 2 | Own Index: 3 | Nodes under Father: 2
		-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
		<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 2 | Own Index: 4 | Nodes under Father: 3
		-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
		<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 2 | Own Index: 5 | Nodes under Father: 4
		-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
		<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 2 | Own Index: 6 | Nodes under Father: 5
		-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
		<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 2 | Own Index: 7 | Nodes under Father: 6
		-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
		<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 4 | Own Index: 8 | Nodes under Father: 2
		-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
		<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 4 | Own Index: 9 | Nodes under Father: 3
		-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
		<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 6 | Own Index: 10 | Nodes under Father: 2
		-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
		<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 6 | Own Index: 11 | Nodes under Father: 3
		-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
		<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 11 | Own Index: 12 | Nodes under Father: 2
		-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
		<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 11 | Own Index: 13 | Nodes under Father: 3
		-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
		<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 11 | Own Index: 14 | Nodes under Father: 4
		-->> "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Index: 0
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afbf4 | Begin: 1 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 0 | Stack size: 1
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 0
					Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 0 | Depth: 1
					Found children || Index 2 | Own Index: 2 | Father Index: 0 | Own Priority 1 | Children: 5 | Depth: 1
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 1 | Index: 0
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 1
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 2 | Index: 1
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 2
					Found children || Index 3 | Own Index: 3 | Father Index: 2 | Own Priority 0 | Children: 0 | Depth: 2
					Found children || Index 4 | Own Index: 4 | Father Index: 2 | Own Priority 1 | Children: 2 | Depth: 2
					Found children || Index 5 | Own Index: 5 | Father Index: 2 | Own Priority 2 | Children: 0 | Depth: 2
					Found children || Index 6 | Own Index: 6 | Father Index: 2 | Own Priority 3 | Children: 2 | Depth: 2
					Found children || Index 7 | Own Index: 7 | Father Index: 2 | Own Priority 4 | Children: 0 | Depth: 2
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 5 | 5 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 3 | Index: 2
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 3
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 4 | Index: 3
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 4
					Found children || Index 8 | Own Index: 8 | Father Index: 4 | Own Priority 0 | Children: 0 | Depth: 3
					Found children || Index 9 | Own Index: 9 | Father Index: 4 | Own Priority 1 | Children: 0 | Depth: 3
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 5 | Index: 4
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 8
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 6 | Index: 8
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 9
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 7 | Index: 9
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 5
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 8 | Index: 5
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 6
					Found children || Index 10 | Own Index: 10 | Father Index: 6 | Own Priority 0 | Children: 0 | Depth: 3
					Found children || Index 11 | Own Index: 11 | Father Index: 6 | Own Priority 1 | Children: 3 | Depth: 3
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 9 | Index: 6
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 10
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 10 | Index: 10
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 11
					Found children || Index 12 | Own Index: 12 | Father Index: 11 | Own Priority 0 | Children: 0 | Depth: 4
					Found children || Index 13 | Own Index: 13 | Father Index: 11 | Own Priority 1 | Children: 0 | Depth: 4
					Found children || Index 14 | Own Index: 14 | Father Index: 11 | Own Priority 2 | Children: 0 | Depth: 4
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 3 | 3 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 11 | Index: 11
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 12
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 12 | Index: 12
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 13
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 13 | Index: 13
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 14
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 14 | Index: 14
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 7
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 15 | Index: 7
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
		<<-- "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
		-->> "bool User::Tree<Payload>::operator==(User::Tree<Payload>&) [with Payload = User::Equation_parser::Token]" |
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afb6c | Begin: 1 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 0 | Stack size: 1
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afb3c | Begin: 1 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 0 | Stack size: 1
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afb9c | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afbcc | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 0
					Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 0 | Depth: 1
					Found children || Index 2 | Own Index: 2 | Father Index: 0 | Own Priority 1 | Children: 5 | Depth: 1
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 1 | Index: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 0
					Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 0 | Depth: 1
					Found children || Index 2 | Own Index: 2 | Father Index: 0 | Own Priority 1 | Children: 5 | Depth: 1
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 1 | Index: 0
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afb9c | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afbcc | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 1
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 2 | Index: 1
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 1
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 2 | Index: 1
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afb9c | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afbcc | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 2
					Found children || Index 3 | Own Index: 3 | Father Index: 2 | Own Priority 0 | Children: 0 | Depth: 2
					Found children || Index 4 | Own Index: 4 | Father Index: 2 | Own Priority 1 | Children: 2 | Depth: 2
					Found children || Index 7 | Own Index: 7 | Father Index: 2 | Own Priority 2 | Children: 0 | Depth: 2
					Found children || Index 8 | Own Index: 8 | Father Index: 2 | Own Priority 3 | Children: 2 | Depth: 2
					Found children || Index 14 | Own Index: 14 | Father Index: 2 | Own Priority 4 | Children: 0 | Depth: 2
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 5 | 5 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 3 | Index: 2
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 2
					Found children || Index 3 | Own Index: 3 | Father Index: 2 | Own Priority 0 | Children: 0 | Depth: 2
					Found children || Index 4 | Own Index: 4 | Father Index: 2 | Own Priority 1 | Children: 2 | Depth: 2
					Found children || Index 5 | Own Index: 5 | Father Index: 2 | Own Priority 2 | Children: 0 | Depth: 2
					Found children || Index 6 | Own Index: 6 | Father Index: 2 | Own Priority 3 | Children: 2 | Depth: 2
					Found children || Index 7 | Own Index: 7 | Father Index: 2 | Own Priority 4 | Children: 0 | Depth: 2
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 5 | 5 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 3 | Index: 2
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afb9c | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afbcc | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 3
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 4 | Index: 3
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 3
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 4 | Index: 3
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afb9c | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afbcc | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 4
					Found children || Index 5 | Own Index: 5 | Father Index: 4 | Own Priority 0 | Children: 0 | Depth: 3
					Found children || Index 6 | Own Index: 6 | Father Index: 4 | Own Priority 1 | Children: 0 | Depth: 3
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 5 | Index: 4
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 4
					Found children || Index 8 | Own Index: 8 | Father Index: 4 | Own Priority 0 | Children: 0 | Depth: 3
					Found children || Index 9 | Own Index: 9 | Father Index: 4 | Own Priority 1 | Children: 0 | Depth: 3
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 5 | Index: 4
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afb9c | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afbcc | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 5
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 6 | Index: 5
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 8
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 6 | Index: 8
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afb9c | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afbcc | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 6
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 7 | Index: 6
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 9
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 7 | Index: 9
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afb9c | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afbcc | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 7
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 8 | Index: 7
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 5
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 8 | Index: 5
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afb9c | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afbcc | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 8
					Found children || Index 9 | Own Index: 9 | Father Index: 8 | Own Priority 0 | Children: 0 | Depth: 3
					Found children || Index 10 | Own Index: 10 | Father Index: 8 | Own Priority 1 | Children: 3 | Depth: 3
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 9 | Index: 8
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 6
					Found children || Index 10 | Own Index: 10 | Father Index: 6 | Own Priority 0 | Children: 0 | Depth: 3
					Found children || Index 11 | Own Index: 11 | Father Index: 6 | Own Priority 1 | Children: 3 | Depth: 3
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 9 | Index: 6
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afb9c | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afbcc | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 9
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 10 | Index: 9
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 10
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 10 | Index: 10
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afb9c | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afbcc | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 10
					Found children || Index 11 | Own Index: 11 | Father Index: 10 | Own Priority 0 | Children: 0 | Depth: 4
					Found children || Index 12 | Own Index: 12 | Father Index: 10 | Own Priority 1 | Children: 0 | Depth: 4
					Found children || Index 13 | Own Index: 13 | Father Index: 10 | Own Priority 2 | Children: 0 | Depth: 4
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 3 | 3 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 11 | Index: 10
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 11
					Found children || Index 12 | Own Index: 12 | Father Index: 11 | Own Priority 0 | Children: 0 | Depth: 4
					Found children || Index 13 | Own Index: 13 | Father Index: 11 | Own Priority 1 | Children: 0 | Depth: 4
					Found children || Index 14 | Own Index: 14 | Father Index: 11 | Own Priority 2 | Children: 0 | Depth: 4
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 3 | 3 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 11 | Index: 11
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afb9c | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afbcc | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 11
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 12 | Index: 11
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 12
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 12 | Index: 12
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afb9c | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afbcc | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 12
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 13 | Index: 12
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 13
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 13 | Index: 13
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afb9c | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afbcc | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 13
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 14 | Index: 13
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 14
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 14 | Index: 14
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afb9c | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afbcc | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 14
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 15 | Index: 14
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 7
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 15 | Index: 7
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afb9c | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afbcc | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
		<<-- "bool User::Tree<Payload>::operator==(User::Tree<Payload>&) [with Payload = User::Equation_parser::Token]" | Same
		PASS pattern: 16
		-->> "User::Tree<Payload>::~Tree() [with Payload = User::Equation_parser::Token]" | This: 007afdb8
		<<-- "User::Tree<Payload>::~Tree() [with Payload = User::Equation_parser::Token]" |
		-->> "User::Tree<Payload>::~Tree() [with Payload = User::Equation_parser::Token]" | This: 007afd6c
		<<-- "User::Tree<Payload>::~Tree() [with Payload = User::Equation_parser::Token]" |
		PATTERN17 >28=1+2+3+4+5+6+7<
		-->> "bool User::Equation_parser::parse(std::__cxx11::string)" | Parse: 28=1+2+3+4+5+6+7 | Size: 16
			-->> "static bool User::Equation_parser::equation_to_token_array(std::__cxx11::string, std::vector<std::__cxx11::basic_string<char> >&, std::vector<User::Equation_parser::Token>&)" | Parse: 28=1+2+3+4+5+6+7 | Size: 16
				SEEK_NEXT_TOKEN | Decode: >>2<<
				TOKEN_NUMBER | Decode: >>8<<
				TOKEN_NUMBER | Decode: >>=<<
				Token fully decoded:  28 | type: 0 | size: 2
				Tokens decoded: 1
				SEEK_NEXT_TOKEN | Decode: >>=<<
				-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >>=<<
				<<-- "static bool User::Equation_parser::is_symbol(char)" | N
				-->> "static bool User::Equation_parser::is_operator(char)" | Digit: >>=<<
				<<-- "static bool User::Equation_parser::is_operator(char)" | Y
				Operator detected: >>=<< | Token: =
				Token fully decoded:  = | type: 2 | size: 1
				Tokens decoded: 2
				SEEK_NEXT_TOKEN | Decode: >>1<<
				TOKEN_NUMBER | Decode: >>+<<
				Token fully decoded:  1 | type: 0 | size: 1
				Tokens decoded: 3
				SEEK_NEXT_TOKEN | Decode: >>+<<
				-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >>+<<
				<<-- "static bool User::Equation_parser::is_symbol(char)" | N
				-->> "static bool User::Equation_parser::is_operator(char)" | Digit: >>+<<
				<<-- "static bool User::Equation_parser::is_operator(char)" | Y
				Operator detected: >>+<< | Token: +
				Token fully decoded:  + | type: 2 | size: 1
				Tokens decoded: 4
				SEEK_NEXT_TOKEN | Decode: >>2<<
				TOKEN_NUMBER | Decode: >>+<<
				Token fully decoded:  2 | type: 0 | size: 1
				Tokens decoded: 5
				SEEK_NEXT_TOKEN | Decode: >>+<<
				-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >>+<<
				<<-- "static bool User::Equation_parser::is_symbol(char)" | N
				-->> "static bool User::Equation_parser::is_operator(char)" | Digit: >>+<<
				<<-- "static bool User::Equation_parser::is_operator(char)" | Y
				Operator detected: >>+<< | Token: +
				Token fully decoded:  + | type: 2 | size: 1
				Tokens decoded: 6
				SEEK_NEXT_TOKEN | Decode: >>3<<
				TOKEN_NUMBER | Decode: >>+<<
				Token fully decoded:  3 | type: 0 | size: 1
				Tokens decoded: 7
				SEEK_NEXT_TOKEN | Decode: >>+<<
				-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >>+<<
				<<-- "static bool User::Equation_parser::is_symbol(char)" | N
				-->> "static bool User::Equation_parser::is_operator(char)" | Digit: >>+<<
				<<-- "static bool User::Equation_parser::is_operator(char)" | Y
				Operator detected: >>+<< | Token: +
				Token fully decoded:  + | type: 2 | size: 1
				Tokens decoded: 8
				SEEK_NEXT_TOKEN | Decode: >>4<<
				TOKEN_NUMBER | Decode: >>+<<
				Token fully decoded:  4 | type: 0 | size: 1
				Tokens decoded: 9
				SEEK_NEXT_TOKEN | Decode: >>+<<
				-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >>+<<
				<<-- "static bool User::Equation_parser::is_symbol(char)" | N
				-->> "static bool User::Equation_parser::is_operator(char)" | Digit: >>+<<
				<<-- "static bool User::Equation_parser::is_operator(char)" | Y
				Operator detected: >>+<< | Token: +
				Token fully decoded:  + | type: 2 | size: 1
				Tokens decoded: 10
				SEEK_NEXT_TOKEN | Decode: >>5<<
				TOKEN_NUMBER | Decode: >>+<<
				Token fully decoded:  5 | type: 0 | size: 1
				Tokens decoded: 11
				SEEK_NEXT_TOKEN | Decode: >>+<<
				-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >>+<<
				<<-- "static bool User::Equation_parser::is_symbol(char)" | N
				-->> "static bool User::Equation_parser::is_operator(char)" | Digit: >>+<<
				<<-- "static bool User::Equation_parser::is_operator(char)" | Y
				Operator detected: >>+<< | Token: +
				Token fully decoded:  + | type: 2 | size: 1
				Tokens decoded: 12
				SEEK_NEXT_TOKEN | Decode: >>6<<
				TOKEN_NUMBER | Decode: >>+<<
				Token fully decoded:  6 | type: 0 | size: 1
				Tokens decoded: 13
				SEEK_NEXT_TOKEN | Decode: >>+<<
				-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >>+<<
				<<-- "static bool User::Equation_parser::is_symbol(char)" | N
				-->> "static bool User::Equation_parser::is_operator(char)" | Digit: >>+<<
				<<-- "static bool User::Equation_parser::is_operator(char)" | Y
				Operator detected: >>+<< | Token: +
				Token fully decoded:  + | type: 2 | size: 1
				Tokens decoded: 14
				SEEK_NEXT_TOKEN | Decode: >>7<<
				Token fully decoded:  7 | type: 0 | size: 1
				Tokens decoded: 15
				Equations decoded into 15 tokens
				Token: >>28<< | Type: 0 | Size: 2
				Token: >>=<< | Type: 2 | Size: 1
				Token: >>1<< | Type: 0 | Size: 1
				Token: >>+<< | Type: 2 | Size: 1
				Token: >>2<< | Type: 0 | Size: 1
				Token: >>+<< | Type: 2 | Size: 1
				Token: >>3<< | Type: 0 | Size: 1
				Token: >>+<< | Type: 2 | Size: 1
				Token: >>4<< | Type: 0 | Size: 1
				Token: >>+<< | Type: 2 | Size: 1
				Token: >>5<< | Type: 0 | Size: 1
				Token: >>+<< | Type: 2 | Size: 1
				Token: >>6<< | Type: 0 | Size: 1
				Token: >>+<< | Type: 2 | Size: 1
				Token: >>7<< | Type: 0 | Size: 1
			<<-- "static bool User::Equation_parser::equation_to_token_array(std::__cxx11::string, std::vector<std::__cxx11::basic_string<char> >&, std::vector<User::Equation_parser::Token>&)" | Decoded 15 tokens
			Tree wasn't empty: 15 | FLUSH
			-->> "bool User::Tree<Payload>::flush() [with Payload = User::Equation_parser::Token]" | Nodes inside the tree: 15
				-->> "bool User::Tree<Payload>::init_root() [with Payload = User::Equation_parser::Token]" |
				<<-- "bool User::Tree<Payload>::init_root() [with Payload = User::Equation_parser::Token]" |
			<<-- "bool User::Tree<Payload>::flush() [with Payload = User::Equation_parser::Token]" | Nodes inside the tree: 1
			-->> "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | Token Array Size: 15 | Father 0
				-->> "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 15
					Token: 28 | Priority: 0
					Token: = | Priority: 0
					Token: 1 | Priority: 0
					Token: + | Priority: 0
					Token: 2 | Priority: 0
					Token: + | Priority: 0
					Token: 3 | Priority: 0
					Token: + | Priority: 0
					Token: 4 | Priority: 0
					Token: + | Priority: 0
					Token: 5 | Priority: 0
					Token: + | Priority: 0
					Token: 6 | Priority: 0
					Token: + | Priority: 0
					Token: 7 | Priority: 0
				<<-- "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 15 | Highest Priority Token: <=> | 0 0
				Core Token: >=< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 0
				LHS: >28<
				RHS: >1<
				RHS: >+<
				RHS: >2<
				RHS: >+<
				RHS: >3<
				RHS: >+<
				RHS: >4<
				RHS: >+<
				RHS: >5<
				RHS: >+<
				RHS: >6<
				RHS: >+<
				RHS: >7<
				LHS Tokens: 1 | RHS Tokens: 13
				ROOT: >=<
				-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 0
				<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				LHS: >=<
				-->> "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | Token Array Size: 1 | Father 0
					-->> "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 1
						Token: 28 | Priority: 0
					<<-- "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 1 | Highest Priority Token: <28> | 0 5
					Core Token: >28< | Size: 2 | Open/Close Priority: 0 | Symbol Priority: 5
					LHS Tokens: 0 | RHS Tokens: 0
					-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 0
					<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 0 | Own Index: 1 | Nodes under Father: 2
				<<-- "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | PASS
				LHS of size 1 under father 0
				-->> "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | Token Array Size: 13 | Father 0
					-->> "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 13
						Token: 1 | Priority: 0
						Token: + | Priority: 0
						Token: 2 | Priority: 0
						Token: + | Priority: 0
						Token: 3 | Priority: 0
						Token: + | Priority: 0
						Token: 4 | Priority: 0
						Token: + | Priority: 0
						Token: 5 | Priority: 0
						Token: + | Priority: 0
						Token: 6 | Priority: 0
						Token: + | Priority: 0
						Token: 7 | Priority: 0
					<<-- "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 13 | Highest Priority Token: <+> | 0 3
					Core Token: >+< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 3
					LHS: >1<
					RHS: >2<
					RHS: >+<
					RHS: >3<
					RHS: >+<
					RHS: >4<
					RHS: >+<
					RHS: >5<
					RHS: >+<
					RHS: >6<
					RHS: >+<
					RHS: >7<
					LHS Tokens: 1 | RHS Tokens: 11
					-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 0 | Own Index: 2 | Nodes under Father: 3
					-->> "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | Token Array Size: 1 | Father 2
						-->> "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 1
							Token: 1 | Priority: 0
						<<-- "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 1 | Highest Priority Token: <1> | 0 5
						Core Token: >1< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 5
						LHS Tokens: 0 | RHS Tokens: 0
						-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
						<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 2 | Own Index: 3 | Nodes under Father: 2
					<<-- "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | PASS
					LHS of size 1 under father 2
					-->> "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | Token Array Size: 11 | Father 2
						-->> "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 11
							Token: 2 | Priority: 0
							Token: + | Priority: 0
							Token: 3 | Priority: 0
							Token: + | Priority: 0
							Token: 4 | Priority: 0
							Token: + | Priority: 0
							Token: 5 | Priority: 0
							Token: + | Priority: 0
							Token: 6 | Priority: 0
							Token: + | Priority: 0
							Token: 7 | Priority: 0
						<<-- "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 11 | Highest Priority Token: <+> | 0 3
						Core Token: >+< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 3
						LHS: >2<
						RHS: >3<
						RHS: >+<
						RHS: >4<
						RHS: >+<
						RHS: >5<
						RHS: >+<
						RHS: >6<
						RHS: >+<
						RHS: >7<
						LHS Tokens: 1 | RHS Tokens: 9
						-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
						<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 2 | Own Index: 4 | Nodes under Father: 3
						-->> "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | Token Array Size: 1 | Father 4
							-->> "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 1
								Token: 2 | Priority: 0
							<<-- "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 1 | Highest Priority Token: <2> | 0 5
							Core Token: >2< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 5
							LHS Tokens: 0 | RHS Tokens: 0
							-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
							<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 4 | Own Index: 5 | Nodes under Father: 2
						<<-- "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | PASS
						LHS of size 1 under father 4
						-->> "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | Token Array Size: 9 | Father 4
							-->> "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 9
								Token: 3 | Priority: 0
								Token: + | Priority: 0
								Token: 4 | Priority: 0
								Token: + | Priority: 0
								Token: 5 | Priority: 0
								Token: + | Priority: 0
								Token: 6 | Priority: 0
								Token: + | Priority: 0
								Token: 7 | Priority: 0
							<<-- "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 9 | Highest Priority Token: <+> | 0 3
							Core Token: >+< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 3
							LHS: >3<
							RHS: >4<
							RHS: >+<
							RHS: >5<
							RHS: >+<
							RHS: >6<
							RHS: >+<
							RHS: >7<
							LHS Tokens: 1 | RHS Tokens: 7
							-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
							<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 4 | Own Index: 6 | Nodes under Father: 3
							-->> "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | Token Array Size: 1 | Father 6
								-->> "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 1
									Token: 3 | Priority: 0
								<<-- "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 1 | Highest Priority Token: <3> | 0 5
								Core Token: >3< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 5
								LHS Tokens: 0 | RHS Tokens: 0
								-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
								<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 6 | Own Index: 7 | Nodes under Father: 2
							<<-- "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | PASS
							LHS of size 1 under father 6
							-->> "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | Token Array Size: 7 | Father 6
								-->> "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 7
									Token: 4 | Priority: 0
									Token: + | Priority: 0
									Token: 5 | Priority: 0
									Token: + | Priority: 0
									Token: 6 | Priority: 0
									Token: + | Priority: 0
									Token: 7 | Priority: 0
								<<-- "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 7 | Highest Priority Token: <+> | 0 3
								Core Token: >+< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 3
								LHS: >4<
								RHS: >5<
								RHS: >+<
								RHS: >6<
								RHS: >+<
								RHS: >7<
								LHS Tokens: 1 | RHS Tokens: 5
								-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
								<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 6 | Own Index: 8 | Nodes under Father: 3
								-->> "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | Token Array Size: 1 | Father 8
									-->> "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 1
										Token: 4 | Priority: 0
									<<-- "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 1 | Highest Priority Token: <4> | 0 5
									Core Token: >4< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 5
									LHS Tokens: 0 | RHS Tokens: 0
									-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
									<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 8 | Own Index: 9 | Nodes under Father: 2
								<<-- "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | PASS
								LHS of size 1 under father 8
								-->> "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | Token Array Size: 5 | Father 8
									-->> "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 5
										Token: 5 | Priority: 0
										Token: + | Priority: 0
										Token: 6 | Priority: 0
										Token: + | Priority: 0
										Token: 7 | Priority: 0
									<<-- "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 5 | Highest Priority Token: <+> | 0 3
									Core Token: >+< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 3
									LHS: >5<
									RHS: >6<
									RHS: >+<
									RHS: >7<
									LHS Tokens: 1 | RHS Tokens: 3
									-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
									<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 8 | Own Index: 10 | Nodes under Father: 3
									-->> "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | Token Array Size: 1 | Father 10
										-->> "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 1
											Token: 5 | Priority: 0
										<<-- "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 1 | Highest Priority Token: <5> | 0 5
										Core Token: >5< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 5
										LHS Tokens: 0 | RHS Tokens: 0
										-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
										<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 10 | Own Index: 11 | Nodes under Father: 2
									<<-- "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | PASS
									LHS of size 1 under father 10
									-->> "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | Token Array Size: 3 | Father 10
										-->> "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 3
											Token: 6 | Priority: 0
											Token: + | Priority: 0
											Token: 7 | Priority: 0
										<<-- "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 3 | Highest Priority Token: <+> | 0 3
										Core Token: >+< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 3
										LHS: >6<
										RHS: >7<
										LHS Tokens: 1 | RHS Tokens: 1
										-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
										<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 10 | Own Index: 12 | Nodes under Father: 3
										-->> "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | Token Array Size: 1 | Father 12
											-->> "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 1
												Token: 6 | Priority: 0
											<<-- "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 1 | Highest Priority Token: <6> | 0 5
											Core Token: >6< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 5
											LHS Tokens: 0 | RHS Tokens: 0
											-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
											<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 12 | Own Index: 13 | Nodes under Father: 2
										<<-- "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | PASS
										LHS of size 1 under father 12
										-->> "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | Token Array Size: 1 | Father 12
											-->> "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 1
												Token: 7 | Priority: 0
											<<-- "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 1 | Highest Priority Token: <7> | 0 5
											Core Token: >7< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 5
											LHS Tokens: 0 | RHS Tokens: 0
											-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
											<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 12 | Own Index: 14 | Nodes under Father: 3
										<<-- "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | PASS
										RHS of size 1 under father 12
									<<-- "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | PASS
									RHS of size 3 under father 10
								<<-- "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | PASS
								RHS of size 5 under father 8
							<<-- "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | PASS
							RHS of size 7 under father 6
						<<-- "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | PASS
						RHS of size 9 under father 4
					<<-- "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | PASS
					RHS of size 11 under father 2
				<<-- "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | PASS
				RHS of size 13 under father 0
			<<-- "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | PASS
			-->> "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Index: 0
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afaa4 | Begin: 1 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 0 | Stack size: 1
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 0
						Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 0 | Depth: 1
						Found children || Index 2 | Own Index: 2 | Father Index: 0 | Own Priority 1 | Children: 2 | Depth: 1
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 1 | Index: 0
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 1
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 2 | Index: 1
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 2
						Found children || Index 3 | Own Index: 3 | Father Index: 2 | Own Priority 0 | Children: 0 | Depth: 2
						Found children || Index 4 | Own Index: 4 | Father Index: 2 | Own Priority 1 | Children: 2 | Depth: 2
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 3 | Index: 2
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 3
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 4 | Index: 3
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 4
						Found children || Index 5 | Own Index: 5 | Father Index: 4 | Own Priority 0 | Children: 0 | Depth: 3
						Found children || Index 6 | Own Index: 6 | Father Index: 4 | Own Priority 1 | Children: 2 | Depth: 3
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 5 | Index: 4
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 5
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 6 | Index: 5
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 6
						Found children || Index 7 | Own Index: 7 | Father Index: 6 | Own Priority 0 | Children: 0 | Depth: 4
						Found children || Index 8 | Own Index: 8 | Father Index: 6 | Own Priority 1 | Children: 2 | Depth: 4
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 7 | Index: 6
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 7
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 8 | Index: 7
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 8
						Found children || Index 9 | Own Index: 9 | Father Index: 8 | Own Priority 0 | Children: 0 | Depth: 5
						Found children || Index 10 | Own Index: 10 | Father Index: 8 | Own Priority 1 | Children: 2 | Depth: 5
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 9 | Index: 8
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 9
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 10 | Index: 9
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 10
						Found children || Index 11 | Own Index: 11 | Father Index: 10 | Own Priority 0 | Children: 0 | Depth: 6
						Found children || Index 12 | Own Index: 12 | Father Index: 10 | Own Priority 1 | Children: 2 | Depth: 6
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 11 | Index: 10
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 11
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 12 | Index: 11
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 12
						Found children || Index 13 | Own Index: 13 | Father Index: 12 | Own Priority 0 | Children: 0 | Depth: 7
						Found children || Index 14 | Own Index: 14 | Father Index: 12 | Own Priority 1 | Children: 0 | Depth: 7
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 13 | Index: 12
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 13
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 14 | Index: 13
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 14
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 15 | Index: 14
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
			<<-- "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
			-->> "static int User::Equation_parser::aggregate_tree_token_sum_diff(User::Tree<User::Equation_parser::Token>&)" |
				-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 1
				<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 2
				<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 0
				<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 3
				<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 4
				<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 2
				<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				Candidate 4
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 4
					Found children || Index 5 | Own Index: 5 | Father Index: 4 | Own Priority 0 | Children: 0 | Depth: 3
					Found children || Index 6 | Own Index: 6 | Father Index: 4 | Own Priority 1 | Children: 2 | Depth: 3
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
				Children: 2
				-->> "bool User::Tree<Payload>::move(size_t, size_t, User::Tree<Payload>::Move_mode) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::relink_node_nocheck(size_t, size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Target Index: 5 | New Father: 2
						Relink Node 5 as child of 2
						With priority 2 of 3
						Old father 4 now has 1 children
						Previous sibling 6 now has priority 0 of 1
					<<-- "bool User::Tree<Payload>::relink_node_nocheck(size_t, size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				<<-- "bool User::Tree<Payload>::move(size_t, size_t, User::Tree<Payload>::Move_mode) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Success: OK
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 4
					Found children || Index 6 | Own Index: 6 | Father Index: 4 | Own Priority 0 | Children: 2 | Depth: 3
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 1 | 1 children
				Children: 1
				-->> "bool User::Tree<Payload>::move(size_t, size_t, User::Tree<Payload>::Move_mode) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::relink_node_nocheck(size_t, size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Target Index: 6 | New Father: 2
						Relink Node 6 as child of 2
						With priority 3 of 4
						Old father 4 now has 0 children
					<<-- "bool User::Tree<Payload>::relink_node_nocheck(size_t, size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				<<-- "bool User::Tree<Payload>::move(size_t, size_t, User::Tree<Payload>::Move_mode) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Success: OK
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 4
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
				-->> "bool User::Tree<Payload>::erease(size_t, User::Tree<Payload>::Erease_mode) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::bump_children(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
						-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 4
						<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
					<<-- "bool User::Tree<Payload>::bump_children(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | target node has 0 children to be bumped as siblings
					-->> "bool User::Tree<Payload>::erease_single_node(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Erease index 4
						Erease node: 5
						Father 2 now has 3 children
						Adjust priority of node 5 to 1
						Adjusted own index of node 4
						Adjust priority of node 6 to 2
						Adjusted own index of node 5
						Adjusted own index of node 6
						Adjusted father of node 6 to 5
						Adjusted own index of node 7
						Adjusted father of node 7 to 5
						Adjusted own index of node 8
						Adjusted father of node 8 to 7
						Adjusted own index of node 9
						Adjusted father of node 9 to 7
						Adjusted own index of node 10
						Adjusted father of node 10 to 9
						Adjusted own index of node 11
						Adjusted father of node 11 to 9
						Adjusted own index of node 12
						Adjusted father of node 12 to 11
						Adjusted own index of node 13
						Adjusted father of node 13 to 11
					<<-- "bool User::Tree<Payload>::erease_single_node(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				<<-- "bool User::Tree<Payload>::erease(size_t, User::Tree<Payload>::Erease_mode) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 1
				<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 2
				<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 0
				<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 3
				<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 4
				<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 5
				<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 2
				<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				Candidate 5
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 5
					Found children || Index 6 | Own Index: 6 | Father Index: 5 | Own Priority 0 | Children: 0 | Depth: 4
					Found children || Index 7 | Own Index: 7 | Father Index: 5 | Own Priority 1 | Children: 2 | Depth: 4
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
				Children: 2
				-->> "bool User::Tree<Payload>::move(size_t, size_t, User::Tree<Payload>::Move_mode) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::relink_node_nocheck(size_t, size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Target Index: 6 | New Father: 2
						Relink Node 6 as child of 2
						With priority 3 of 4
						Old father 5 now has 1 children
						Previous sibling 7 now has priority 0 of 1
					<<-- "bool User::Tree<Payload>::relink_node_nocheck(size_t, size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				<<-- "bool User::Tree<Payload>::move(size_t, size_t, User::Tree<Payload>::Move_mode) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Success: OK
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 5
					Found children || Index 7 | Own Index: 7 | Father Index: 5 | Own Priority 0 | Children: 2 | Depth: 4
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 1 | 1 children
				Children: 1
				-->> "bool User::Tree<Payload>::move(size_t, size_t, User::Tree<Payload>::Move_mode) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::relink_node_nocheck(size_t, size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Target Index: 7 | New Father: 2
						Relink Node 7 as child of 2
						With priority 4 of 5
						Old father 5 now has 0 children
					<<-- "bool User::Tree<Payload>::relink_node_nocheck(size_t, size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				<<-- "bool User::Tree<Payload>::move(size_t, size_t, User::Tree<Payload>::Move_mode) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Success: OK
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 5
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
				-->> "bool User::Tree<Payload>::erease(size_t, User::Tree<Payload>::Erease_mode) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::bump_children(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
						-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 5
						<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
					<<-- "bool User::Tree<Payload>::bump_children(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | target node has 0 children to be bumped as siblings
					-->> "bool User::Tree<Payload>::erease_single_node(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Erease index 5
						Erease node: 6
						Father 2 now has 4 children
						Adjust priority of node 6 to 2
						Adjusted own index of node 5
						Adjust priority of node 7 to 3
						Adjusted own index of node 6
						Adjusted own index of node 7
						Adjusted father of node 7 to 6
						Adjusted own index of node 8
						Adjusted father of node 8 to 6
						Adjusted own index of node 9
						Adjusted father of node 9 to 8
						Adjusted own index of node 10
						Adjusted father of node 10 to 8
						Adjusted own index of node 11
						Adjusted father of node 11 to 10
						Adjusted own index of node 12
						Adjusted father of node 12 to 10
					<<-- "bool User::Tree<Payload>::erease_single_node(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				<<-- "bool User::Tree<Payload>::erease(size_t, User::Tree<Payload>::Erease_mode) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 1
				<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 2
				<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 0
				<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 3
				<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 4
				<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 5
				<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 6
				<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 2
				<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				Candidate 6
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 6
					Found children || Index 7 | Own Index: 7 | Father Index: 6 | Own Priority 0 | Children: 0 | Depth: 5
					Found children || Index 8 | Own Index: 8 | Father Index: 6 | Own Priority 1 | Children: 2 | Depth: 5
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
				Children: 2
				-->> "bool User::Tree<Payload>::move(size_t, size_t, User::Tree<Payload>::Move_mode) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::relink_node_nocheck(size_t, size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Target Index: 7 | New Father: 2
						Relink Node 7 as child of 2
						With priority 4 of 5
						Old father 6 now has 1 children
						Previous sibling 8 now has priority 0 of 1
					<<-- "bool User::Tree<Payload>::relink_node_nocheck(size_t, size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				<<-- "bool User::Tree<Payload>::move(size_t, size_t, User::Tree<Payload>::Move_mode) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Success: OK
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 6
					Found children || Index 8 | Own Index: 8 | Father Index: 6 | Own Priority 0 | Children: 2 | Depth: 5
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 1 | 1 children
				Children: 1
				-->> "bool User::Tree<Payload>::move(size_t, size_t, User::Tree<Payload>::Move_mode) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::relink_node_nocheck(size_t, size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Target Index: 8 | New Father: 2
						Relink Node 8 as child of 2
						With priority 5 of 6
						Old father 6 now has 0 children
					<<-- "bool User::Tree<Payload>::relink_node_nocheck(size_t, size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				<<-- "bool User::Tree<Payload>::move(size_t, size_t, User::Tree<Payload>::Move_mode) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Success: OK
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 6
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
				-->> "bool User::Tree<Payload>::erease(size_t, User::Tree<Payload>::Erease_mode) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::bump_children(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
						-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 6
						<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
					<<-- "bool User::Tree<Payload>::bump_children(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | target node has 0 children to be bumped as siblings
					-->> "bool User::Tree<Payload>::erease_single_node(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Erease index 6
						Erease node: 7
						Father 2 now has 5 children
						Adjust priority of node 7 to 3
						Adjusted own index of node 6
						Adjust priority of node 8 to 4
						Adjusted own index of node 7
						Adjusted own index of node 8
						Adjusted father of node 8 to 7
						Adjusted own index of node 9
						Adjusted father of node 9 to 7
						Adjusted own index of node 10
						Adjusted father of node 10 to 9
						Adjusted own index of node 11
						Adjusted father of node 11 to 9
					<<-- "bool User::Tree<Payload>::erease_single_node(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				<<-- "bool User::Tree<Payload>::erease(size_t, User::Tree<Payload>::Erease_mode) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 1
				<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 2
				<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 0
				<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 3
				<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 4
				<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 5
				<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 6
				<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 7
				<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 2
				<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				Candidate 7
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 7
					Found children || Index 8 | Own Index: 8 | Father Index: 7 | Own Priority 0 | Children: 0 | Depth: 6
					Found children || Index 9 | Own Index: 9 | Father Index: 7 | Own Priority 1 | Children: 2 | Depth: 6
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
				Children: 2
				-->> "bool User::Tree<Payload>::move(size_t, size_t, User::Tree<Payload>::Move_mode) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::relink_node_nocheck(size_t, size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Target Index: 8 | New Father: 2
						Relink Node 8 as child of 2
						With priority 5 of 6
						Old father 7 now has 1 children
						Previous sibling 9 now has priority 0 of 1
					<<-- "bool User::Tree<Payload>::relink_node_nocheck(size_t, size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				<<-- "bool User::Tree<Payload>::move(size_t, size_t, User::Tree<Payload>::Move_mode) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Success: OK
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 7
					Found children || Index 9 | Own Index: 9 | Father Index: 7 | Own Priority 0 | Children: 2 | Depth: 6
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 1 | 1 children
				Children: 1
				-->> "bool User::Tree<Payload>::move(size_t, size_t, User::Tree<Payload>::Move_mode) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::relink_node_nocheck(size_t, size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Target Index: 9 | New Father: 2
						Relink Node 9 as child of 2
						With priority 6 of 7
						Old father 7 now has 0 children
					<<-- "bool User::Tree<Payload>::relink_node_nocheck(size_t, size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				<<-- "bool User::Tree<Payload>::move(size_t, size_t, User::Tree<Payload>::Move_mode) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Success: OK
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 7
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
				-->> "bool User::Tree<Payload>::erease(size_t, User::Tree<Payload>::Erease_mode) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::bump_children(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
						-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 7
						<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
					<<-- "bool User::Tree<Payload>::bump_children(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | target node has 0 children to be bumped as siblings
					-->> "bool User::Tree<Payload>::erease_single_node(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Erease index 7
						Erease node: 8
						Father 2 now has 6 children
						Adjust priority of node 8 to 4
						Adjusted own index of node 7
						Adjust priority of node 9 to 5
						Adjusted own index of node 8
						Adjusted own index of node 9
						Adjusted father of node 9 to 8
						Adjusted own index of node 10
						Adjusted father of node 10 to 8
					<<-- "bool User::Tree<Payload>::erease_single_node(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				<<-- "bool User::Tree<Payload>::erease(size_t, User::Tree<Payload>::Erease_mode) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 1
				<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 2
				<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 0
				<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 3
				<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 4
				<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 5
				<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 6
				<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 7
				<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 8
				<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 2
				<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				Candidate 8
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 8
					Found children || Index 9 | Own Index: 9 | Father Index: 8 | Own Priority 0 | Children: 0 | Depth: 7
					Found children || Index 10 | Own Index: 10 | Father Index: 8 | Own Priority 1 | Children: 0 | Depth: 7
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
				Children: 2
				-->> "bool User::Tree<Payload>::move(size_t, size_t, User::Tree<Payload>::Move_mode) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::relink_node_nocheck(size_t, size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Target Index: 9 | New Father: 2
						Relink Node 9 as child of 2
						With priority 6 of 7
						Old father 8 now has 1 children
						Previous sibling 10 now has priority 0 of 1
					<<-- "bool User::Tree<Payload>::relink_node_nocheck(size_t, size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				<<-- "bool User::Tree<Payload>::move(size_t, size_t, User::Tree<Payload>::Move_mode) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Success: OK
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 8
					Found children || Index 10 | Own Index: 10 | Father Index: 8 | Own Priority 0 | Children: 0 | Depth: 7
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 1 | 1 children
				Children: 1
				-->> "bool User::Tree<Payload>::move(size_t, size_t, User::Tree<Payload>::Move_mode) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::relink_node_nocheck(size_t, size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Target Index: 10 | New Father: 2
						Relink Node 10 as child of 2
						With priority 7 of 8
						Old father 8 now has 0 children
					<<-- "bool User::Tree<Payload>::relink_node_nocheck(size_t, size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				<<-- "bool User::Tree<Payload>::move(size_t, size_t, User::Tree<Payload>::Move_mode) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Success: OK
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 8
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
				-->> "bool User::Tree<Payload>::erease(size_t, User::Tree<Payload>::Erease_mode) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::bump_children(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
						-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 8
						<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
					<<-- "bool User::Tree<Payload>::bump_children(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | target node has 0 children to be bumped as siblings
					-->> "bool User::Tree<Payload>::erease_single_node(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Erease index 8
						Erease node: 9
						Father 2 now has 7 children
						Adjust priority of node 9 to 5
						Adjusted own index of node 8
						Adjust priority of node 10 to 6
						Adjusted own index of node 9
					<<-- "bool User::Tree<Payload>::erease_single_node(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				<<-- "bool User::Tree<Payload>::erease(size_t, User::Tree<Payload>::Erease_mode) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 1
				<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 2
				<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 0
				<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 3
				<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 4
				<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 5
				<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 6
				<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 7
				<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 8
				<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 9
				<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
			<<-- "static int User::Equation_parser::aggregate_tree_token_sum_diff(User::Tree<User::Equation_parser::Token>&)" | Ereased: 5 | Moved: 10
			-->> "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Index: 0
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afaa4 | Begin: 1 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 0 | Stack size: 1
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 10 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 0
						Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 0 | Depth: 1
						Found children || Index 2 | Own Index: 2 | Father Index: 0 | Own Priority 1 | Children: 7 | Depth: 1
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 1 | Index: 0
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 10 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 1
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 2 | Index: 1
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 10 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 2
						Found children || Index 3 | Own Index: 3 | Father Index: 2 | Own Priority 0 | Children: 0 | Depth: 2
						Found children || Index 4 | Own Index: 4 | Father Index: 2 | Own Priority 1 | Children: 0 | Depth: 2
						Found children || Index 5 | Own Index: 5 | Father Index: 2 | Own Priority 2 | Children: 0 | Depth: 2
						Found children || Index 6 | Own Index: 6 | Father Index: 2 | Own Priority 3 | Children: 0 | Depth: 2
						Found children || Index 7 | Own Index: 7 | Father Index: 2 | Own Priority 4 | Children: 0 | Depth: 2
						Found children || Index 8 | Own Index: 8 | Father Index: 2 | Own Priority 5 | Children: 0 | Depth: 2
						Found children || Index 9 | Own Index: 9 | Father Index: 2 | Own Priority 6 | Children: 0 | Depth: 2
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 7 | 7 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 3 | Index: 2
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 10 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 3
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 4 | Index: 3
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 10 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 4
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 5 | Index: 4
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 10 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 5
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 6 | Index: 5
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 10 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 6
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 7 | Index: 6
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 10 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 7
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 8 | Index: 7
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 10 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 8
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 9 | Index: 8
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 10 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 9
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 10 | Index: 9
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 10 | Stack size: 0
			<<-- "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
		<<-- "bool User::Equation_parser::parse(std::__cxx11::string)" | Token array size: 15 | Token tree size: 10
		TOKEN0
		TOKEN1
		TOKEN2
		TOKEN3
		TOKEN4
		TOKEN5
		TOKEN6
		TOKEN7
		TOKEN8
		TOKEN9
		TOKEN10
		TOKEN11
		TOKEN12
		TOKEN13
		TOKEN14
		-->> "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Index: 0
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afbf4 | Begin: 1 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 0 | Stack size: 1
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 10 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 0
					Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 0 | Depth: 1
					Found children || Index 2 | Own Index: 2 | Father Index: 0 | Own Priority 1 | Children: 7 | Depth: 1
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 1 | Index: 0
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 10 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 1
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 2 | Index: 1
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 10 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 2
					Found children || Index 3 | Own Index: 3 | Father Index: 2 | Own Priority 0 | Children: 0 | Depth: 2
					Found children || Index 4 | Own Index: 4 | Father Index: 2 | Own Priority 1 | Children: 0 | Depth: 2
					Found children || Index 5 | Own Index: 5 | Father Index: 2 | Own Priority 2 | Children: 0 | Depth: 2
					Found children || Index 6 | Own Index: 6 | Father Index: 2 | Own Priority 3 | Children: 0 | Depth: 2
					Found children || Index 7 | Own Index: 7 | Father Index: 2 | Own Priority 4 | Children: 0 | Depth: 2
					Found children || Index 8 | Own Index: 8 | Father Index: 2 | Own Priority 5 | Children: 0 | Depth: 2
					Found children || Index 9 | Own Index: 9 | Father Index: 2 | Own Priority 6 | Children: 0 | Depth: 2
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 7 | 7 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 3 | Index: 2
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 10 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 3
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 4 | Index: 3
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 10 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 4
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 5 | Index: 4
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 10 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 5
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 6 | Index: 5
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 10 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 6
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 7 | Index: 6
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 10 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 7
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 8 | Index: 7
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 10 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 8
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 9 | Index: 8
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 10 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 9
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 10 | Index: 9
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 10 | Stack size: 0
		<<-- "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
		-->> "User::Tree<Payload>::Tree(std::vector<User::Tree<Payload>::St_minimal_node>) [with Payload = User::Equation_parser::Token]" | This: 007afdb8 | Nodes: 10
			-->> "bool User::Tree<Payload>::init_class_vars(Payload) [with Payload = User::Equation_parser::Token]" |
			<<-- "bool User::Tree<Payload>::init_class_vars(Payload) [with Payload = User::Equation_parser::Token]" |
			-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
			<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 0 | Own Index: 1 | Nodes under Father: 2
			-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
			<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 0 | Own Index: 2 | Nodes under Father: 3
			-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
			<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 2 | Own Index: 3 | Nodes under Father: 2
			-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
			<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 2 | Own Index: 4 | Nodes under Father: 3
			-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
			<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 2 | Own Index: 5 | Nodes under Father: 4
			-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
			<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 2 | Own Index: 6 | Nodes under Father: 5
			-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
			<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 2 | Own Index: 7 | Nodes under Father: 6
			-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
			<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 2 | Own Index: 8 | Nodes under Father: 7
			-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
			<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 2 | Own Index: 9 | Nodes under Father: 8
			-->> "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Index: 0
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afbf4 | Begin: 1 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 0 | Stack size: 1
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 10 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 0
						Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 0 | Depth: 1
						Found children || Index 2 | Own Index: 2 | Father Index: 0 | Own Priority 1 | Children: 7 | Depth: 1
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 1 | Index: 0
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 10 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 1
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 2 | Index: 1
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 10 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 2
						Found children || Index 3 | Own Index: 3 | Father Index: 2 | Own Priority 0 | Children: 0 | Depth: 2
						Found children || Index 4 | Own Index: 4 | Father Index: 2 | Own Priority 1 | Children: 0 | Depth: 2
						Found children || Index 5 | Own Index: 5 | Father Index: 2 | Own Priority 2 | Children: 0 | Depth: 2
						Found children || Index 6 | Own Index: 6 | Father Index: 2 | Own Priority 3 | Children: 0 | Depth: 2
						Found children || Index 7 | Own Index: 7 | Father Index: 2 | Own Priority 4 | Children: 0 | Depth: 2
						Found children || Index 8 | Own Index: 8 | Father Index: 2 | Own Priority 5 | Children: 0 | Depth: 2
						Found children || Index 9 | Own Index: 9 | Father Index: 2 | Own Priority 6 | Children: 0 | Depth: 2
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 7 | 7 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 3 | Index: 2
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 10 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 3
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 4 | Index: 3
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 10 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 4
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 5 | Index: 4
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 10 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 5
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 6 | Index: 5
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 10 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 6
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 7 | Index: 6
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 10 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 7
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 8 | Index: 7
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 10 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 8
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 9 | Index: 8
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 10 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 9
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 10 | Index: 9
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 10 | Stack size: 0
			<<-- "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
			-->> "bool User::Tree<Payload>::operator==(User::Tree<Payload>&) [with Payload = User::Equation_parser::Token]" |
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afb6c | Begin: 1 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 0 | Stack size: 1
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afb3c | Begin: 1 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 0 | Stack size: 1
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afb9c | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 10 | Stack size: 0
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afbcc | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 10 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 0
						Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 0 | Depth: 1
						Found children || Index 2 | Own Index: 2 | Father Index: 0 | Own Priority 1 | Children: 7 | Depth: 1
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 1 | Index: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 0
						Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 0 | Depth: 1
						Found children || Index 2 | Own Index: 2 | Father Index: 0 | Own Priority 1 | Children: 7 | Depth: 1
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 1 | Index: 0
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afb9c | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 10 | Stack size: 0
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afbcc | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 10 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 1
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 2 | Index: 1
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 1
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 2 | Index: 1
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afb9c | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 10 | Stack size: 0
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afbcc | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 10 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 2
						Found children || Index 3 | Own Index: 3 | Father Index: 2 | Own Priority 0 | Children: 0 | Depth: 2
						Found children || Index 4 | Own Index: 4 | Father Index: 2 | Own Priority 1 | Children: 0 | Depth: 2
						Found children || Index 5 | Own Index: 5 | Father Index: 2 | Own Priority 2 | Children: 0 | Depth: 2
						Found children || Index 6 | Own Index: 6 | Father Index: 2 | Own Priority 3 | Children: 0 | Depth: 2
						Found children || Index 7 | Own Index: 7 | Father Index: 2 | Own Priority 4 | Children: 0 | Depth: 2
						Found children || Index 8 | Own Index: 8 | Father Index: 2 | Own Priority 5 | Children: 0 | Depth: 2
						Found children || Index 9 | Own Index: 9 | Father Index: 2 | Own Priority 6 | Children: 0 | Depth: 2
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 7 | 7 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 3 | Index: 2
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 2
						Found children || Index 3 | Own Index: 3 | Father Index: 2 | Own Priority 0 | Children: 0 | Depth: 2
						Found children || Index 4 | Own Index: 4 | Father Index: 2 | Own Priority 1 | Children: 0 | Depth: 2
						Found children || Index 5 | Own Index: 5 | Father Index: 2 | Own Priority 2 | Children: 0 | Depth: 2
						Found children || Index 6 | Own Index: 6 | Father Index: 2 | Own Priority 3 | Children: 0 | Depth: 2
						Found children || Index 7 | Own Index: 7 | Father Index: 2 | Own Priority 4 | Children: 0 | Depth: 2
						Found children || Index 8 | Own Index: 8 | Father Index: 2 | Own Priority 5 | Children: 0 | Depth: 2
						Found children || Index 9 | Own Index: 9 | Father Index: 2 | Own Priority 6 | Children: 0 | Depth: 2
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 7 | 7 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 3 | Index: 2
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afb9c | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 10 | Stack size: 0
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afbcc | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 10 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 3
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 4 | Index: 3
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 3
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 4 | Index: 3
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afb9c | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 10 | Stack size: 0
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afbcc | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 10 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 4
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 5 | Index: 4
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 4
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 5 | Index: 4
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afb9c | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 10 | Stack size: 0
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afbcc | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 10 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 5
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 6 | Index: 5
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 5
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 6 | Index: 5
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afb9c | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 10 | Stack size: 0
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afbcc | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 10 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 6
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 7 | Index: 6
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 6
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 7 | Index: 6
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afb9c | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 10 | Stack size: 0
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afbcc | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 10 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 7
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 8 | Index: 7
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 7
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 8 | Index: 7
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afb9c | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 10 | Stack size: 0
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afbcc | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 10 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 8
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 9 | Index: 8
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 8
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 9 | Index: 8
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afb9c | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 10 | Stack size: 0
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afbcc | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 10 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 9
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 10 | Index: 9
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 9
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 10 | Index: 9
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afb9c | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 10 | Stack size: 0
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afbcc | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 10 | Stack size: 0
			<<-- "bool User::Tree<Payload>::operator==(User::Tree<Payload>&) [with Payload = User::Equation_parser::Token]" | Same
			PASS pattern: 17
			-->> "User::Tree<Payload>::~Tree() [with Payload = User::Equation_parser::Token]" | This: 007afdb8
			<<-- "User::Tree<Payload>::~Tree() [with Payload = User::Equation_parser::Token]" |
			-->> "User::Tree<Payload>::~Tree() [with Payload = User::Equation_parser::Token]" | This: 007afd6c
			<<-- "User::Tree<Payload>::~Tree() [with Payload = User::Equation_parser::Token]" |
			PATTERN18 >4=1-2+3-4+5-6+7<
			-->> "bool User::Equation_parser::parse(std::__cxx11::string)" | Parse: 4=1-2+3-4+5-6+7 | Size: 15
				-->> "static bool User::Equation_parser::equation_to_token_array(std::__cxx11::string, std::vector<std::__cxx11::basic_string<char> >&, std::vector<User::Equation_parser::Token>&)" | Parse: 4=1-2+3-4+5-6+7 | Size: 15
					SEEK_NEXT_TOKEN | Decode: >>4<<
					TOKEN_NUMBER | Decode: >>=<<
					Token fully decoded:  4 | type: 0 | size: 1
					Tokens decoded: 1
					SEEK_NEXT_TOKEN | Decode: >>=<<
					-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >>=<<
					<<-- "static bool User::Equation_parser::is_symbol(char)" | N
					-->> "static bool User::Equation_parser::is_operator(char)" | Digit: >>=<<
					<<-- "static bool User::Equation_parser::is_operator(char)" | Y
					Operator detected: >>=<< | Token: =
					Token fully decoded:  = | type: 2 | size: 1
					Tokens decoded: 2
					SEEK_NEXT_TOKEN | Decode: >>1<<
					TOKEN_NUMBER | Decode: >>-<<
					Token fully decoded:  1 | type: 0 | size: 1
					Tokens decoded: 3
					SEEK_NEXT_TOKEN | Decode: >>-<<
					-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >>-<<
					<<-- "static bool User::Equation_parser::is_symbol(char)" | N
					-->> "static bool User::Equation_parser::is_operator(char)" | Digit: >>-<<
					<<-- "static bool User::Equation_parser::is_operator(char)" | Y
					Operator detected: >>-<< | Token: -
					Token fully decoded:  - | type: 2 | size: 1
					Tokens decoded: 4
					SEEK_NEXT_TOKEN | Decode: >>2<<
					TOKEN_NUMBER | Decode: >>+<<
					Token fully decoded:  2 | type: 0 | size: 1
					Tokens decoded: 5
					SEEK_NEXT_TOKEN | Decode: >>+<<
					-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >>+<<
					<<-- "static bool User::Equation_parser::is_symbol(char)" | N
					-->> "static bool User::Equation_parser::is_operator(char)" | Digit: >>+<<
					<<-- "static bool User::Equation_parser::is_operator(char)" | Y
					Operator detected: >>+<< | Token: +
					Token fully decoded:  + | type: 2 | size: 1
					Tokens decoded: 6
					SEEK_NEXT_TOKEN | Decode: >>3<<
					TOKEN_NUMBER | Decode: >>-<<
					Token fully decoded:  3 | type: 0 | size: 1
					Tokens decoded: 7
					SEEK_NEXT_TOKEN | Decode: >>-<<
					-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >>-<<
					<<-- "static bool User::Equation_parser::is_symbol(char)" | N
					-->> "static bool User::Equation_parser::is_operator(char)" | Digit: >>-<<
					<<-- "static bool User::Equation_parser::is_operator(char)" | Y
					Operator detected: >>-<< | Token: -
					Token fully decoded:  - | type: 2 | size: 1
					Tokens decoded: 8
					SEEK_NEXT_TOKEN | Decode: >>4<<
					TOKEN_NUMBER | Decode: >>+<<
					Token fully decoded:  4 | type: 0 | size: 1
					Tokens decoded: 9
					SEEK_NEXT_TOKEN | Decode: >>+<<
					-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >>+<<
					<<-- "static bool User::Equation_parser::is_symbol(char)" | N
					-->> "static bool User::Equation_parser::is_operator(char)" | Digit: >>+<<
					<<-- "static bool User::Equation_parser::is_operator(char)" | Y
					Operator detected: >>+<< | Token: +
					Token fully decoded:  + | type: 2 | size: 1
					Tokens decoded: 10
					SEEK_NEXT_TOKEN | Decode: >>5<<
					TOKEN_NUMBER | Decode: >>-<<
					Token fully decoded:  5 | type: 0 | size: 1
					Tokens decoded: 11
					SEEK_NEXT_TOKEN | Decode: >>-<<
					-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >>-<<
					<<-- "static bool User::Equation_parser::is_symbol(char)" | N
					-->> "static bool User::Equation_parser::is_operator(char)" | Digit: >>-<<
					<<-- "static bool User::Equation_parser::is_operator(char)" | Y
					Operator detected: >>-<< | Token: -
					Token fully decoded:  - | type: 2 | size: 1
					Tokens decoded: 12
					SEEK_NEXT_TOKEN | Decode: >>6<<
					TOKEN_NUMBER | Decode: >>+<<
					Token fully decoded:  6 | type: 0 | size: 1
					Tokens decoded: 13
					SEEK_NEXT_TOKEN | Decode: >>+<<
					-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >>+<<
					<<-- "static bool User::Equation_parser::is_symbol(char)" | N
					-->> "static bool User::Equation_parser::is_operator(char)" | Digit: >>+<<
					<<-- "static bool User::Equation_parser::is_operator(char)" | Y
					Operator detected: >>+<< | Token: +
					Token fully decoded:  + | type: 2 | size: 1
					Tokens decoded: 14
					SEEK_NEXT_TOKEN | Decode: >>7<<
					Token fully decoded:  7 | type: 0 | size: 1
					Tokens decoded: 15
					Equations decoded into 15 tokens
					Token: >>4<< | Type: 0 | Size: 1
					Token: >>=<< | Type: 2 | Size: 1
					Token: >>1<< | Type: 0 | Size: 1
					Token: >>-<< | Type: 2 | Size: 1
					Token: >>2<< | Type: 0 | Size: 1
					Token: >>+<< | Type: 2 | Size: 1
					Token: >>3<< | Type: 0 | Size: 1
					Token: >>-<< | Type: 2 | Size: 1
					Token: >>4<< | Type: 0 | Size: 1
					Token: >>+<< | Type: 2 | Size: 1
					Token: >>5<< | Type: 0 | Size: 1
					Token: >>-<< | Type: 2 | Size: 1
					Token: >>6<< | Type: 0 | Size: 1
					Token: >>+<< | Type: 2 | Size: 1
					Token: >>7<< | Type: 0 | Size: 1
				<<-- "static bool User::Equation_parser::equation_to_token_array(std::__cxx11::string, std::vector<std::__cxx11::basic_string<char> >&, std::vector<User::Equation_parser::Token>&)" | Decoded 15 tokens
				Tree wasn't empty: 10 | FLUSH
				-->> "bool User::Tree<Payload>::flush() [with Payload = User::Equation_parser::Token]" | Nodes inside the tree: 10
					-->> "bool User::Tree<Payload>::init_root() [with Payload = User::Equation_parser::Token]" |
					<<-- "bool User::Tree<Payload>::init_root() [with Payload = User::Equation_parser::Token]" |
				<<-- "bool User::Tree<Payload>::flush() [with Payload = User::Equation_parser::Token]" | Nodes inside the tree: 1
				-->> "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | Token Array Size: 15 | Father 0
					-->> "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 15
						Token: 4 | Priority: 0
						Token: = | Priority: 0
						Token: 1 | Priority: 0
						Token: - | Priority: 0
						Token: 2 | Priority: 0
						Token: + | Priority: 0
						Token: 3 | Priority: 0
						Token: - | Priority: 0
						Token: 4 | Priority: 0
						Token: + | Priority: 0
						Token: 5 | Priority: 0
						Token: - | Priority: 0
						Token: 6 | Priority: 0
						Token: + | Priority: 0
						Token: 7 | Priority: 0
					<<-- "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 15 | Highest Priority Token: <=> | 0 0
					Core Token: >=< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 0
					LHS: >4<
					RHS: >1<
					RHS: >-<
					RHS: >2<
					RHS: >+<
					RHS: >3<
					RHS: >-<
					RHS: >4<
					RHS: >+<
					RHS: >5<
					RHS: >-<
					RHS: >6<
					RHS: >+<
					RHS: >7<
					LHS Tokens: 1 | RHS Tokens: 13
					ROOT: >=<
					-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 0
					<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					LHS: >=<
					-->> "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | Token Array Size: 1 | Father 0
						-->> "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 1
							Token: 4 | Priority: 0
						<<-- "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 1 | Highest Priority Token: <4> | 0 5
						Core Token: >4< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 5
						LHS Tokens: 0 | RHS Tokens: 0
						-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 0
						<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
						-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
						<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 0 | Own Index: 1 | Nodes under Father: 2
					<<-- "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | PASS
					LHS of size 1 under father 0
					-->> "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | Token Array Size: 13 | Father 0
						-->> "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 13
							Token: 1 | Priority: 0
							Token: - | Priority: 0
							Token: 2 | Priority: 0
							Token: + | Priority: 0
							Token: 3 | Priority: 0
							Token: - | Priority: 0
							Token: 4 | Priority: 0
							Token: + | Priority: 0
							Token: 5 | Priority: 0
							Token: - | Priority: 0
							Token: 6 | Priority: 0
							Token: + | Priority: 0
							Token: 7 | Priority: 0
						<<-- "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 13 | Highest Priority Token: <-> | 0 3
						Core Token: >-< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 3
						LHS: >1<
						RHS: >2<
						RHS: >+<
						RHS: >3<
						RHS: >-<
						RHS: >4<
						RHS: >+<
						RHS: >5<
						RHS: >-<
						RHS: >6<
						RHS: >+<
						RHS: >7<
						LHS Tokens: 1 | RHS Tokens: 11
						-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
						<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 0 | Own Index: 2 | Nodes under Father: 3
						-->> "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | Token Array Size: 1 | Father 2
							-->> "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 1
								Token: 1 | Priority: 0
							<<-- "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 1 | Highest Priority Token: <1> | 0 5
							Core Token: >1< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 5
							LHS Tokens: 0 | RHS Tokens: 0
							-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
							<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 2 | Own Index: 3 | Nodes under Father: 2
						<<-- "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | PASS
						LHS of size 1 under father 2
						-->> "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | Token Array Size: 11 | Father 2
							-->> "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 11
								Token: 2 | Priority: 0
								Token: + | Priority: 0
								Token: 3 | Priority: 0
								Token: - | Priority: 0
								Token: 4 | Priority: 0
								Token: + | Priority: 0
								Token: 5 | Priority: 0
								Token: - | Priority: 0
								Token: 6 | Priority: 0
								Token: + | Priority: 0
								Token: 7 | Priority: 0
							<<-- "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 11 | Highest Priority Token: <+> | 0 3
							Core Token: >+< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 3
							LHS: >2<
							RHS: >3<
							RHS: >-<
							RHS: >4<
							RHS: >+<
							RHS: >5<
							RHS: >-<
							RHS: >6<
							RHS: >+<
							RHS: >7<
							LHS Tokens: 1 | RHS Tokens: 9
							-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
							<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 2 | Own Index: 4 | Nodes under Father: 3
							-->> "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | Token Array Size: 1 | Father 4
								-->> "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 1
									Token: 2 | Priority: 0
								<<-- "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 1 | Highest Priority Token: <2> | 0 5
								Core Token: >2< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 5
								LHS Tokens: 0 | RHS Tokens: 0
								-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
								<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 4 | Own Index: 5 | Nodes under Father: 2
							<<-- "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | PASS
							LHS of size 1 under father 4
							-->> "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | Token Array Size: 9 | Father 4
								-->> "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 9
									Token: 3 | Priority: 0
									Token: - | Priority: 0
									Token: 4 | Priority: 0
									Token: + | Priority: 0
									Token: 5 | Priority: 0
									Token: - | Priority: 0
									Token: 6 | Priority: 0
									Token: + | Priority: 0
									Token: 7 | Priority: 0
								<<-- "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 9 | Highest Priority Token: <-> | 0 3
								Core Token: >-< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 3
								LHS: >3<
								RHS: >4<
								RHS: >+<
								RHS: >5<
								RHS: >-<
								RHS: >6<
								RHS: >+<
								RHS: >7<
								LHS Tokens: 1 | RHS Tokens: 7
								-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
								<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 4 | Own Index: 6 | Nodes under Father: 3
								-->> "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | Token Array Size: 1 | Father 6
									-->> "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 1
										Token: 3 | Priority: 0
									<<-- "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 1 | Highest Priority Token: <3> | 0 5
									Core Token: >3< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 5
									LHS Tokens: 0 | RHS Tokens: 0
									-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
									<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 6 | Own Index: 7 | Nodes under Father: 2
								<<-- "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | PASS
								LHS of size 1 under father 6
								-->> "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | Token Array Size: 7 | Father 6
									-->> "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 7
										Token: 4 | Priority: 0
										Token: + | Priority: 0
										Token: 5 | Priority: 0
										Token: - | Priority: 0
										Token: 6 | Priority: 0
										Token: + | Priority: 0
										Token: 7 | Priority: 0
									<<-- "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 7 | Highest Priority Token: <+> | 0 3
									Core Token: >+< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 3
									LHS: >4<
									RHS: >5<
									RHS: >-<
									RHS: >6<
									RHS: >+<
									RHS: >7<
									LHS Tokens: 1 | RHS Tokens: 5
									-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
									<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 6 | Own Index: 8 | Nodes under Father: 3
									-->> "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | Token Array Size: 1 | Father 8
										-->> "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 1
											Token: 4 | Priority: 0
										<<-- "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 1 | Highest Priority Token: <4> | 0 5
										Core Token: >4< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 5
										LHS Tokens: 0 | RHS Tokens: 0
										-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
										<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 8 | Own Index: 9 | Nodes under Father: 2
									<<-- "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | PASS
									LHS of size 1 under father 8
									-->> "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | Token Array Size: 5 | Father 8
										-->> "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 5
											Token: 5 | Priority: 0
											Token: - | Priority: 0
											Token: 6 | Priority: 0
											Token: + | Priority: 0
											Token: 7 | Priority: 0
										<<-- "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 5 | Highest Priority Token: <-> | 0 3
										Core Token: >-< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 3
										LHS: >5<
										RHS: >6<
										RHS: >+<
										RHS: >7<
										LHS Tokens: 1 | RHS Tokens: 3
										-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
										<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 8 | Own Index: 10 | Nodes under Father: 3
										-->> "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | Token Array Size: 1 | Father 10
											-->> "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 1
												Token: 5 | Priority: 0
											<<-- "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 1 | Highest Priority Token: <5> | 0 5
											Core Token: >5< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 5
											LHS Tokens: 0 | RHS Tokens: 0
											-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
											<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 10 | Own Index: 11 | Nodes under Father: 2
										<<-- "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | PASS
										LHS of size 1 under father 10
										-->> "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | Token Array Size: 3 | Father 10
											-->> "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 3
												Token: 6 | Priority: 0
												Token: + | Priority: 0
												Token: 7 | Priority: 0
											<<-- "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 3 | Highest Priority Token: <+> | 0 3
											Core Token: >+< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 3
											LHS: >6<
											RHS: >7<
											LHS Tokens: 1 | RHS Tokens: 1
											-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
											<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 10 | Own Index: 12 | Nodes under Father: 3
											-->> "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | Token Array Size: 1 | Father 12
												-->> "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 1
												Token: 6 | Priority: 0
											<<-- "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 1 | Highest Priority Token: <6> | 0 5
											Core Token: >6< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 5
											LHS Tokens: 0 | RHS Tokens: 0
											-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
											<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 12 | Own Index: 13 | Nodes under Father: 2
										<<-- "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | PASS
										LHS of size 1 under father 12
										-->> "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | Token Array Size: 1 | Father 12
											-->> "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 1
												Token: 7 | Priority: 0
											<<-- "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 1 | Highest Priority Token: <7> | 0 5
											Core Token: >7< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 5
											LHS Tokens: 0 | RHS Tokens: 0
											-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
											<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 12 | Own Index: 14 | Nodes under Father: 3
										<<-- "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | PASS
										RHS of size 1 under father 12
									<<-- "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | PASS
									RHS of size 3 under father 10
								<<-- "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | PASS
								RHS of size 5 under father 8
							<<-- "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | PASS
							RHS of size 7 under father 6
						<<-- "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | PASS
						RHS of size 9 under father 4
					<<-- "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | PASS
					RHS of size 11 under father 2
				<<-- "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | PASS
				RHS of size 13 under father 0
			<<-- "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | PASS
			-->> "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Index: 0
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afaa4 | Begin: 1 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 0 | Stack size: 1
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 0
						Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 0 | Depth: 1
						Found children || Index 2 | Own Index: 2 | Father Index: 0 | Own Priority 1 | Children: 2 | Depth: 1
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 1 | Index: 0
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 1
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 2 | Index: 1
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 2
						Found children || Index 3 | Own Index: 3 | Father Index: 2 | Own Priority 0 | Children: 0 | Depth: 2
						Found children || Index 4 | Own Index: 4 | Father Index: 2 | Own Priority 1 | Children: 2 | Depth: 2
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 3 | Index: 2
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 3
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 4 | Index: 3
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 4
						Found children || Index 5 | Own Index: 5 | Father Index: 4 | Own Priority 0 | Children: 0 | Depth: 3
						Found children || Index 6 | Own Index: 6 | Father Index: 4 | Own Priority 1 | Children: 2 | Depth: 3
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 5 | Index: 4
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 5
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 6 | Index: 5
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 6
						Found children || Index 7 | Own Index: 7 | Father Index: 6 | Own Priority 0 | Children: 0 | Depth: 4
						Found children || Index 8 | Own Index: 8 | Father Index: 6 | Own Priority 1 | Children: 2 | Depth: 4
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 7 | Index: 6
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 7
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 8 | Index: 7
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 8
						Found children || Index 9 | Own Index: 9 | Father Index: 8 | Own Priority 0 | Children: 0 | Depth: 5
						Found children || Index 10 | Own Index: 10 | Father Index: 8 | Own Priority 1 | Children: 2 | Depth: 5
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 9 | Index: 8
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 9
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 10 | Index: 9
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 10
						Found children || Index 11 | Own Index: 11 | Father Index: 10 | Own Priority 0 | Children: 0 | Depth: 6
						Found children || Index 12 | Own Index: 12 | Father Index: 10 | Own Priority 1 | Children: 2 | Depth: 6
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 11 | Index: 10
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 11
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 12 | Index: 11
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 12
						Found children || Index 13 | Own Index: 13 | Father Index: 12 | Own Priority 0 | Children: 0 | Depth: 7
						Found children || Index 14 | Own Index: 14 | Father Index: 12 | Own Priority 1 | Children: 0 | Depth: 7
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 13 | Index: 12
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 13
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 14 | Index: 13
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 14
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 15 | Index: 14
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
			<<-- "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
			-->> "static int User::Equation_parser::aggregate_tree_token_sum_diff(User::Tree<User::Equation_parser::Token>&)" |
				-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 1
				<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 2
				<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 0
				<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 3
				<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 4
				<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 2
				<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				Candidate 4
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 4
					Found children || Index 5 | Own Index: 5 | Father Index: 4 | Own Priority 0 | Children: 0 | Depth: 3
					Found children || Index 6 | Own Index: 6 | Father Index: 4 | Own Priority 1 | Children: 2 | Depth: 3
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
				Children: 2
				-->> "bool User::Tree<Payload>::move(size_t, size_t, User::Tree<Payload>::Move_mode) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::relink_node_nocheck(size_t, size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Target Index: 5 | New Father: 2
						Relink Node 5 as child of 2
						With priority 2 of 3
						Old father 4 now has 1 children
						Previous sibling 6 now has priority 0 of 1
					<<-- "bool User::Tree<Payload>::relink_node_nocheck(size_t, size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				<<-- "bool User::Tree<Payload>::move(size_t, size_t, User::Tree<Payload>::Move_mode) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Success: OK
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 4
					Found children || Index 6 | Own Index: 6 | Father Index: 4 | Own Priority 0 | Children: 2 | Depth: 3
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 1 | 1 children
				Children: 1
				-->> "bool User::Tree<Payload>::move(size_t, size_t, User::Tree<Payload>::Move_mode) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::relink_node_nocheck(size_t, size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Target Index: 6 | New Father: 2
						Relink Node 6 as child of 2
						With priority 3 of 4
						Old father 4 now has 0 children
					<<-- "bool User::Tree<Payload>::relink_node_nocheck(size_t, size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				<<-- "bool User::Tree<Payload>::move(size_t, size_t, User::Tree<Payload>::Move_mode) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Success: OK
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 4
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
				-->> "bool User::Tree<Payload>::erease(size_t, User::Tree<Payload>::Erease_mode) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::bump_children(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
						-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 4
						<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
					<<-- "bool User::Tree<Payload>::bump_children(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | target node has 0 children to be bumped as siblings
					-->> "bool User::Tree<Payload>::erease_single_node(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Erease index 4
						Erease node: 5
						Father 2 now has 3 children
						Adjust priority of node 5 to 1
						Adjusted own index of node 4
						Adjust priority of node 6 to 2
						Adjusted own index of node 5
						Adjusted own index of node 6
						Adjusted father of node 6 to 5
						Adjusted own index of node 7
						Adjusted father of node 7 to 5
						Adjusted own index of node 8
						Adjusted father of node 8 to 7
						Adjusted own index of node 9
						Adjusted father of node 9 to 7
						Adjusted own index of node 10
						Adjusted father of node 10 to 9
						Adjusted own index of node 11
						Adjusted father of node 11 to 9
						Adjusted own index of node 12
						Adjusted father of node 12 to 11
						Adjusted own index of node 13
						Adjusted father of node 13 to 11
					<<-- "bool User::Tree<Payload>::erease_single_node(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				<<-- "bool User::Tree<Payload>::erease(size_t, User::Tree<Payload>::Erease_mode) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 1
				<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 2
				<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 0
				<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 3
				<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 4
				<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 5
				<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 2
				<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				Candidate 5
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 5
					Found children || Index 6 | Own Index: 6 | Father Index: 5 | Own Priority 0 | Children: 0 | Depth: 4
					Found children || Index 7 | Own Index: 7 | Father Index: 5 | Own Priority 1 | Children: 2 | Depth: 4
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
				Children: 2
				-->> "bool User::Tree<Payload>::move(size_t, size_t, User::Tree<Payload>::Move_mode) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::relink_node_nocheck(size_t, size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Target Index: 6 | New Father: 2
						Relink Node 6 as child of 2
						With priority 3 of 4
						Old father 5 now has 1 children
						Previous sibling 7 now has priority 0 of 1
					<<-- "bool User::Tree<Payload>::relink_node_nocheck(size_t, size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				<<-- "bool User::Tree<Payload>::move(size_t, size_t, User::Tree<Payload>::Move_mode) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Success: OK
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 5
					Found children || Index 7 | Own Index: 7 | Father Index: 5 | Own Priority 0 | Children: 2 | Depth: 4
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 1 | 1 children
				Children: 1
				-->> "bool User::Tree<Payload>::move(size_t, size_t, User::Tree<Payload>::Move_mode) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::relink_node_nocheck(size_t, size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Target Index: 7 | New Father: 2
						Relink Node 7 as child of 2
						With priority 4 of 5
						Old father 5 now has 0 children
					<<-- "bool User::Tree<Payload>::relink_node_nocheck(size_t, size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				<<-- "bool User::Tree<Payload>::move(size_t, size_t, User::Tree<Payload>::Move_mode) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Success: OK
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 5
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
				-->> "bool User::Tree<Payload>::erease(size_t, User::Tree<Payload>::Erease_mode) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::bump_children(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
						-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 5
						<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
					<<-- "bool User::Tree<Payload>::bump_children(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | target node has 0 children to be bumped as siblings
					-->> "bool User::Tree<Payload>::erease_single_node(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Erease index 5
						Erease node: 6
						Father 2 now has 4 children
						Adjust priority of node 6 to 2
						Adjusted own index of node 5
						Adjust priority of node 7 to 3
						Adjusted own index of node 6
						Adjusted own index of node 7
						Adjusted father of node 7 to 6
						Adjusted own index of node 8
						Adjusted father of node 8 to 6
						Adjusted own index of node 9
						Adjusted father of node 9 to 8
						Adjusted own index of node 10
						Adjusted father of node 10 to 8
						Adjusted own index of node 11
						Adjusted father of node 11 to 10
						Adjusted own index of node 12
						Adjusted father of node 12 to 10
					<<-- "bool User::Tree<Payload>::erease_single_node(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				<<-- "bool User::Tree<Payload>::erease(size_t, User::Tree<Payload>::Erease_mode) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 1
				<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 2
				<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 0
				<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 3
				<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 4
				<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 5
				<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 6
				<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 2
				<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				Candidate 6
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 6
					Found children || Index 7 | Own Index: 7 | Father Index: 6 | Own Priority 0 | Children: 0 | Depth: 5
					Found children || Index 8 | Own Index: 8 | Father Index: 6 | Own Priority 1 | Children: 2 | Depth: 5
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
				Children: 2
				-->> "bool User::Tree<Payload>::move(size_t, size_t, User::Tree<Payload>::Move_mode) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::relink_node_nocheck(size_t, size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Target Index: 7 | New Father: 2
						Relink Node 7 as child of 2
						With priority 4 of 5
						Old father 6 now has 1 children
						Previous sibling 8 now has priority 0 of 1
					<<-- "bool User::Tree<Payload>::relink_node_nocheck(size_t, size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				<<-- "bool User::Tree<Payload>::move(size_t, size_t, User::Tree<Payload>::Move_mode) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Success: OK
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 6
					Found children || Index 8 | Own Index: 8 | Father Index: 6 | Own Priority 0 | Children: 2 | Depth: 5
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 1 | 1 children
				Children: 1
				-->> "bool User::Tree<Payload>::move(size_t, size_t, User::Tree<Payload>::Move_mode) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::relink_node_nocheck(size_t, size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Target Index: 8 | New Father: 2
						Relink Node 8 as child of 2
						With priority 5 of 6
						Old father 6 now has 0 children
					<<-- "bool User::Tree<Payload>::relink_node_nocheck(size_t, size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				<<-- "bool User::Tree<Payload>::move(size_t, size_t, User::Tree<Payload>::Move_mode) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Success: OK
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 6
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
				-->> "bool User::Tree<Payload>::erease(size_t, User::Tree<Payload>::Erease_mode) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::bump_children(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
						-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 6
						<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
					<<-- "bool User::Tree<Payload>::bump_children(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | target node has 0 children to be bumped as siblings
					-->> "bool User::Tree<Payload>::erease_single_node(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Erease index 6
						Erease node: 7
						Father 2 now has 5 children
						Adjust priority of node 7 to 3
						Adjusted own index of node 6
						Adjust priority of node 8 to 4
						Adjusted own index of node 7
						Adjusted own index of node 8
						Adjusted father of node 8 to 7
						Adjusted own index of node 9
						Adjusted father of node 9 to 7
						Adjusted own index of node 10
						Adjusted father of node 10 to 9
						Adjusted own index of node 11
						Adjusted father of node 11 to 9
					<<-- "bool User::Tree<Payload>::erease_single_node(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				<<-- "bool User::Tree<Payload>::erease(size_t, User::Tree<Payload>::Erease_mode) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 1
				<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 2
				<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 0
				<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 3
				<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 4
				<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 5
				<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 6
				<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 7
				<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 2
				<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				Candidate 7
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 7
					Found children || Index 8 | Own Index: 8 | Father Index: 7 | Own Priority 0 | Children: 0 | Depth: 6
					Found children || Index 9 | Own Index: 9 | Father Index: 7 | Own Priority 1 | Children: 2 | Depth: 6
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
				Children: 2
				-->> "bool User::Tree<Payload>::move(size_t, size_t, User::Tree<Payload>::Move_mode) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::relink_node_nocheck(size_t, size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Target Index: 8 | New Father: 2
						Relink Node 8 as child of 2
						With priority 5 of 6
						Old father 7 now has 1 children
						Previous sibling 9 now has priority 0 of 1
					<<-- "bool User::Tree<Payload>::relink_node_nocheck(size_t, size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				<<-- "bool User::Tree<Payload>::move(size_t, size_t, User::Tree<Payload>::Move_mode) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Success: OK
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 7
					Found children || Index 9 | Own Index: 9 | Father Index: 7 | Own Priority 0 | Children: 2 | Depth: 6
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 1 | 1 children
				Children: 1
				-->> "bool User::Tree<Payload>::move(size_t, size_t, User::Tree<Payload>::Move_mode) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::relink_node_nocheck(size_t, size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Target Index: 9 | New Father: 2
						Relink Node 9 as child of 2
						With priority 6 of 7
						Old father 7 now has 0 children
					<<-- "bool User::Tree<Payload>::relink_node_nocheck(size_t, size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				<<-- "bool User::Tree<Payload>::move(size_t, size_t, User::Tree<Payload>::Move_mode) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Success: OK
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 7
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
				-->> "bool User::Tree<Payload>::erease(size_t, User::Tree<Payload>::Erease_mode) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::bump_children(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
						-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 7
						<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
					<<-- "bool User::Tree<Payload>::bump_children(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | target node has 0 children to be bumped as siblings
					-->> "bool User::Tree<Payload>::erease_single_node(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Erease index 7
						Erease node: 8
						Father 2 now has 6 children
						Adjust priority of node 8 to 4
						Adjusted own index of node 7
						Adjust priority of node 9 to 5
						Adjusted own index of node 8
						Adjusted own index of node 9
						Adjusted father of node 9 to 8
						Adjusted own index of node 10
						Adjusted father of node 10 to 8
					<<-- "bool User::Tree<Payload>::erease_single_node(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				<<-- "bool User::Tree<Payload>::erease(size_t, User::Tree<Payload>::Erease_mode) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 1
				<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 2
				<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 0
				<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 3
				<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 4
				<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 5
				<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 6
				<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 7
				<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 8
				<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 2
				<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				Candidate 8
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 8
					Found children || Index 9 | Own Index: 9 | Father Index: 8 | Own Priority 0 | Children: 0 | Depth: 7
					Found children || Index 10 | Own Index: 10 | Father Index: 8 | Own Priority 1 | Children: 0 | Depth: 7
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
				Children: 2
				-->> "bool User::Tree<Payload>::move(size_t, size_t, User::Tree<Payload>::Move_mode) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::relink_node_nocheck(size_t, size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Target Index: 9 | New Father: 2
						Relink Node 9 as child of 2
						With priority 6 of 7
						Old father 8 now has 1 children
						Previous sibling 10 now has priority 0 of 1
					<<-- "bool User::Tree<Payload>::relink_node_nocheck(size_t, size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				<<-- "bool User::Tree<Payload>::move(size_t, size_t, User::Tree<Payload>::Move_mode) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Success: OK
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 8
					Found children || Index 10 | Own Index: 10 | Father Index: 8 | Own Priority 0 | Children: 0 | Depth: 7
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 1 | 1 children
				Children: 1
				-->> "bool User::Tree<Payload>::move(size_t, size_t, User::Tree<Payload>::Move_mode) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::relink_node_nocheck(size_t, size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Target Index: 10 | New Father: 2
						Relink Node 10 as child of 2
						With priority 7 of 8
						Old father 8 now has 0 children
					<<-- "bool User::Tree<Payload>::relink_node_nocheck(size_t, size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				<<-- "bool User::Tree<Payload>::move(size_t, size_t, User::Tree<Payload>::Move_mode) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Success: OK
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 8
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
				-->> "bool User::Tree<Payload>::erease(size_t, User::Tree<Payload>::Erease_mode) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::bump_children(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
						-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 8
						<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
					<<-- "bool User::Tree<Payload>::bump_children(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | target node has 0 children to be bumped as siblings
					-->> "bool User::Tree<Payload>::erease_single_node(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Erease index 8
						Erease node: 9
						Father 2 now has 7 children
						Adjust priority of node 9 to 5
						Adjusted own index of node 8
						Adjust priority of node 10 to 6
						Adjusted own index of node 9
					<<-- "bool User::Tree<Payload>::erease_single_node(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				<<-- "bool User::Tree<Payload>::erease(size_t, User::Tree<Payload>::Erease_mode) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 1
				<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 2
				<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 0
				<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 3
				<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 4
				<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 5
				<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 6
				<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 7
				<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 8
				<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 9
				<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
			<<-- "static int User::Equation_parser::aggregate_tree_token_sum_diff(User::Tree<User::Equation_parser::Token>&)" | Ereased: 5 | Moved: 10
			-->> "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Index: 0
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afaa4 | Begin: 1 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 0 | Stack size: 1
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 10 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 0
						Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 0 | Depth: 1
						Found children || Index 2 | Own Index: 2 | Father Index: 0 | Own Priority 1 | Children: 7 | Depth: 1
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 1 | Index: 0
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 10 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 1
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 2 | Index: 1
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 10 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 2
						Found children || Index 3 | Own Index: 3 | Father Index: 2 | Own Priority 0 | Children: 0 | Depth: 2
						Found children || Index 4 | Own Index: 4 | Father Index: 2 | Own Priority 1 | Children: 0 | Depth: 2
						Found children || Index 5 | Own Index: 5 | Father Index: 2 | Own Priority 2 | Children: 0 | Depth: 2
						Found children || Index 6 | Own Index: 6 | Father Index: 2 | Own Priority 3 | Children: 0 | Depth: 2
						Found children || Index 7 | Own Index: 7 | Father Index: 2 | Own Priority 4 | Children: 0 | Depth: 2
						Found children || Index 8 | Own Index: 8 | Father Index: 2 | Own Priority 5 | Children: 0 | Depth: 2
						Found children || Index 9 | Own Index: 9 | Father Index: 2 | Own Priority 6 | Children: 0 | Depth: 2
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 7 | 7 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 3 | Index: 2
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 10 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 3
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 4 | Index: 3
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 10 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 4
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 5 | Index: 4
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 10 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 5
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 6 | Index: 5
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 10 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 6
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 7 | Index: 6
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 10 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 7
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 8 | Index: 7
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 10 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 8
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 9 | Index: 8
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 10 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 9
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 10 | Index: 9
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afad4 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 10 | Stack size: 0
			<<-- "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
		<<-- "bool User::Equation_parser::parse(std::__cxx11::string)" | Token array size: 15 | Token tree size: 10
		TOKEN0
		TOKEN1
		TOKEN2
		TOKEN3
		TOKEN4
		TOKEN5
		TOKEN6
		TOKEN7
		TOKEN8
		TOKEN9
		TOKEN10
		TOKEN11
		TOKEN12
		TOKEN13
		TOKEN14
		-->> "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Index: 0
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afbf4 | Begin: 1 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 0 | Stack size: 1
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 10 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 0
					Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 0 | Depth: 1
					Found children || Index 2 | Own Index: 2 | Father Index: 0 | Own Priority 1 | Children: 7 | Depth: 1
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 1 | Index: 0
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 10 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 1
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 2 | Index: 1
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 10 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 2
					Found children || Index 3 | Own Index: 3 | Father Index: 2 | Own Priority 0 | Children: 0 | Depth: 2
					Found children || Index 4 | Own Index: 4 | Father Index: 2 | Own Priority 1 | Children: 0 | Depth: 2
					Found children || Index 5 | Own Index: 5 | Father Index: 2 | Own Priority 2 | Children: 0 | Depth: 2
					Found children || Index 6 | Own Index: 6 | Father Index: 2 | Own Priority 3 | Children: 0 | Depth: 2
					Found children || Index 7 | Own Index: 7 | Father Index: 2 | Own Priority 4 | Children: 0 | Depth: 2
					Found children || Index 8 | Own Index: 8 | Father Index: 2 | Own Priority 5 | Children: 0 | Depth: 2
					Found children || Index 9 | Own Index: 9 | Father Index: 2 | Own Priority 6 | Children: 0 | Depth: 2
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 7 | 7 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 3 | Index: 2
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 10 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 3
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 4 | Index: 3
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 10 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 4
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 5 | Index: 4
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 10 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 5
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 6 | Index: 5
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 10 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 6
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 7 | Index: 6
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 10 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 7
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 8 | Index: 7
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 10 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 8
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 9 | Index: 8
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 10 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 9
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 10 | Index: 9
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 10 | Stack size: 0
		<<-- "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
		-->> "User::Tree<Payload>::Tree(std::vector<User::Tree<Payload>::St_minimal_node>) [with Payload = User::Equation_parser::Token]" | This: 007afdb8 | Nodes: 10
			-->> "bool User::Tree<Payload>::init_class_vars(Payload) [with Payload = User::Equation_parser::Token]" |
			<<-- "bool User::Tree<Payload>::init_class_vars(Payload) [with Payload = User::Equation_parser::Token]" |
			-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
			<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 0 | Own Index: 1 | Nodes under Father: 2
			-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
			<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 0 | Own Index: 2 | Nodes under Father: 3
			-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
			<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 2 | Own Index: 3 | Nodes under Father: 2
			-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
			<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 2 | Own Index: 4 | Nodes under Father: 3
			-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
			<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 2 | Own Index: 5 | Nodes under Father: 4
			-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
			<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 2 | Own Index: 6 | Nodes under Father: 5
			-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
			<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 2 | Own Index: 7 | Nodes under Father: 6
			-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
			<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 2 | Own Index: 8 | Nodes under Father: 7
			-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
			<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 2 | Own Index: 9 | Nodes under Father: 8
			-->> "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Index: 0
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afbf4 | Begin: 1 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 0 | Stack size: 1
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 10 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 0
						Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 0 | Depth: 1
						Found children || Index 2 | Own Index: 2 | Father Index: 0 | Own Priority 1 | Children: 7 | Depth: 1
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 1 | Index: 0
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 10 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 1
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 2 | Index: 1
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 10 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 2
						Found children || Index 3 | Own Index: 3 | Father Index: 2 | Own Priority 0 | Children: 0 | Depth: 2
						Found children || Index 4 | Own Index: 4 | Father Index: 2 | Own Priority 1 | Children: 0 | Depth: 2
						Found children || Index 5 | Own Index: 5 | Father Index: 2 | Own Priority 2 | Children: 0 | Depth: 2
						Found children || Index 6 | Own Index: 6 | Father Index: 2 | Own Priority 3 | Children: 0 | Depth: 2
						Found children || Index 7 | Own Index: 7 | Father Index: 2 | Own Priority 4 | Children: 0 | Depth: 2
						Found children || Index 8 | Own Index: 8 | Father Index: 2 | Own Priority 5 | Children: 0 | Depth: 2
						Found children || Index 9 | Own Index: 9 | Father Index: 2 | Own Priority 6 | Children: 0 | Depth: 2
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 7 | 7 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 3 | Index: 2
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 10 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 3
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 4 | Index: 3
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 10 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 4
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 5 | Index: 4
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 10 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 5
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 6 | Index: 5
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 10 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 6
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 7 | Index: 6
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 10 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 7
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 8 | Index: 7
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 10 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 8
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 9 | Index: 8
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 10 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 9
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 10 | Index: 9
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afc24 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 10 | Stack size: 0
			<<-- "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
			-->> "bool User::Tree<Payload>::operator==(User::Tree<Payload>&) [with Payload = User::Equation_parser::Token]" |
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afb6c | Begin: 1 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 0 | Stack size: 1
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afb3c | Begin: 1 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 0 | Stack size: 1
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afb9c | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 10 | Stack size: 0
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afbcc | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 10 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 0
						Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 0 | Depth: 1
						Found children || Index 2 | Own Index: 2 | Father Index: 0 | Own Priority 1 | Children: 7 | Depth: 1
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 1 | Index: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father: 0
						Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 0 | Depth: 1
						Found children || Index 2 | Own Index: 2 | Father Index: 0 | Own Priority 1 | Children: 7 | Depth: 1
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 1 | Index: 0
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afb9c | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 10 | Stack size: 0
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Parent tree: 007afbcc | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::Token>::Node; Payload = User::Equation_parser::Token; size_t = unsigned int]" | Count nodes: 10 | Stack size: 0
				Unequal string | LHS: 4 | RHS: 28
			<<-- "bool User::Tree<Payload>::operator==(User::Tree<Payload>&) [with Payload = User::Equation_parser::Token]" | Different payloads: LHS >4 | BASE_NUMBER< | RHS >28 | BASE_NUMBER<
			ERR: FAIL test pattern: 18
			-->> "User::Tree<Payload>::~Tree() [with Payload = User::Equation_parser::Token]" | This: 007afdb8
			<<-- "User::Tree<Payload>::~Tree() [with Payload = User::Equation_parser::Token]" |
			-->> "User::Tree<Payload>::~Tree() [with Payload = User::Equation_parser::Token]" | This: 007afd6c
			<<-- "User::Tree<Payload>::~Tree() [with Payload = User::Equation_parser::Token]" |
			PATTERN19 >4=((((((1-2)+3)-4)+5)-6)+7)<
			-->> "bool User::Equation_parser::parse(std::__cxx11::string)" | Parse: 4=((((((1-2)+3)-4)+5)-6)+7) | Size: 27
				-->> "static bool User::Equation_parser::equation_to_token_array(std::__cxx11::string, std::vector<std::__cxx11::basic_string<char> >&, std::vector<User::Equation_parser::Token>&)" | Parse: 4=((((((1-2)+3)-4)+5)-6)+7) | Size: 27
					SEEK_NEXT_TOKEN | Decode: >>4<<
					TOKEN_NUMBER | Decode: >>=<<
					Token fully decoded:  4 | type: 0 | size: 1
					Tokens decoded: 1
					SEEK_NEXT_TOKEN | Decode: >>=<<
					-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >>=<<
					<<-- "static bool User::Equation_parser::is_symbol(char)" | N
					-->> "static bool User::Equation_parser::is_operator(char)" | Digit: >>=<<
					<<-- "static bool User::Equation_parser::is_operator(char)" | Y
					Operator detected: >>=<< | Token: =
					Token fully decoded:  = | type: 2 | size: 1
					Tokens decoded: 2
					SEEK_NEXT_TOKEN | Decode: >>(<<
					-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >>(<<
					<<-- "static bool User::Equation_parser::is_symbol(char)" | N
					-->> "static bool User::Equation_parser::is_operator(char)" | Digit: >>(<<
					<<-- "static bool User::Equation_parser::is_operator(char)" | N
					Open detected: >>(<< | Token: (
					Token fully decoded:  ( | type: 3 | size: 1
					Tokens decoded: 3
					SEEK_NEXT_TOKEN | Decode: >>(<<
					-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >>(<<
					<<-- "static bool User::Equation_parser::is_symbol(char)" | N
					-->> "static bool User::Equation_parser::is_operator(char)" | Digit: >>(<<
					<<-- "static bool User::Equation_parser::is_operator(char)" | N
					Open detected: >>(<< | Token: (
					Token fully decoded:  ( | type: 3 | size: 1
					Tokens decoded: 4
					SEEK_NEXT_TOKEN | Decode: >>(<<
					-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >>(<<
					<<-- "static bool User::Equation_parser::is_symbol(char)" | N
					-->> "static bool User::Equation_parser::is_operator(char)" | Digit: >>(<<
					<<-- "static bool User::Equation_parser::is_operator(char)" | N
					Open detected: >>(<< | Token: (
					Token fully decoded:  ( | type: 3 | size: 1
					Tokens decoded: 5
					SEEK_NEXT_TOKEN | Decode: >>(<<
					-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >>(<<
					<<-- "static bool User::Equation_parser::is_symbol(char)" | N
					-->> "static bool User::Equation_parser::is_operator(char)" | Digit: >>(<<
					<<-- "static bool User::Equation_parser::is_operator(char)" | N
					Open detected: >>(<< | Token: (
					Token fully decoded:  ( | type: 3 | size: 1
					Tokens decoded: 6
					SEEK_NEXT_TOKEN | Decode: >>(<<
					-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >>(<<
					<<-- "static bool User::Equation_parser::is_symbol(char)" | N
					-->> "static bool User::Equation_parser::is_operator(char)" | Digit: >>(<<
					<<-- "static bool User::Equation_parser::is_operator(char)" | N
					Open detected: >>(<< | Token: (
					Token fully decoded:  ( | type: 3 | size: 1
					Tokens decoded: 7
					SEEK_NEXT_TOKEN | Decode: >>(<<
					-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >>(<<
					<<-- "static bool User::Equation_parser::is_symbol(char)" | N
					-->> "static bool User::Equation_parser::is_operator(char)" | Digit: >>(<<
					<<-- "static bool User::Equation_parser::is_operator(char)" | N
					Open detected: >>(<< | Token: (
					Token fully decoded:  ( | type: 3 | size: 1
					Tokens decoded: 8
					SEEK_NEXT_TOKEN | Decode: >>1<<
					TOKEN_NUMBER | Decode: >>-<<
					Token fully decoded:  1 | type: 0 | size: 1
					Tokens decoded: 9
					SEEK_NEXT_TOKEN | Decode: >>-<<
					-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >>-<<
					<<-- "static bool User::Equation_parser::is_symbol(char)" | N
					-->> "static bool User::Equation_parser::is_operator(char)" | Digit: >>-<<
					<<-- "static bool User::Equation_parser::is_operator(char)" | Y
					Operator detected: >>-<< | Token: -
					Token fully decoded:  - | type: 2 | size: 1
					Tokens decoded: 10
					SEEK_NEXT_TOKEN | Decode: >>2<<
					TOKEN_NUMBER | Decode: >>)<<
					Token fully decoded:  2 | type: 0 | size: 1
					Tokens decoded: 11
					SEEK_NEXT_TOKEN | Decode: >>)<<
					-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >>)<<
					<<-- "static bool User::Equation_parser::is_symbol(char)" | N
					-->> "static bool User::Equation_parser::is_operator(char)" | Digit: >>)<<
					<<-- "static bool User::Equation_parser::is_operator(char)" | N
					Close detected: >>)<< | Token: )
					Token fully decoded:  ) | type: 4 | size: 1
					Tokens decoded: 12
					SEEK_NEXT_TOKEN | Decode: >>+<<
					-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >>+<<
					<<-- "static bool User::Equation_parser::is_symbol(char)" | N
					-->> "static bool User::Equation_parser::is_operator(char)" | Digit: >>+<<
					<<-- "static bool User::Equation_parser::is_operator(char)" | Y
					Operator detected: >>+<< | Token: +
					Token fully decoded:  + | type: 2 | size: 1
					Tokens decoded: 13
					SEEK_NEXT_TOKEN | Decode: >>3<<
					TOKEN_NUMBER | Decode: >>)<<
					Token fully decoded:  3 | type: 0 | size: 1
					Tokens decoded: 14
					SEEK_NEXT_TOKEN | Decode: >>)<<
					-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >>)<<
					<<-- "static bool User::Equation_parser::is_symbol(char)" | N
					-->> "static bool User::Equation_parser::is_operator(char)" | Digit: >>)<<
					<<-- "static bool User::Equation_parser::is_operator(char)" | N
					Close detected: >>)<< | Token: )
					Token fully decoded:  ) | type: 4 | size: 1
					Tokens decoded: 15
					SEEK_NEXT_TOKEN | Decode: >>-<<
					-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >>-<<
					<<-- "static bool User::Equation_parser::is_symbol(char)" | N
					-->> "static bool User::Equation_parser::is_operator(char)" | Digit: >>-<<
					<<-- "static bool User::Equation_parser::is_operator(char)" | Y
					Operator detected: >>-<< | Token: -
					Token fully decoded:  - | type: 2 | size: 1
					Tokens decoded: 16
					SEEK_NEXT_TOKEN | Decode: >>4<<
					TOKEN_NUMBER | Decode: >>)<<
					Token fully decoded:  4 | type: 0 | size: 1
					Tokens decoded: 17
					SEEK_NEXT_TOKEN | Decode: >>)<<
					-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >>)<<
					<<-- "static bool User::Equation_parser::is_symbol(char)" | N
					-->> "static bool User::Equation_parser::is_operator(char)" | Digit: >>)<<
					<<-- "static bool User::Equation_parser::is_operator(char)" | N
					Close detected: >>)<< | Token: )
					Token fully decoded:  ) | type: 4 | size: 1
					Tokens decoded: 18
					SEEK_NEXT_TOKEN | Decode: >>+<<
					-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >>+<<
					<<-- "static bool User::Equation_parser::is_symbol(char)" | N
					-->> "static bool User::Equation_parser::is_operator(char)" | Digit: >>+<<
					<<-- "static bool User::Equation_parser::is_operator(char)" | Y
					Operator detected: >>+<< | Token: +
					Token fully decoded:  + | type: 2 | size: 1
					Tokens decoded: 19
					SEEK_NEXT_TOKEN | Decode: >>5<<
					TOKEN_NUMBER | Decode: >>)<<
					Token fully decoded:  5 | type: 0 | size: 1
					Tokens decoded: 20
					SEEK_NEXT_TOKEN | Decode: >>)<<
					-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >>)<<
					<<-- "static bool User::Equation_parser::is_symbol(char)" | N
					-->> "static bool User::Equation_parser::is_operator(char)" | Digit: >>)<<
					<<-- "static bool User::Equation_parser::is_operator(char)" | N
					Close detected: >>)<< | Token: )
					Token fully decoded:  ) | type: 4 | size: 1
					Tokens decoded: 21
					SEEK_NEXT_TOKEN | Decode: >>-<<
					-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >>-<<
					<<-- "static bool User::Equation_parser::is_symbol(char)" | N
					-->> "static bool User::Equation_parser::is_operator(char)" | Digit: >>-<<
					<<-- "static bool User::Equation_parser::is_operator(char)" | Y
					Operator detected: >>-<< | Token: -
					Token fully decoded:  - | type: 2 | size: 1
					Tokens decoded: 22
					SEEK_NEXT_TOKEN | Decode: >>6<<
					TOKEN_NUMBER | Decode: >>)<<
					Token fully decoded:  6 | type: 0 | size: 1
					Tokens decoded: 23
					SEEK_NEXT_TOKEN | Decode: >>)<<
					-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >>)<<
					<<-- "static bool User::Equation_parser::is_symbol(char)" | N
					-->> "static bool User::Equation_parser::is_operator(char)" | Digit: >>)<<
					<<-- "static bool User::Equation_parser::is_operator(char)" | N
					Close detected: >>)<< | Token: )
					Token fully decoded:  ) | type: 4 | size: 1
					Tokens decoded: 24
					SEEK_NEXT_TOKEN | Decode: >>+<<
					-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >>+<<
					<<-- "static bool User::Equation_parser::is_symbol(char)" | N
					-->> "static bool User::Equation_parser::is_operator(char)" | Digit: >>+<<
					<<-- "static bool User::Equation_parser::is_operator(char)" | Y
					Operator detected: >>+<< | Token: +
					Token fully decoded:  + | type: 2 | size: 1
					Tokens decoded: 25
					SEEK_NEXT_TOKEN | Decode: >>7<<
					TOKEN_NUMBER | Decode: >>)<<
					Token fully decoded:  7 | type: 0 | size: 1
					Tokens decoded: 26
					SEEK_NEXT_TOKEN | Decode: >>)<<
					-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >>)<<
					<<-- "static bool User::Equation_parser::is_symbol(char)" | N
					-->> "static bool User::Equation_parser::is_operator(char)" | Digit: >>)<<
					<<-- "static bool User::Equation_parser::is_operator(char)" | N
					Close detected: >>)<< | Token: )
					Token fully decoded:  ) | type: 4 | size: 1
					Tokens decoded: 27
					-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >> <<
					<<-- "static bool User::Equation_parser::is_symbol(char)" | N
					-->> "static bool User::Equation_parser::is_operator(char)" | Digit: >> <<
					<<-- "static bool User::Equation_parser::is_operator(char)" | N
					ERR1133: Invalid Digit >> <<
					Equations decoded into 27 tokens
					Token: >>4<< | Type: 0 | Size: 1
					Token: >>=<< | Type: 2 | Size: 1
					Token: >>(<< | Type: 3 | Size: 1
					Token: >>(<< | Type: 3 | Size: 1
					Token: >>(<< | Type: 3 | Size: 1
					Token: >>(<< | Type: 3 | Size: 1
					Token: >>(<< | Type: 3 | Size: 1
					Token: >>(<< | Type: 3 | Size: 1
					Token: >>1<< | Type: 0 | Size: 1
					Token: >>-<< | Type: 2 | Size: 1
					Token: >>2<< | Type: 0 | Size: 1
					Token: >>)<< | Type: 4 | Size: 1
					Token: >>+<< | Type: 2 | Size: 1
					Token: >>3<< | Type: 0 | Size: 1
					Token: >>)<< | Type: 4 | Size: 1
					Token: >>-<< | Type: 2 | Size: 1
					Token: >>4<< | Type: 0 | Size: 1
					Token: >>)<< | Type: 4 | Size: 1
					Token: >>+<< | Type: 2 | Size: 1
					Token: >>5<< | Type: 0 | Size: 1
					Token: >>)<< | Type: 4 | Size: 1
					Token: >>-<< | Type: 2 | Size: 1
					Token: >>6<< | Type: 0 | Size: 1
					Token: >>)<< | Type: 4 | Size: 1
					Token: >>+<< | Type: 2 | Size: 1
					Token: >>7<< | Type: 0 | Size: 1
					Token: >>)<< | Type: 4 | Size: 1
				<<-- "static bool User::Equation_parser::equation_to_token_array(std::__cxx11::string, std::vector<std::__cxx11::basic_string<char> >&, std::vector<User::Equation_parser::Token>&)" | Decoded 27 tokens
				Tree wasn't empty: 10 | FLUSH
				-->> "bool User::Tree<Payload>::flush() [with Payload = User::Equation_parser::Token]" | Nodes inside the tree: 10
					-->> "bool User::Tree<Payload>::init_root() [with Payload = User::Equation_parser::Token]" |
					<<-- "bool User::Tree<Payload>::init_root() [with Payload = User::Equation_parser::Token]" |
				<<-- "bool User::Tree<Payload>::flush() [with Payload = User::Equation_parser::Token]" | Nodes inside the tree: 1
				-->> "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | Token Array Size: 27 | Father 0
					-->> "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 27
						Token: 4 | Priority: 0
						Token: = | Priority: 0
						Open | Priority: 1
						Open | Priority: 2
						Open | Priority: 3
						Open | Priority: 4
						Open | Priority: 5
						Open | Priority: 6
						Token: 1 | Priority: 6
						Token: - | Priority: 6
						Token: 2 | Priority: 6
						Close| Priority: 6
						Token: + | Priority: 5
						Token: 3 | Priority: 5
						Close| Priority: 5
						Token: - | Priority: 4
						Token: 4 | Priority: 4
						Close| Priority: 4
						Token: + | Priority: 3
						Token: 5 | Priority: 3
						Close| Priority: 3
						Token: - | Priority: 2
						Token: 6 | Priority: 2
						Close| Priority: 2
						Token: + | Priority: 1
						Token: 7 | Priority: 1
						Close| Priority: 1
					<<-- "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 27 | Highest Priority Token: <=> | 0 0
					Core Token: >=< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 0
					LHS: >4<
					RHS: >(<
					RHS: >(<
					RHS: >(<
					RHS: >(<
					RHS: >(<
					RHS: >(<
					RHS: >1<
					RHS: >-<
					RHS: >2<
					RHS: >)<
					RHS: >+<
					RHS: >3<
					RHS: >)<
					RHS: >-<
					RHS: >4<
					RHS: >)<
					RHS: >+<
					RHS: >5<
					RHS: >)<
					RHS: >-<
					RHS: >6<
					RHS: >)<
					RHS: >+<
					RHS: >7<
					RHS: >)<
					LHS Tokens: 1 | RHS Tokens: 25
					ROOT: >=<
					-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 0
					<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
					LHS: >=<
					-->> "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | Token Array Size: 1 | Father 0
						-->> "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 1
							Token: 4 | Priority: 0
						<<-- "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 1 | Highest Priority Token: <4> | 0 5
						Core Token: >4< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 5
						LHS Tokens: 0 | RHS Tokens: 0
						-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Object: 007afe20, Index: 0
						<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
						-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
						<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 0 | Own Index: 1 | Nodes under Father: 2
					<<-- "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | PASS
					LHS of size 1 under father 0
					-->> "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | Token Array Size: 25 | Father 0
						-->> "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 25
							Open | Priority: 1
							Open | Priority: 2
							Open | Priority: 3
							Open | Priority: 4
							Open | Priority: 5
							Open | Priority: 6
							Token: 1 | Priority: 6
							Token: - | Priority: 6
							Token: 2 | Priority: 6
							Close| Priority: 6
							Token: + | Priority: 5
							Token: 3 | Priority: 5
							Close| Priority: 5
							Token: - | Priority: 4
							Token: 4 | Priority: 4
							Close| Priority: 4
							Token: + | Priority: 3
							Token: 5 | Priority: 3
							Close| Priority: 3
							Token: - | Priority: 2
							Token: 6 | Priority: 2
							Close| Priority: 2
							Token: + | Priority: 1
							Token: 7 | Priority: 1
							Close| Priority: 1
							Delete Open 0 | Priority: 1 | Min Priority: 1 
							Delete Close 23 | Priority: 1 | Min Priority: 1 
							Deleted redundant priority tokens | Tokens: 23
						<<-- "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 23 | Highest Priority Token: <-> | 1 3
						Core Token: >-< | Size: 1 | Open/Close Priority: 1 | Symbol Priority: 3
						LHS: >(<
						LHS: >(<
						LHS: >(<
						LHS: >(<
						LHS: >(<
						LHS: >1<
						LHS: >-<
						LHS: >2<
						LHS: >)<
						LHS: >+<
						LHS: >3<
						LHS: >)<
						LHS: >-<
						LHS: >4<
						LHS: >)<
						LHS: >+<
						LHS: >5<
						LHS: >)<
						RHS: >6<
						RHS: >)<
						RHS: >+<
						RHS: >7<
						LHS Tokens: 18 | RHS Tokens: 4
						-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" |
						<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::Token; size_t = unsigned int]" | Father Index: 0 | Own Index: 2 | Nodes under Father: 3
						-->> "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | Token Array Size: 18 | Father 2
							-->> "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 18
								Open | Priority: 1
								Open | Priority: 2
								Open | Priority: 3
								Open | Priority: 4
								Open | Priority: 5
								Token: 1 | Priority: 5
								Token: - | Priority: 5
								Token: 2 | Priority: 5
								Close| Priority: 5
								Token: + | Priority: 4
								Token: 3 | Priority: 4
								Close| Priority: 4
								Token: - | Priority: 3
								Token: 4 | Priority: 3
								Close| Priority: 3
								Token: + | Priority: 2
								Token: 5 | Priority: 2
								Close| Priority: 2
							<<-- "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | ERR:729 | Unbalanced Brackets, extra open
						<<-- "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | ERR:1327 | Priority computation failed
						LHS of size 18 under father 2
						-->> "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | Token Array Size: 4 | Father 2
							-->> "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | Tokens: 4
								Token: 6 | Priority: 0
							<<-- "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::Token>&, std::vector<User::Equation_parser::Token>::iterator&)" | ERR:683 | Unbalanced Brackets, extra close at Token: 1
						<<-- "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | ERR:1327 | Priority computation failed
						RHS of size 4 under father 2
					<<-- "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | FAIL
					RHS of size 23 under father 0
				<<-- "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::Token>&, User::Tree<User::Equation_parser::Token>&, size_t)" | FAIL
				-->> "bool User::Equation_parser::flush()" |
					-->> "bool User::Tree<Payload>::flush() [with Payload = User::Equation_parser::Token]" | Nodes inside the tree: 3
						-->> "bool User::Tree<Payload>::init_root() [with Payload = User::Equation_parser::Token]" |
						<<-- "bool User::Tree<Payload>::init_root() [with Payload = User::Equation_parser::Token]" |
					<<-- "bool User::Tree<Payload>::flush() [with Payload = User::Equation_parser::Token]" | Nodes inside the tree: 1
				<<-- "bool User::Equation_parser::flush()" |
			<<-- "bool User::Equation_parser::parse(std::__cxx11::string)" | ERR:313 | Could not convert from token array to tree...
			ERR: FAIL test pattern: 19
		<<-- "int unit_test_parse_token_array()" | Failed test patterns: 2
		-->> "User::Equation_parser::~Equation_parser()" | This: 007afe10
		<<-- "User::Equation_parser::~Equation_parser()" |
		-->> "User::Tree<Payload>::~Tree() [with Payload = User::Equation_parser::Token]" | This: 007afe20
		<<-- "User::Tree<Payload>::~Tree() [with Payload = User::Equation_parser::Token]" |
		Failed test patterns: 2
	<<-- "bool test_bench()" |
<<-- "int main()" |

Debug has Ended!
