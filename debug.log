Start Debug!
-->> "int main()" |
	OrangeBot Projects
	-->> "bool test_bench()" |
		-->> "User::Tree<Payload>::Tree() [with Payload = User::Equation::Token]" | This: 000000000076fa48
			-->> "bool User::Tree<Payload>::init_class_vars(Payload) [with Payload = User::Equation::Token]" |
			<<-- "bool User::Tree<Payload>::init_class_vars(Payload) [with Payload = User::Equation::Token]" |
		<<-- "User::Tree<Payload>::Tree() [with Payload = User::Equation::Token]" |
		-->> "User::Equation::Equation()" | This: 000000000076fa40
			-->> "bool User::Equation::init_class_vars()" |
			<<-- "bool User::Equation::init_class_vars()" |
		<<-- "User::Equation::Equation()" |
		-->> "static bool User::Equation::parse(std::__cxx11::string, std::vector<std::__cxx11::basic_string<char> >&, std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&)" | Parse: 4=1-2+3-4+5-6+7 | Size: 15
			-->> "static bool User::Equation::convert_equation_string_to_array_token(std::__cxx11::string, std::vector<std::__cxx11::basic_string<char> >&, std::vector<User::Equation::Token>&)" | Parse: 4=1-2+3-4+5-6+7 | Size: 15
				SEEK_NEXT_TOKEN | Decode: >>4<<
				TOKEN_NUMBER | Decode: >>=<<
				Token fully decoded:  4 | type: 0 | size: 1
				Tokens decoded: 1
				SEEK_NEXT_TOKEN | Decode: >>=<<
				-->> "static bool User::Equation::is_symbol(char)" | Digit: >>=<<
				<<-- "static bool User::Equation::is_symbol(char)" | N
				-->> "static bool User::Equation::is_operator(char)" | Digit: >>=<<
				<<-- "static bool User::Equation::is_operator(char)" | Y
				Operator detected: >>=<< | Token: =
				Token fully decoded:  = | type: 2 | size: 1
				Tokens decoded: 2
				SEEK_NEXT_TOKEN | Decode: >>1<<
				TOKEN_NUMBER | Decode: >>-<<
				Token fully decoded:  1 | type: 0 | size: 1
				Tokens decoded: 3
				SEEK_NEXT_TOKEN | Decode: >>-<<
				-->> "static bool User::Equation::is_symbol(char)" | Digit: >>-<<
				<<-- "static bool User::Equation::is_symbol(char)" | N
				-->> "static bool User::Equation::is_operator(char)" | Digit: >>-<<
				<<-- "static bool User::Equation::is_operator(char)" | Y
				Operator detected: >>-<< | Token: -
				Token fully decoded:  - | type: 2 | size: 1
				Tokens decoded: 4
				SEEK_NEXT_TOKEN | Decode: >>2<<
				TOKEN_NUMBER | Decode: >>+<<
				Token fully decoded:  2 | type: 0 | size: 1
				Tokens decoded: 5
				SEEK_NEXT_TOKEN | Decode: >>+<<
				-->> "static bool User::Equation::is_symbol(char)" | Digit: >>+<<
				<<-- "static bool User::Equation::is_symbol(char)" | N
				-->> "static bool User::Equation::is_operator(char)" | Digit: >>+<<
				<<-- "static bool User::Equation::is_operator(char)" | Y
				Operator detected: >>+<< | Token: +
				Token fully decoded:  + | type: 2 | size: 1
				Tokens decoded: 6
				SEEK_NEXT_TOKEN | Decode: >>3<<
				TOKEN_NUMBER | Decode: >>-<<
				Token fully decoded:  3 | type: 0 | size: 1
				Tokens decoded: 7
				SEEK_NEXT_TOKEN | Decode: >>-<<
				-->> "static bool User::Equation::is_symbol(char)" | Digit: >>-<<
				<<-- "static bool User::Equation::is_symbol(char)" | N
				-->> "static bool User::Equation::is_operator(char)" | Digit: >>-<<
				<<-- "static bool User::Equation::is_operator(char)" | Y
				Operator detected: >>-<< | Token: -
				Token fully decoded:  - | type: 2 | size: 1
				Tokens decoded: 8
				SEEK_NEXT_TOKEN | Decode: >>4<<
				TOKEN_NUMBER | Decode: >>+<<
				Token fully decoded:  4 | type: 0 | size: 1
				Tokens decoded: 9
				SEEK_NEXT_TOKEN | Decode: >>+<<
				-->> "static bool User::Equation::is_symbol(char)" | Digit: >>+<<
				<<-- "static bool User::Equation::is_symbol(char)" | N
				-->> "static bool User::Equation::is_operator(char)" | Digit: >>+<<
				<<-- "static bool User::Equation::is_operator(char)" | Y
				Operator detected: >>+<< | Token: +
				Token fully decoded:  + | type: 2 | size: 1
				Tokens decoded: 10
				SEEK_NEXT_TOKEN | Decode: >>5<<
				TOKEN_NUMBER | Decode: >>-<<
				Token fully decoded:  5 | type: 0 | size: 1
				Tokens decoded: 11
				SEEK_NEXT_TOKEN | Decode: >>-<<
				-->> "static bool User::Equation::is_symbol(char)" | Digit: >>-<<
				<<-- "static bool User::Equation::is_symbol(char)" | N
				-->> "static bool User::Equation::is_operator(char)" | Digit: >>-<<
				<<-- "static bool User::Equation::is_operator(char)" | Y
				Operator detected: >>-<< | Token: -
				Token fully decoded:  - | type: 2 | size: 1
				Tokens decoded: 12
				SEEK_NEXT_TOKEN | Decode: >>6<<
				TOKEN_NUMBER | Decode: >>+<<
				Token fully decoded:  6 | type: 0 | size: 1
				Tokens decoded: 13
				SEEK_NEXT_TOKEN | Decode: >>+<<
				-->> "static bool User::Equation::is_symbol(char)" | Digit: >>+<<
				<<-- "static bool User::Equation::is_symbol(char)" | N
				-->> "static bool User::Equation::is_operator(char)" | Digit: >>+<<
				<<-- "static bool User::Equation::is_operator(char)" | Y
				Operator detected: >>+<< | Token: +
				Token fully decoded:  + | type: 2 | size: 1
				Tokens decoded: 14
				SEEK_NEXT_TOKEN | Decode: >>7<<
				Token fully decoded:  7 | type: 0 | size: 1
				Tokens decoded: 15
				Equations decoded into 15 tokens
				Token: >>4<< | Type: 0 | Size: 1
				Token: >>=<< | Type: 2 | Size: 1
				Token: >>1<< | Type: 0 | Size: 1
				Token: >>-<< | Type: 2 | Size: 1
				Token: >>2<< | Type: 0 | Size: 1
				Token: >>+<< | Type: 2 | Size: 1
				Token: >>3<< | Type: 0 | Size: 1
				Token: >>-<< | Type: 2 | Size: 1
				Token: >>4<< | Type: 0 | Size: 1
				Token: >>+<< | Type: 2 | Size: 1
				Token: >>5<< | Type: 0 | Size: 1
				Token: >>-<< | Type: 2 | Size: 1
				Token: >>6<< | Type: 0 | Size: 1
				Token: >>+<< | Type: 2 | Size: 1
				Token: >>7<< | Type: 0 | Size: 1
			<<-- "static bool User::Equation::convert_equation_string_to_array_token(std::__cxx11::string, std::vector<std::__cxx11::basic_string<char> >&, std::vector<User::Equation::Token>&)" | Decoded 15 tokens
			-->> "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | Token Array Size: 15 | Father 0
				-->> "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 15
					Token   0 | >4< | Open Close Priority: 0 | Symbol Priority 6 
					Token   1 | >=< | Open Close Priority: 0 | Symbol Priority 0 
					Token   2 | >1< | Open Close Priority: 0 | Symbol Priority 6 
					Token   3 | >-< | Open Close Priority: 0 | Symbol Priority 3 
					Token   4 | >2< | Open Close Priority: 0 | Symbol Priority 6 
					Token   5 | >+< | Open Close Priority: 0 | Symbol Priority 4 
					Token   6 | >3< | Open Close Priority: 0 | Symbol Priority 6 
					Token   7 | >-< | Open Close Priority: 0 | Symbol Priority 3 
					Token   8 | >4< | Open Close Priority: 0 | Symbol Priority 6 
					Token   9 | >+< | Open Close Priority: 0 | Symbol Priority 4 
					Token  10 | >5< | Open Close Priority: 0 | Symbol Priority 6 
					Token  11 | >-< | Open Close Priority: 0 | Symbol Priority 3 
					Token  12 | >6< | Open Close Priority: 0 | Symbol Priority 6 
					Token  13 | >+< | Open Close Priority: 0 | Symbol Priority 4 
					Token  14 | >7< | Open Close Priority: 0 | Symbol Priority 6 
					Candidate   0 | >4< | Open Close Priority 0 | Symbol Priority 6 | Min Priority 0 | Default
					Equal
					Token   1 | >=< | Highest priority token
				<<-- "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 15 | Highest Priority Token: <=> | 0 0
				Core Token: >=< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 0
				LHS: >4<
				RHS: >1<
				RHS: >-<
				RHS: >2<
				RHS: >+<
				RHS: >3<
				RHS: >-<
				RHS: >4<
				RHS: >+<
				RHS: >5<
				RHS: >-<
				RHS: >6<
				RHS: >+<
				RHS: >7<
				LHS Tokens: 1 | RHS Tokens: 13
				ROOT: >=<
				LHS: >=<
				-->> "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | Token Array Size: 1 | Father 0
					-->> "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1
						Token   0 | >4< | Open Close Priority: 0 | Symbol Priority 6 
						Candidate   0 | >4< | Open Close Priority 0 | Symbol Priority 6 | Min Priority 0 | Default
						Token   0 | >4< | Highest priority token
					<<-- "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1 | Highest Priority Token: <4> | 0 6
					Core Token: >4< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 6
					LHS Tokens: 0 | RHS Tokens: 0
					-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = long long unsigned int]" |
					<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = long long unsigned int]" | Father Index: 0 | Own Index: 1 | Nodes under Father: 2
				<<-- "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | PASS
				LHS of size 1 under father 0
				-->> "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | Token Array Size: 13 | Father 0
					-->> "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 13
						Token   0 | >1< | Open Close Priority: 0 | Symbol Priority 6 
						Token   1 | >-< | Open Close Priority: 0 | Symbol Priority 3 
						Token   2 | >2< | Open Close Priority: 0 | Symbol Priority 6 
						Token   3 | >+< | Open Close Priority: 0 | Symbol Priority 4 
						Token   4 | >3< | Open Close Priority: 0 | Symbol Priority 6 
						Token   5 | >-< | Open Close Priority: 0 | Symbol Priority 3 
						Token   6 | >4< | Open Close Priority: 0 | Symbol Priority 6 
						Token   7 | >+< | Open Close Priority: 0 | Symbol Priority 4 
						Token   8 | >5< | Open Close Priority: 0 | Symbol Priority 6 
						Token   9 | >-< | Open Close Priority: 0 | Symbol Priority 3 
						Token  10 | >6< | Open Close Priority: 0 | Symbol Priority 6 
						Token  11 | >+< | Open Close Priority: 0 | Symbol Priority 4 
						Token  12 | >7< | Open Close Priority: 0 | Symbol Priority 6 
						Candidate   0 | >1< | Open Close Priority 0 | Symbol Priority 6 | Min Priority 0 | Default
						High Priority Mode | Candidate   1 | >-< | Open Close Priority 0 | Symbol Priority 3 | Min Priority 0
						Ignore   2 | >2< | Open Close Priority 0 | Symbol Priority 6 | Min Priority 0 | Best Priority 3
						Low Priority Mode | Candidate   3 | >+< | Open Close Priority 0 | Symbol Priority 4 | Min Priority 0
						Ignore   4 | >3< | Open Close Priority 0 | Symbol Priority 6 | Min Priority 0 | Best Priority 4
						Ignore   5 | >-< | Open Close Priority 0 | Symbol Priority 3 | Min Priority 0 | Best Priority 4
						Ignore   6 | >4< | Open Close Priority 0 | Symbol Priority 6 | Min Priority 0 | Best Priority 4
						Ignore   7 | >+< | Open Close Priority 0 | Symbol Priority 4 | Min Priority 0 | Best Priority 4
						Ignore   8 | >5< | Open Close Priority 0 | Symbol Priority 6 | Min Priority 0 | Best Priority 4
						Ignore   9 | >-< | Open Close Priority 0 | Symbol Priority 3 | Min Priority 0 | Best Priority 4
						Ignore  10 | >6< | Open Close Priority 0 | Symbol Priority 6 | Min Priority 0 | Best Priority 4
						Ignore  11 | >+< | Open Close Priority 0 | Symbol Priority 4 | Min Priority 0 | Best Priority 4
						Ignore  12 | >7< | Open Close Priority 0 | Symbol Priority 6 | Min Priority 0 | Best Priority 4
						Token   3 | >+< | Highest priority token
					<<-- "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 13 | Highest Priority Token: <+> | 0 4
					Core Token: >+< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 4
					LHS: >1<
					LHS: >-<
					LHS: >2<
					RHS: >3<
					RHS: >-<
					RHS: >4<
					RHS: >+<
					RHS: >5<
					RHS: >-<
					RHS: >6<
					RHS: >+<
					RHS: >7<
					LHS Tokens: 3 | RHS Tokens: 9
					-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = long long unsigned int]" |
					<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = long long unsigned int]" | Father Index: 0 | Own Index: 2 | Nodes under Father: 3
					-->> "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | Token Array Size: 3 | Father 2
						-->> "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 3
							Token   0 | >1< | Open Close Priority: 0 | Symbol Priority 6 
							Token   1 | >-< | Open Close Priority: 0 | Symbol Priority 3 
							Token   2 | >2< | Open Close Priority: 0 | Symbol Priority 6 
							Candidate   0 | >1< | Open Close Priority 0 | Symbol Priority 6 | Min Priority 0 | Default
							High Priority Mode | Candidate   1 | >-< | Open Close Priority 0 | Symbol Priority 3 | Min Priority 0
							Ignore   2 | >2< | Open Close Priority 0 | Symbol Priority 6 | Min Priority 0 | Best Priority 3
							Token   1 | >-< | Highest priority token
						<<-- "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 3 | Highest Priority Token: <-> | 0 3
						Core Token: >-< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 3
						LHS: >1<
						RHS: >2<
						LHS Tokens: 1 | RHS Tokens: 1
						-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = long long unsigned int]" |
						<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = long long unsigned int]" | Father Index: 2 | Own Index: 3 | Nodes under Father: 2
						-->> "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | Token Array Size: 1 | Father 3
							-->> "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1
								Token   0 | >1< | Open Close Priority: 0 | Symbol Priority 6 
								Candidate   0 | >1< | Open Close Priority 0 | Symbol Priority 6 | Min Priority 0 | Default
								Token   0 | >1< | Highest priority token
							<<-- "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1 | Highest Priority Token: <1> | 0 6
							Core Token: >1< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 6
							LHS Tokens: 0 | RHS Tokens: 0
							-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = long long unsigned int]" |
							<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = long long unsigned int]" | Father Index: 3 | Own Index: 4 | Nodes under Father: 2
						<<-- "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | PASS
						LHS of size 1 under father 3
						-->> "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | Token Array Size: 1 | Father 3
							-->> "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1
								Token   0 | >2< | Open Close Priority: 0 | Symbol Priority 6 
								Candidate   0 | >2< | Open Close Priority 0 | Symbol Priority 6 | Min Priority 0 | Default
								Token   0 | >2< | Highest priority token
							<<-- "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1 | Highest Priority Token: <2> | 0 6
							Core Token: >2< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 6
							LHS Tokens: 0 | RHS Tokens: 0
							-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = long long unsigned int]" |
							<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = long long unsigned int]" | Father Index: 3 | Own Index: 5 | Nodes under Father: 3
						<<-- "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | PASS
						RHS of size 1 under father 3
					<<-- "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | PASS
					LHS of size 3 under father 2
					-->> "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | Token Array Size: 9 | Father 2
						-->> "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 9
							Token   0 | >3< | Open Close Priority: 0 | Symbol Priority 6 
							Token   1 | >-< | Open Close Priority: 0 | Symbol Priority 3 
							Token   2 | >4< | Open Close Priority: 0 | Symbol Priority 6 
							Token   3 | >+< | Open Close Priority: 0 | Symbol Priority 4 
							Token   4 | >5< | Open Close Priority: 0 | Symbol Priority 6 
							Token   5 | >-< | Open Close Priority: 0 | Symbol Priority 3 
							Token   6 | >6< | Open Close Priority: 0 | Symbol Priority 6 
							Token   7 | >+< | Open Close Priority: 0 | Symbol Priority 4 
							Token   8 | >7< | Open Close Priority: 0 | Symbol Priority 6 
							Candidate   0 | >3< | Open Close Priority 0 | Symbol Priority 6 | Min Priority 0 | Default
							High Priority Mode | Candidate   1 | >-< | Open Close Priority 0 | Symbol Priority 3 | Min Priority 0
							Ignore   2 | >4< | Open Close Priority 0 | Symbol Priority 6 | Min Priority 0 | Best Priority 3
							Low Priority Mode | Candidate   3 | >+< | Open Close Priority 0 | Symbol Priority 4 | Min Priority 0
							Ignore   4 | >5< | Open Close Priority 0 | Symbol Priority 6 | Min Priority 0 | Best Priority 4
							Ignore   5 | >-< | Open Close Priority 0 | Symbol Priority 3 | Min Priority 0 | Best Priority 4
							Ignore   6 | >6< | Open Close Priority 0 | Symbol Priority 6 | Min Priority 0 | Best Priority 4
							Ignore   7 | >+< | Open Close Priority 0 | Symbol Priority 4 | Min Priority 0 | Best Priority 4
							Ignore   8 | >7< | Open Close Priority 0 | Symbol Priority 6 | Min Priority 0 | Best Priority 4
							Token   3 | >+< | Highest priority token
						<<-- "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 9 | Highest Priority Token: <+> | 0 4
						Core Token: >+< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 4
						LHS: >3<
						LHS: >-<
						LHS: >4<
						RHS: >5<
						RHS: >-<
						RHS: >6<
						RHS: >+<
						RHS: >7<
						LHS Tokens: 3 | RHS Tokens: 5
						-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = long long unsigned int]" |
						<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = long long unsigned int]" | Father Index: 2 | Own Index: 6 | Nodes under Father: 3
						-->> "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | Token Array Size: 3 | Father 6
							-->> "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 3
								Token   0 | >3< | Open Close Priority: 0 | Symbol Priority 6 
								Token   1 | >-< | Open Close Priority: 0 | Symbol Priority 3 
								Token   2 | >4< | Open Close Priority: 0 | Symbol Priority 6 
								Candidate   0 | >3< | Open Close Priority 0 | Symbol Priority 6 | Min Priority 0 | Default
								High Priority Mode | Candidate   1 | >-< | Open Close Priority 0 | Symbol Priority 3 | Min Priority 0
								Ignore   2 | >4< | Open Close Priority 0 | Symbol Priority 6 | Min Priority 0 | Best Priority 3
								Token   1 | >-< | Highest priority token
							<<-- "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 3 | Highest Priority Token: <-> | 0 3
							Core Token: >-< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 3
							LHS: >3<
							RHS: >4<
							LHS Tokens: 1 | RHS Tokens: 1
							-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = long long unsigned int]" |
							<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = long long unsigned int]" | Father Index: 6 | Own Index: 7 | Nodes under Father: 2
							-->> "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | Token Array Size: 1 | Father 7
								-->> "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1
									Token   0 | >3< | Open Close Priority: 0 | Symbol Priority 6 
									Candidate   0 | >3< | Open Close Priority 0 | Symbol Priority 6 | Min Priority 0 | Default
									Token   0 | >3< | Highest priority token
								<<-- "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1 | Highest Priority Token: <3> | 0 6
								Core Token: >3< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 6
								LHS Tokens: 0 | RHS Tokens: 0
								-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = long long unsigned int]" |
								<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = long long unsigned int]" | Father Index: 7 | Own Index: 8 | Nodes under Father: 2
							<<-- "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | PASS
							LHS of size 1 under father 7
							-->> "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | Token Array Size: 1 | Father 7
								-->> "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1
									Token   0 | >4< | Open Close Priority: 0 | Symbol Priority 6 
									Candidate   0 | >4< | Open Close Priority 0 | Symbol Priority 6 | Min Priority 0 | Default
									Token   0 | >4< | Highest priority token
								<<-- "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1 | Highest Priority Token: <4> | 0 6
								Core Token: >4< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 6
								LHS Tokens: 0 | RHS Tokens: 0
								-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = long long unsigned int]" |
								<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = long long unsigned int]" | Father Index: 7 | Own Index: 9 | Nodes under Father: 3
							<<-- "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | PASS
							RHS of size 1 under father 7
						<<-- "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | PASS
						LHS of size 3 under father 6
						-->> "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | Token Array Size: 5 | Father 6
							-->> "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 5
								Token   0 | >5< | Open Close Priority: 0 | Symbol Priority 6 
								Token   1 | >-< | Open Close Priority: 0 | Symbol Priority 3 
								Token   2 | >6< | Open Close Priority: 0 | Symbol Priority 6 
								Token   3 | >+< | Open Close Priority: 0 | Symbol Priority 4 
								Token   4 | >7< | Open Close Priority: 0 | Symbol Priority 6 
								Candidate   0 | >5< | Open Close Priority 0 | Symbol Priority 6 | Min Priority 0 | Default
								High Priority Mode | Candidate   1 | >-< | Open Close Priority 0 | Symbol Priority 3 | Min Priority 0
								Ignore   2 | >6< | Open Close Priority 0 | Symbol Priority 6 | Min Priority 0 | Best Priority 3
								Low Priority Mode | Candidate   3 | >+< | Open Close Priority 0 | Symbol Priority 4 | Min Priority 0
								Ignore   4 | >7< | Open Close Priority 0 | Symbol Priority 6 | Min Priority 0 | Best Priority 4
								Token   3 | >+< | Highest priority token
							<<-- "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 5 | Highest Priority Token: <+> | 0 4
							Core Token: >+< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 4
							LHS: >5<
							LHS: >-<
							LHS: >6<
							RHS: >7<
							LHS Tokens: 3 | RHS Tokens: 1
							-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = long long unsigned int]" |
							<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = long long unsigned int]" | Father Index: 6 | Own Index: 10 | Nodes under Father: 3
							-->> "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | Token Array Size: 3 | Father 10
								-->> "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 3
									Token   0 | >5< | Open Close Priority: 0 | Symbol Priority 6 
									Token   1 | >-< | Open Close Priority: 0 | Symbol Priority 3 
									Token   2 | >6< | Open Close Priority: 0 | Symbol Priority 6 
									Candidate   0 | >5< | Open Close Priority 0 | Symbol Priority 6 | Min Priority 0 | Default
									High Priority Mode | Candidate   1 | >-< | Open Close Priority 0 | Symbol Priority 3 | Min Priority 0
									Ignore   2 | >6< | Open Close Priority 0 | Symbol Priority 6 | Min Priority 0 | Best Priority 3
									Token   1 | >-< | Highest priority token
								<<-- "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 3 | Highest Priority Token: <-> | 0 3
								Core Token: >-< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 3
								LHS: >5<
								RHS: >6<
								LHS Tokens: 1 | RHS Tokens: 1
								-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = long long unsigned int]" |
								<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = long long unsigned int]" | Father Index: 10 | Own Index: 11 | Nodes under Father: 2
								-->> "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | Token Array Size: 1 | Father 11
									-->> "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1
										Token   0 | >5< | Open Close Priority: 0 | Symbol Priority 6 
										Candidate   0 | >5< | Open Close Priority 0 | Symbol Priority 6 | Min Priority 0 | Default
										Token   0 | >5< | Highest priority token
									<<-- "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1 | Highest Priority Token: <5> | 0 6
									Core Token: >5< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 6
									LHS Tokens: 0 | RHS Tokens: 0
									-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = long long unsigned int]" |
									<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = long long unsigned int]" | Father Index: 11 | Own Index: 12 | Nodes under Father: 2
								<<-- "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | PASS
								LHS of size 1 under father 11
								-->> "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | Token Array Size: 1 | Father 11
									-->> "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1
										Token   0 | >6< | Open Close Priority: 0 | Symbol Priority 6 
										Candidate   0 | >6< | Open Close Priority 0 | Symbol Priority 6 | Min Priority 0 | Default
										Token   0 | >6< | Highest priority token
									<<-- "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1 | Highest Priority Token: <6> | 0 6
									Core Token: >6< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 6
									LHS Tokens: 0 | RHS Tokens: 0
									-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = long long unsigned int]" |
									<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = long long unsigned int]" | Father Index: 11 | Own Index: 13 | Nodes under Father: 3
								<<-- "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | PASS
								RHS of size 1 under father 11
							<<-- "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | PASS
							LHS of size 3 under father 10
							-->> "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | Token Array Size: 1 | Father 10
								-->> "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1
									Token   0 | >7< | Open Close Priority: 0 | Symbol Priority 6 
									Candidate   0 | >7< | Open Close Priority 0 | Symbol Priority 6 | Min Priority 0 | Default
									Token   0 | >7< | Highest priority token
								<<-- "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1 | Highest Priority Token: <7> | 0 6
								Core Token: >7< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 6
								LHS Tokens: 0 | RHS Tokens: 0
								-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = long long unsigned int]" |
								<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = long long unsigned int]" | Father Index: 10 | Own Index: 14 | Nodes under Father: 3
							<<-- "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | PASS
							RHS of size 1 under father 10
						<<-- "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | PASS
						RHS of size 5 under father 6
					<<-- "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | PASS
					RHS of size 9 under father 2
				<<-- "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | PASS
				RHS of size 13 under father 0
			<<-- "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | PASS
			-->> "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation::Token; size_t = long long unsigned int]" | Index: 0
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = long long unsigned int]" | Parent tree: 000000000076f720 | Begin: 1 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = long long unsigned int]" | Count nodes: 0 | Stack size: 1
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = long long unsigned int]" | Parent tree: 000000000076f780 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = long long unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = long long unsigned int]" |
					-->> "bool User::Tree<Payload>::get_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation::Token; size_t = long long unsigned int]" | Father: 0
						Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 0 | Depth: 1
						Found children || Index 2 | Own Index: 2 | Father Index: 0 | Own Priority 1 | Children: 2 | Depth: 1
					<<-- "bool User::Tree<Payload>::get_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation::Token; size_t = long long unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = long long unsigned int]" | Count nodes: 1 | Index: 0
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = long long unsigned int]" | Parent tree: 000000000076f780 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = long long unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = long long unsigned int]" |
					-->> "bool User::Tree<Payload>::get_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation::Token; size_t = long long unsigned int]" | Father: 1
					<<-- "bool User::Tree<Payload>::get_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation::Token; size_t = long long unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = long long unsigned int]" | Count nodes: 2 | Index: 1
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = long long unsigned int]" | Parent tree: 000000000076f780 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = long long unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = long long unsigned int]" |
					-->> "bool User::Tree<Payload>::get_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation::Token; size_t = long long unsigned int]" | Father: 2
						Found children || Index 3 | Own Index: 3 | Father Index: 2 | Own Priority 0 | Children: 2 | Depth: 2
						Found children || Index 6 | Own Index: 6 | Father Index: 2 | Own Priority 1 | Children: 2 | Depth: 2
					<<-- "bool User::Tree<Payload>::get_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation::Token; size_t = long long unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = long long unsigned int]" | Count nodes: 3 | Index: 2
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = long long unsigned int]" | Parent tree: 000000000076f780 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = long long unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = long long unsigned int]" |
					-->> "bool User::Tree<Payload>::get_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation::Token; size_t = long long unsigned int]" | Father: 3
						Found children || Index 4 | Own Index: 4 | Father Index: 3 | Own Priority 0 | Children: 0 | Depth: 3
						Found children || Index 5 | Own Index: 5 | Father Index: 3 | Own Priority 1 | Children: 0 | Depth: 3
					<<-- "bool User::Tree<Payload>::get_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation::Token; size_t = long long unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = long long unsigned int]" | Count nodes: 4 | Index: 3
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = long long unsigned int]" | Parent tree: 000000000076f780 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = long long unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = long long unsigned int]" |
					-->> "bool User::Tree<Payload>::get_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation::Token; size_t = long long unsigned int]" | Father: 4
					<<-- "bool User::Tree<Payload>::get_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation::Token; size_t = long long unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = long long unsigned int]" | Count nodes: 5 | Index: 4
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = long long unsigned int]" | Parent tree: 000000000076f780 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = long long unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = long long unsigned int]" |
					-->> "bool User::Tree<Payload>::get_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation::Token; size_t = long long unsigned int]" | Father: 5
					<<-- "bool User::Tree<Payload>::get_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation::Token; size_t = long long unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = long long unsigned int]" | Count nodes: 6 | Index: 5
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = long long unsigned int]" | Parent tree: 000000000076f780 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = long long unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = long long unsigned int]" |
					-->> "bool User::Tree<Payload>::get_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation::Token; size_t = long long unsigned int]" | Father: 6
						Found children || Index 7 | Own Index: 7 | Father Index: 6 | Own Priority 0 | Children: 2 | Depth: 3
						Found children || Index 10 | Own Index: 10 | Father Index: 6 | Own Priority 1 | Children: 2 | Depth: 3
					<<-- "bool User::Tree<Payload>::get_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation::Token; size_t = long long unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = long long unsigned int]" | Count nodes: 7 | Index: 6
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = long long unsigned int]" | Parent tree: 000000000076f780 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = long long unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = long long unsigned int]" |
					-->> "bool User::Tree<Payload>::get_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation::Token; size_t = long long unsigned int]" | Father: 7
						Found children || Index 8 | Own Index: 8 | Father Index: 7 | Own Priority 0 | Children: 0 | Depth: 4
						Found children || Index 9 | Own Index: 9 | Father Index: 7 | Own Priority 1 | Children: 0 | Depth: 4
					<<-- "bool User::Tree<Payload>::get_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation::Token; size_t = long long unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = long long unsigned int]" | Count nodes: 8 | Index: 7
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = long long unsigned int]" | Parent tree: 000000000076f780 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = long long unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = long long unsigned int]" |
					-->> "bool User::Tree<Payload>::get_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation::Token; size_t = long long unsigned int]" | Father: 8
					<<-- "bool User::Tree<Payload>::get_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation::Token; size_t = long long unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = long long unsigned int]" | Count nodes: 9 | Index: 8
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = long long unsigned int]" | Parent tree: 000000000076f780 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = long long unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = long long unsigned int]" |
					-->> "bool User::Tree<Payload>::get_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation::Token; size_t = long long unsigned int]" | Father: 9
					<<-- "bool User::Tree<Payload>::get_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation::Token; size_t = long long unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = long long unsigned int]" | Count nodes: 10 | Index: 9
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = long long unsigned int]" | Parent tree: 000000000076f780 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = long long unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = long long unsigned int]" |
					-->> "bool User::Tree<Payload>::get_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation::Token; size_t = long long unsigned int]" | Father: 10
						Found children || Index 11 | Own Index: 11 | Father Index: 10 | Own Priority 0 | Children: 2 | Depth: 4
						Found children || Index 14 | Own Index: 14 | Father Index: 10 | Own Priority 1 | Children: 0 | Depth: 4
					<<-- "bool User::Tree<Payload>::get_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation::Token; size_t = long long unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = long long unsigned int]" | Count nodes: 11 | Index: 10
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = long long unsigned int]" | Parent tree: 000000000076f780 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = long long unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = long long unsigned int]" |
					-->> "bool User::Tree<Payload>::get_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation::Token; size_t = long long unsigned int]" | Father: 11
						Found children || Index 12 | Own Index: 12 | Father Index: 11 | Own Priority 0 | Children: 0 | Depth: 5
						Found children || Index 13 | Own Index: 13 | Father Index: 11 | Own Priority 1 | Children: 0 | Depth: 5
					<<-- "bool User::Tree<Payload>::get_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation::Token; size_t = long long unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = long long unsigned int]" | Count nodes: 12 | Index: 11
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = long long unsigned int]" | Parent tree: 000000000076f780 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = long long unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = long long unsigned int]" |
					-->> "bool User::Tree<Payload>::get_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation::Token; size_t = long long unsigned int]" | Father: 12
					<<-- "bool User::Tree<Payload>::get_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation::Token; size_t = long long unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = long long unsigned int]" | Count nodes: 13 | Index: 12
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = long long unsigned int]" | Parent tree: 000000000076f780 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = long long unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = long long unsigned int]" |
					-->> "bool User::Tree<Payload>::get_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation::Token; size_t = long long unsigned int]" | Father: 13
					<<-- "bool User::Tree<Payload>::get_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation::Token; size_t = long long unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = long long unsigned int]" | Count nodes: 14 | Index: 13
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = long long unsigned int]" | Parent tree: 000000000076f780 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = long long unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = long long unsigned int]" |
					-->> "bool User::Tree<Payload>::get_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation::Token; size_t = long long unsigned int]" | Father: 14
					<<-- "bool User::Tree<Payload>::get_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation::Token; size_t = long long unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = long long unsigned int]" | Count nodes: 15 | Index: 14
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = long long unsigned int]" | Parent tree: 000000000076f780 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = long long unsigned int]" | Count nodes: 15 | Stack size: 0
			<<-- "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation::Token; size_t = long long unsigned int]" |
		<<-- "static bool User::Equation::parse(std::__cxx11::string, std::vector<std::__cxx11::basic_string<char> >&, std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&)" | Number of String Tokens: 15 | Number of Tokens: 15 | Tree Token Size: 15
		-->> "bool User::Tree<Payload>::get_sorted_payload(std::vector<User::Tree<Payload>::St_minimal_node>&) [with Payload = User::Equation::Token]" | Tree size: 0 | Destination size: 15
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = long long unsigned int]" | Parent tree: 000000000076f7f0 | Begin: 1 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = long long unsigned int]" | Count nodes: 0 | Stack size: 1
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = long long unsigned int]" | Parent tree: 000000000076f880 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = long long unsigned int]" | Count nodes: 15 | Stack size: 0
			Payload:  = | Index 0 remaps to Index: 0 | 
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = long long unsigned int]" |
				-->> "bool User::Tree<Payload>::get_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation::Token; size_t = long long unsigned int]" | Father: 0
					Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 0 | Depth: 1
					Found children || Index 2 | Own Index: 2 | Father Index: 0 | Own Priority 1 | Children: 2 | Depth: 1
				<<-- "bool User::Tree<Payload>::get_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation::Token; size_t = long long unsigned int]" | Found 2 | 2 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = long long unsigned int]" | Count nodes: 1 | Index: 0
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = long long unsigned int]" | Parent tree: 000000000076f880 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = long long unsigned int]" | Count nodes: 15 | Stack size: 0
			Payload: +4 | Index 1 remaps to Index: 1 | 
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = long long unsigned int]" |
				-->> "bool User::Tree<Payload>::get_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation::Token; size_t = long long unsigned int]" | Father: 1
				<<-- "bool User::Tree<Payload>::get_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation::Token; size_t = long long unsigned int]" | Found 0 | 0 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = long long unsigned int]" | Count nodes: 2 | Index: 1
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = long long unsigned int]" | Parent tree: 000000000076f880 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = long long unsigned int]" | Count nodes: 15 | Stack size: 0
			Payload:  + | Index 2 remaps to Index: 2 | 
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = long long unsigned int]" |
				-->> "bool User::Tree<Payload>::get_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation::Token; size_t = long long unsigned int]" | Father: 2
					Found children || Index 3 | Own Index: 3 | Father Index: 2 | Own Priority 0 | Children: 2 | Depth: 2
					Found children || Index 6 | Own Index: 6 | Father Index: 2 | Own Priority 1 | Children: 2 | Depth: 2
				<<-- "bool User::Tree<Payload>::get_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation::Token; size_t = long long unsigned int]" | Found 2 | 2 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = long long unsigned int]" | Count nodes: 3 | Index: 2
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = long long unsigned int]" | Parent tree: 000000000076f880 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = long long unsigned int]" | Count nodes: 15 | Stack size: 0
			Payload:  - | Index 3 remaps to Index: 3 | 
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = long long unsigned int]" |
				-->> "bool User::Tree<Payload>::get_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation::Token; size_t = long long unsigned int]" | Father: 3
					Found children || Index 4 | Own Index: 4 | Father Index: 3 | Own Priority 0 | Children: 0 | Depth: 3
					Found children || Index 5 | Own Index: 5 | Father Index: 3 | Own Priority 1 | Children: 0 | Depth: 3
				<<-- "bool User::Tree<Payload>::get_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation::Token; size_t = long long unsigned int]" | Found 2 | 2 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = long long unsigned int]" | Count nodes: 4 | Index: 3
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = long long unsigned int]" | Parent tree: 000000000076f880 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = long long unsigned int]" | Count nodes: 15 | Stack size: 0
			Payload: +1 | Index 4 remaps to Index: 4 | 
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = long long unsigned int]" |
				-->> "bool User::Tree<Payload>::get_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation::Token; size_t = long long unsigned int]" | Father: 4
				<<-- "bool User::Tree<Payload>::get_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation::Token; size_t = long long unsigned int]" | Found 0 | 0 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = long long unsigned int]" | Count nodes: 5 | Index: 4
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = long long unsigned int]" | Parent tree: 000000000076f880 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = long long unsigned int]" | Count nodes: 15 | Stack size: 0
			Payload: +2 | Index 5 remaps to Index: 5 | 
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = long long unsigned int]" |
				-->> "bool User::Tree<Payload>::get_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation::Token; size_t = long long unsigned int]" | Father: 5
				<<-- "bool User::Tree<Payload>::get_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation::Token; size_t = long long unsigned int]" | Found 0 | 0 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = long long unsigned int]" | Count nodes: 6 | Index: 5
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = long long unsigned int]" | Parent tree: 000000000076f880 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = long long unsigned int]" | Count nodes: 15 | Stack size: 0
			Payload:  + | Index 6 remaps to Index: 6 | 
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = long long unsigned int]" |
				-->> "bool User::Tree<Payload>::get_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation::Token; size_t = long long unsigned int]" | Father: 6
					Found children || Index 7 | Own Index: 7 | Father Index: 6 | Own Priority 0 | Children: 2 | Depth: 3
					Found children || Index 10 | Own Index: 10 | Father Index: 6 | Own Priority 1 | Children: 2 | Depth: 3
				<<-- "bool User::Tree<Payload>::get_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation::Token; size_t = long long unsigned int]" | Found 2 | 2 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = long long unsigned int]" | Count nodes: 7 | Index: 6
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = long long unsigned int]" | Parent tree: 000000000076f880 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = long long unsigned int]" | Count nodes: 15 | Stack size: 0
			Payload:  - | Index 7 remaps to Index: 7 | 
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = long long unsigned int]" |
				-->> "bool User::Tree<Payload>::get_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation::Token; size_t = long long unsigned int]" | Father: 7
					Found children || Index 8 | Own Index: 8 | Father Index: 7 | Own Priority 0 | Children: 0 | Depth: 4
					Found children || Index 9 | Own Index: 9 | Father Index: 7 | Own Priority 1 | Children: 0 | Depth: 4
				<<-- "bool User::Tree<Payload>::get_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation::Token; size_t = long long unsigned int]" | Found 2 | 2 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = long long unsigned int]" | Count nodes: 8 | Index: 7
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = long long unsigned int]" | Parent tree: 000000000076f880 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = long long unsigned int]" | Count nodes: 15 | Stack size: 0
			Payload: +3 | Index 8 remaps to Index: 8 | 
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = long long unsigned int]" |
				-->> "bool User::Tree<Payload>::get_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation::Token; size_t = long long unsigned int]" | Father: 8
				<<-- "bool User::Tree<Payload>::get_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation::Token; size_t = long long unsigned int]" | Found 0 | 0 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = long long unsigned int]" | Count nodes: 9 | Index: 8
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = long long unsigned int]" | Parent tree: 000000000076f880 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = long long unsigned int]" | Count nodes: 15 | Stack size: 0
			Payload: +4 | Index 9 remaps to Index: 9 | 
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = long long unsigned int]" |
				-->> "bool User::Tree<Payload>::get_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation::Token; size_t = long long unsigned int]" | Father: 9
				<<-- "bool User::Tree<Payload>::get_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation::Token; size_t = long long unsigned int]" | Found 0 | 0 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = long long unsigned int]" | Count nodes: 10 | Index: 9
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = long long unsigned int]" | Parent tree: 000000000076f880 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = long long unsigned int]" | Count nodes: 15 | Stack size: 0
			Payload:  + | Index 10 remaps to Index: 10 | 
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = long long unsigned int]" |
				-->> "bool User::Tree<Payload>::get_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation::Token; size_t = long long unsigned int]" | Father: 10
					Found children || Index 11 | Own Index: 11 | Father Index: 10 | Own Priority 0 | Children: 2 | Depth: 4
					Found children || Index 14 | Own Index: 14 | Father Index: 10 | Own Priority 1 | Children: 0 | Depth: 4
				<<-- "bool User::Tree<Payload>::get_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation::Token; size_t = long long unsigned int]" | Found 2 | 2 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = long long unsigned int]" | Count nodes: 11 | Index: 10
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = long long unsigned int]" | Parent tree: 000000000076f880 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = long long unsigned int]" | Count nodes: 15 | Stack size: 0
			Payload:  - | Index 11 remaps to Index: 11 | 
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = long long unsigned int]" |
				-->> "bool User::Tree<Payload>::get_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation::Token; size_t = long long unsigned int]" | Father: 11
					Found children || Index 12 | Own Index: 12 | Father Index: 11 | Own Priority 0 | Children: 0 | Depth: 5
					Found children || Index 13 | Own Index: 13 | Father Index: 11 | Own Priority 1 | Children: 0 | Depth: 5
				<<-- "bool User::Tree<Payload>::get_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation::Token; size_t = long long unsigned int]" | Found 2 | 2 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = long long unsigned int]" | Count nodes: 12 | Index: 11
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = long long unsigned int]" | Parent tree: 000000000076f880 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = long long unsigned int]" | Count nodes: 15 | Stack size: 0
			Payload: +5 | Index 12 remaps to Index: 12 | 
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = long long unsigned int]" |
				-->> "bool User::Tree<Payload>::get_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation::Token; size_t = long long unsigned int]" | Father: 12
				<<-- "bool User::Tree<Payload>::get_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation::Token; size_t = long long unsigned int]" | Found 0 | 0 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = long long unsigned int]" | Count nodes: 13 | Index: 12
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = long long unsigned int]" | Parent tree: 000000000076f880 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = long long unsigned int]" | Count nodes: 15 | Stack size: 0
			Payload: +6 | Index 13 remaps to Index: 13 | 
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = long long unsigned int]" |
				-->> "bool User::Tree<Payload>::get_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation::Token; size_t = long long unsigned int]" | Father: 13
				<<-- "bool User::Tree<Payload>::get_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation::Token; size_t = long long unsigned int]" | Found 0 | 0 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = long long unsigned int]" | Count nodes: 14 | Index: 13
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = long long unsigned int]" | Parent tree: 000000000076f880 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = long long unsigned int]" | Count nodes: 15 | Stack size: 0
			Payload: +7 | Index 14 remaps to Index: 14 | 
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = long long unsigned int]" |
				-->> "bool User::Tree<Payload>::get_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation::Token; size_t = long long unsigned int]" | Father: 14
				<<-- "bool User::Tree<Payload>::get_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation::Token; size_t = long long unsigned int]" | Found 0 | 0 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = long long unsigned int]" | Count nodes: 15 | Index: 14
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = long long unsigned int]" | Parent tree: 000000000076f880 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = long long unsigned int]" | Count nodes: 15 | Stack size: 0
			Index 0 | Father 0 -> 0
			Index 1 | Father 0 -> 0
			Index 2 | Father 0 -> 0
			Index 3 | Father 2 -> 2
			Index 4 | Father 3 -> 3
			Index 5 | Father 3 -> 3
			Index 6 | Father 2 -> 2
			Index 7 | Father 6 -> 6
			Index 8 | Father 7 -> 7
			Index 9 | Father 7 -> 7
			Index 10 | Father 6 -> 6
			Index 11 | Father 10 -> 10
			Index 12 | Father 11 -> 11
			Index 13 | Father 11 -> 11
			Index 14 | Father 10 -> 10
		<<-- "bool User::Tree<Payload>::get_sorted_payload(std::vector<User::Tree<Payload>::St_minimal_node>&) [with Payload = User::Equation::Token]" | Nodes: 15 | Expected: 15
		-->> "User::Tree<Payload>::~Tree() [with Payload = User::Equation::Token]" | This: 000000000076fb20
		<<-- "User::Tree<Payload>::~Tree() [with Payload = User::Equation::Token]" |
		-->> "std::__cxx11::string User::Equation::to_string()" |
			-->> "bool User::Equation::to_string(std::__cxx11::string&)" | Tokens: 0
				-->> "static bool User::Equation::convert_token_tree_to_array(User::Tree<User::Equation::Token>&, std::vector<User::Equation::Token>&)" |
					PUSH | Token:  = | Size: 1 | Father: 0 | Index: 0 | Priority Max: 0 | Priority Own: 0 | Level: 0
					PEEK | Token:  = | Size: 1 | Stack: Father: 0 | Index: 0 | Priority Max: 0 | Priority Own: 0 | Level: 0
					PUSH*| Token:  = | Size: 1 | Father: 0 | Index: 0 | Priority Max: 0 | Priority Own: 0 | Level: 0
					-->> "bool User::Tree<Payload>::get_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation::Token; size_t = long long unsigned int]" | Father: 0
						Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 0 | Depth: 1
						Found children || Index 2 | Own Index: 2 | Father Index: 0 | Own Priority 1 | Children: 2 | Depth: 1
					<<-- "bool User::Tree<Payload>::get_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation::Token; size_t = long long unsigned int]" | Found 2 | 2 children
					PUSH | Token:  + | Size: 2 | Father: 0 | Index: 2 | Priority Max: 0 | Priority Own: 1 | Level: 1
					PUSH | Token: +4 | Size: 3 | Father: 0 | Index: 1 | Priority Max: 0 | Priority Own: 0 | Level: 1
					PEEK | Token: +4 | Size: 3 | Stack: Father: 0 | Index: 1 | Priority Max: 0 | Priority Own: 0 | Level: 1
					SKIP | OPEN | Level 1
					APPEND OWN | +4 | Tokens: 1
					PEEK | Token:  + | Size: 2 | Stack: Father: 0 | Index: 2 | Priority Max: 0 | Priority Own: 1 | Level: 1
					APPEND FATHER |  = | Tokens: 2
					PUSH*| Token:  + | Size: 2 | Father: 0 | Index: 2 | Priority Max: 0 | Priority Own: 1 | Level: 1
					-->> "bool User::Tree<Payload>::get_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation::Token; size_t = long long unsigned int]" | Father: 2
						Found children || Index 3 | Own Index: 3 | Father Index: 2 | Own Priority 0 | Children: 2 | Depth: 2
						Found children || Index 6 | Own Index: 6 | Father Index: 2 | Own Priority 1 | Children: 2 | Depth: 2
					<<-- "bool User::Tree<Payload>::get_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation::Token; size_t = long long unsigned int]" | Found 2 | 2 children
					PUSH | Token:  + | Size: 3 | Father: 2 | Index: 6 | Priority Max: 1 | Priority Own: 1 | Level: 2
					PUSH | Token:  - | Size: 4 | Father: 2 | Index: 3 | Priority Max: 1 | Priority Own: 0 | Level: 2
					PEEK | Token:  - | Size: 4 | Stack: Father: 2 | Index: 3 | Priority Max: 1 | Priority Own: 0 | Level: 2
					APPEND | OPEN | Tokens: 3 | Level 2
					PUSH*| Token:  - | Size: 4 | Father: 2 | Index: 3 | Priority Max: 1 | Priority Own: 0 | Level: 2
					-->> "bool User::Tree<Payload>::get_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation::Token; size_t = long long unsigned int]" | Father: 3
						Found children || Index 4 | Own Index: 4 | Father Index: 3 | Own Priority 0 | Children: 0 | Depth: 3
						Found children || Index 5 | Own Index: 5 | Father Index: 3 | Own Priority 1 | Children: 0 | Depth: 3
					<<-- "bool User::Tree<Payload>::get_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation::Token; size_t = long long unsigned int]" | Found 2 | 2 children
					PUSH | Token: +2 | Size: 5 | Father: 3 | Index: 5 | Priority Max: 0 | Priority Own: 1 | Level: 3
					PUSH | Token: +1 | Size: 6 | Father: 3 | Index: 4 | Priority Max: 0 | Priority Own: 0 | Level: 3
					PEEK | Token: +1 | Size: 6 | Stack: Father: 3 | Index: 4 | Priority Max: 0 | Priority Own: 0 | Level: 3
					APPEND | OPEN | Tokens: 4 | Level 3
					APPEND OWN | +1 | Tokens: 5
					PEEK | Token: +2 | Size: 5 | Stack: Father: 3 | Index: 5 | Priority Max: 0 | Priority Own: 1 | Level: 3
					APPEND FATHER |  - | Tokens: 6
					APPEND OWN | +2 | Tokens: 7
					PEEK | Token:  - | Size: 4 | Stack: Father: 2 | Index: 3 | Priority Max: 1 | Priority Own: 0 | Level: 2
					APPEND | CLOSE | Tokens: 8 | Level 2
					PEEK | Token:  + | Size: 3 | Stack: Father: 2 | Index: 6 | Priority Max: 1 | Priority Own: 1 | Level: 2
					APPEND FATHER |  + | Tokens: 9
					PUSH*| Token:  + | Size: 3 | Father: 2 | Index: 6 | Priority Max: 1 | Priority Own: 1 | Level: 2
					-->> "bool User::Tree<Payload>::get_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation::Token; size_t = long long unsigned int]" | Father: 6
						Found children || Index 7 | Own Index: 7 | Father Index: 6 | Own Priority 0 | Children: 2 | Depth: 3
						Found children || Index 10 | Own Index: 10 | Father Index: 6 | Own Priority 1 | Children: 2 | Depth: 3
					<<-- "bool User::Tree<Payload>::get_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation::Token; size_t = long long unsigned int]" | Found 2 | 2 children
					PUSH | Token:  + | Size: 4 | Father: 6 | Index: 10 | Priority Max: 1 | Priority Own: 1 | Level: 3
					PUSH | Token:  - | Size: 5 | Father: 6 | Index: 7 | Priority Max: 1 | Priority Own: 0 | Level: 3
					PEEK | Token:  - | Size: 5 | Stack: Father: 6 | Index: 7 | Priority Max: 1 | Priority Own: 0 | Level: 3
					APPEND | OPEN | Tokens: 10 | Level 3
					PUSH*| Token:  - | Size: 5 | Father: 6 | Index: 7 | Priority Max: 1 | Priority Own: 0 | Level: 3
					-->> "bool User::Tree<Payload>::get_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation::Token; size_t = long long unsigned int]" | Father: 7
						Found children || Index 8 | Own Index: 8 | Father Index: 7 | Own Priority 0 | Children: 0 | Depth: 4
						Found children || Index 9 | Own Index: 9 | Father Index: 7 | Own Priority 1 | Children: 0 | Depth: 4
					<<-- "bool User::Tree<Payload>::get_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation::Token; size_t = long long unsigned int]" | Found 2 | 2 children
					PUSH | Token: +4 | Size: 6 | Father: 7 | Index: 9 | Priority Max: 0 | Priority Own: 1 | Level: 4
					PUSH | Token: +3 | Size: 7 | Father: 7 | Index: 8 | Priority Max: 0 | Priority Own: 0 | Level: 4
					PEEK | Token: +3 | Size: 7 | Stack: Father: 7 | Index: 8 | Priority Max: 0 | Priority Own: 0 | Level: 4
					APPEND | OPEN | Tokens: 11 | Level 4
					APPEND OWN | +3 | Tokens: 12
					PEEK | Token: +4 | Size: 6 | Stack: Father: 7 | Index: 9 | Priority Max: 0 | Priority Own: 1 | Level: 4
					APPEND FATHER |  - | Tokens: 13
					APPEND OWN | +4 | Tokens: 14
					PEEK | Token:  - | Size: 5 | Stack: Father: 6 | Index: 7 | Priority Max: 1 | Priority Own: 0 | Level: 3
					APPEND | CLOSE | Tokens: 15 | Level 3
					PEEK | Token:  + | Size: 4 | Stack: Father: 6 | Index: 10 | Priority Max: 1 | Priority Own: 1 | Level: 3
					APPEND FATHER |  + | Tokens: 16
					PUSH*| Token:  + | Size: 4 | Father: 6 | Index: 10 | Priority Max: 1 | Priority Own: 1 | Level: 3
					-->> "bool User::Tree<Payload>::get_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation::Token; size_t = long long unsigned int]" | Father: 10
						Found children || Index 11 | Own Index: 11 | Father Index: 10 | Own Priority 0 | Children: 2 | Depth: 4
						Found children || Index 14 | Own Index: 14 | Father Index: 10 | Own Priority 1 | Children: 0 | Depth: 4
					<<-- "bool User::Tree<Payload>::get_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation::Token; size_t = long long unsigned int]" | Found 2 | 2 children
					PUSH | Token: +7 | Size: 5 | Father: 10 | Index: 14 | Priority Max: 1 | Priority Own: 1 | Level: 4
					PUSH | Token:  - | Size: 6 | Father: 10 | Index: 11 | Priority Max: 1 | Priority Own: 0 | Level: 4
					PEEK | Token:  - | Size: 6 | Stack: Father: 10 | Index: 11 | Priority Max: 1 | Priority Own: 0 | Level: 4
					APPEND | OPEN | Tokens: 17 | Level 4
					PUSH*| Token:  - | Size: 6 | Father: 10 | Index: 11 | Priority Max: 1 | Priority Own: 0 | Level: 4
					-->> "bool User::Tree<Payload>::get_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation::Token; size_t = long long unsigned int]" | Father: 11
						Found children || Index 12 | Own Index: 12 | Father Index: 11 | Own Priority 0 | Children: 0 | Depth: 5
						Found children || Index 13 | Own Index: 13 | Father Index: 11 | Own Priority 1 | Children: 0 | Depth: 5
					<<-- "bool User::Tree<Payload>::get_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation::Token; size_t = long long unsigned int]" | Found 2 | 2 children
					PUSH | Token: +6 | Size: 7 | Father: 11 | Index: 13 | Priority Max: 0 | Priority Own: 1 | Level: 5
					PUSH | Token: +5 | Size: 8 | Father: 11 | Index: 12 | Priority Max: 0 | Priority Own: 0 | Level: 5
					PEEK | Token: +5 | Size: 8 | Stack: Father: 11 | Index: 12 | Priority Max: 0 | Priority Own: 0 | Level: 5
					APPEND | OPEN | Tokens: 18 | Level 5
					APPEND OWN | +5 | Tokens: 19
					PEEK | Token: +6 | Size: 7 | Stack: Father: 11 | Index: 13 | Priority Max: 0 | Priority Own: 1 | Level: 5
					APPEND FATHER |  - | Tokens: 20
					APPEND OWN | +6 | Tokens: 21
					PEEK | Token:  - | Size: 6 | Stack: Father: 10 | Index: 11 | Priority Max: 1 | Priority Own: 0 | Level: 4
					APPEND | CLOSE | Tokens: 22 | Level 4
					PEEK | Token: +7 | Size: 5 | Stack: Father: 10 | Index: 14 | Priority Max: 1 | Priority Own: 1 | Level: 4
					APPEND FATHER |  + | Tokens: 23
					APPEND OWN | +7 | Tokens: 24
					PEEK | Token:  + | Size: 4 | Stack: Father: 6 | Index: 10 | Priority Max: 1 | Priority Own: 1 | Level: 3
					APPEND | CLOSE | Tokens: 25 | Level 3
					PEEK | Token:  + | Size: 3 | Stack: Father: 2 | Index: 6 | Priority Max: 1 | Priority Own: 1 | Level: 2
					APPEND | CLOSE | Tokens: 26 | Level 2
					PEEK | Token:  + | Size: 2 | Stack: Father: 0 | Index: 2 | Priority Max: 0 | Priority Own: 1 | Level: 1
					APPEND | CLOSE | Tokens: 27 | Level 1
					PEEK | Token:  = | Size: 1 | Stack: Father: 0 | Index: 0 | Priority Max: 0 | Priority Own: 0 | Level: 0
					SKIP | CLOSE | Level 0
					Scan:  4 | = | ( | ( | 1 | - | 2 | ) | + | ( | ( | 3 | - | 4 | ) | + | ( | ( | 5 | - | 6 | ) | + | 7 | ) | ) | ) |
				<<-- "static bool User::Equation::convert_token_tree_to_array(User::Tree<User::Equation::Token>&, std::vector<User::Equation::Token>&)" |
				-->> "static bool User::Equation::convert_token_array_to_string(std::vector<User::Equation::Token>&, std::__cxx11::string&)" | Tokens: 27
				<<-- "static bool User::Equation::convert_token_array_to_string(std::vector<User::Equation::Token>&, std::__cxx11::string&)" | Equation: 4=((1-2)+((3-4)+((5-6)+7))) | length: 27
			<<-- "bool User::Equation::to_string(std::__cxx11::string&)" | Equation: 4=((1-2)+((3-4)+((5-6)+7))) | Size: 27
		<<-- "std::__cxx11::string User::Equation::to_string()" | Equation: 4=((1-2)+((3-4)+((5-6)+7))) | Size: 27
		-->> "User::Equation::~Equation()" | This: 000000000076fa40
		<<-- "User::Equation::~Equation()" |
		-->> "User::Tree<Payload>::~Tree() [with Payload = User::Equation::Token]" | This: 000000000076fa48
		<<-- "User::Tree<Payload>::~Tree() [with Payload = User::Equation::Token]" |
	<<-- "bool test_bench()" |
<<-- "int main()" |

Debug has Ended!
