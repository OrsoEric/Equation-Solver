Start Debug!
-->> "int main()" |
	OrangeBot Projects
	-->> "bool test_bench()" |
		-->> "int unit_test_parse_token_array()" | in: 0

			-->> "User::Tree<Payload>::Tree() [with Payload = User::Equation::Token]" | This: 007efd18
				-->> "bool User::Tree<Payload>::init_class_vars(Payload) [with Payload = User::Equation::Token]" |
				<<-- "bool User::Tree<Payload>::init_class_vars(Payload) [with Payload = User::Equation::Token]" |
			<<-- "User::Tree<Payload>::Tree() [with Payload = User::Equation::Token]" |
			-->> "User::Equation::Equation()" | This: 007efd08
				-->> "bool User::Equation::init_class_vars()" |
				<<-- "bool User::Equation::init_class_vars()" |
			<<-- "User::Equation::Equation()" |
			Number of test patterns 21
			PATTERN0 ><
			-->> "bool User::Equation::parse(std::__cxx11::string)" | Parse:  | Size: 0
				-->> "static bool User::Equation::equation_to_token_array(std::__cxx11::string, std::vector<std::__cxx11::basic_string<char> >&, std::vector<User::Equation::Token>&)" | Parse:  | Size: 0
				<<-- "static bool User::Equation::equation_to_token_array(std::__cxx11::string, std::vector<std::__cxx11::basic_string<char> >&, std::vector<User::Equation::Token>&)" | ERR:1099 | Bad input string
				-->> "bool User::Equation::flush()" |
					-->> "bool User::Tree<Payload>::flush() [with Payload = User::Equation::Token]" | Nodes inside the tree: 1
						-->> "bool User::Tree<Payload>::init_root() [with Payload = User::Equation::Token]" |
						<<-- "bool User::Tree<Payload>::init_root() [with Payload = User::Equation::Token]" |
					<<-- "bool User::Tree<Payload>::flush() [with Payload = User::Equation::Token]" | Nodes inside the tree: 1
				<<-- "bool User::Equation::flush()" |
			<<-- "bool User::Equation::parse(std::__cxx11::string)" | ERR262 | failed to parse an equation into an array of string tokens...

			PASS pattern: 0
			-->> "User::Tree<Payload>::~Tree() [with Payload = User::Equation::Token]" | This: 007efbf4
			<<-- "User::Tree<Payload>::~Tree() [with Payload = User::Equation::Token]" |
			PATTERN1 >1<
			-->> "bool User::Equation::parse(std::__cxx11::string)" | Parse: 1 | Size: 1
				-->> "static bool User::Equation::equation_to_token_array(std::__cxx11::string, std::vector<std::__cxx11::basic_string<char> >&, std::vector<User::Equation::Token>&)" | Parse: 1 | Size: 1
					SEEK_NEXT_TOKEN | Decode: >>1<<
					Token fully decoded:  1 | type: 0 | size: 1
					Tokens decoded: 1
					Equations decoded into 1 tokens
					Token: >>1<< | Type: 0 | Size: 1
				<<-- "static bool User::Equation::equation_to_token_array(std::__cxx11::string, std::vector<std::__cxx11::basic_string<char> >&, std::vector<User::Equation::Token>&)" | Decoded 1 tokens
				-->> "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | Token Array Size: 1 | Father 0
					-->> "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1
						Token   0 | >1< | Open Close Priority: 0 | Symbol Priority 5 
						Candidate   0 | >1< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Default
						Token   0 | >1< | Highest priority token
					<<-- "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1 | Highest Priority Token: <1> | 0 5
					Core Token: >1< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 5
					LHS Tokens: 0 | RHS Tokens: 0
					-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" | Object: 007efd18, Index: 0
					<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" |
				<<-- "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | ERR:1513 | Root is not equal operator!
				-->> "bool User::Equation::flush()" |
					-->> "bool User::Tree<Payload>::flush() [with Payload = User::Equation::Token]" | Nodes inside the tree: 1
						-->> "bool User::Tree<Payload>::init_root() [with Payload = User::Equation::Token]" |
						<<-- "bool User::Tree<Payload>::init_root() [with Payload = User::Equation::Token]" |
					<<-- "bool User::Tree<Payload>::flush() [with Payload = User::Equation::Token]" | Nodes inside the tree: 1
				<<-- "bool User::Equation::flush()" |
			<<-- "bool User::Equation::parse(std::__cxx11::string)" | ERR:309 | Could not convert from token array to tree...
			PASS pattern: 1
			-->> "User::Tree<Payload>::~Tree() [with Payload = User::Equation::Token]" | This: 007efbf4
			<<-- "User::Tree<Payload>::~Tree() [with Payload = User::Equation::Token]" |
			PATTERN2 >(1<
			-->> "bool User::Equation::parse(std::__cxx11::string)" | Parse: (1 | Size: 2
				-->> "static bool User::Equation::equation_to_token_array(std::__cxx11::string, std::vector<std::__cxx11::basic_string<char> >&, std::vector<User::Equation::Token>&)" | Parse: (1 | Size: 2
					SEEK_NEXT_TOKEN | Decode: >>(<<
					-->> "static bool User::Equation::is_symbol(char)" | Digit: >>(<<
					<<-- "static bool User::Equation::is_symbol(char)" | N
					-->> "static bool User::Equation::is_operator(char)" | Digit: >>(<<
					<<-- "static bool User::Equation::is_operator(char)" | N
					Open detected: >>(<< | Token: (
					Token fully decoded:  ( | type: 3 | size: 1
					Tokens decoded: 1
					SEEK_NEXT_TOKEN | Decode: >>1<<
					Token fully decoded:  1 | type: 0 | size: 1
					Tokens decoded: 2
				<<-- "static bool User::Equation::equation_to_token_array(std::__cxx11::string, std::vector<std::__cxx11::basic_string<char> >&, std::vector<User::Equation::Token>&)" | ERR1387 | Unbalanced brackets | Open 1 | Close 0
				-->> "bool User::Equation::flush()" |
					-->> "bool User::Tree<Payload>::flush() [with Payload = User::Equation::Token]" | Nodes inside the tree: 1
						-->> "bool User::Tree<Payload>::init_root() [with Payload = User::Equation::Token]" |
						<<-- "bool User::Tree<Payload>::init_root() [with Payload = User::Equation::Token]" |
					<<-- "bool User::Tree<Payload>::flush() [with Payload = User::Equation::Token]" | Nodes inside the tree: 1
				<<-- "bool User::Equation::flush()" |
			<<-- "bool User::Equation::parse(std::__cxx11::string)" | ERR262 | failed to parse an equation into an array of string tokens...

			PASS pattern: 2
			-->> "User::Tree<Payload>::~Tree() [with Payload = User::Equation::Token]" | This: 007efbf4
			<<-- "User::Tree<Payload>::~Tree() [with Payload = User::Equation::Token]" |
			PATTERN3 >1(<
			-->> "bool User::Equation::parse(std::__cxx11::string)" | Parse: 1( | Size: 2
				-->> "static bool User::Equation::equation_to_token_array(std::__cxx11::string, std::vector<std::__cxx11::basic_string<char> >&, std::vector<User::Equation::Token>&)" | Parse: 1( | Size: 2
					SEEK_NEXT_TOKEN | Decode: >>1<<
					TOKEN_NUMBER | Decode: >>(<<
					Token fully decoded:  1 | type: 0 | size: 1
					Tokens decoded: 1
					SEEK_NEXT_TOKEN | Decode: >>(<<
					-->> "static bool User::Equation::is_symbol(char)" | Digit: >>(<<
					<<-- "static bool User::Equation::is_symbol(char)" | N
					-->> "static bool User::Equation::is_operator(char)" | Digit: >>(<<
					<<-- "static bool User::Equation::is_operator(char)" | N
					Open detected: >>(<< | Token: (
					Token fully decoded:  ( | type: 3 | size: 1
					Tokens decoded: 2
					-->> "static bool User::Equation::is_symbol(char)" | Digit: >> <<
					<<-- "static bool User::Equation::is_symbol(char)" | N
					-->> "static bool User::Equation::is_operator(char)" | Digit: >> <<
					<<-- "static bool User::Equation::is_operator(char)" | N
					ERR1244: Invalid Digit >> <<
				<<-- "static bool User::Equation::equation_to_token_array(std::__cxx11::string, std::vector<std::__cxx11::basic_string<char> >&, std::vector<User::Equation::Token>&)" | ERR1387 | Unbalanced brackets | Open 1 | Close 0
				-->> "bool User::Equation::flush()" |
					-->> "bool User::Tree<Payload>::flush() [with Payload = User::Equation::Token]" | Nodes inside the tree: 1
						-->> "bool User::Tree<Payload>::init_root() [with Payload = User::Equation::Token]" |
						<<-- "bool User::Tree<Payload>::init_root() [with Payload = User::Equation::Token]" |
					<<-- "bool User::Tree<Payload>::flush() [with Payload = User::Equation::Token]" | Nodes inside the tree: 1
				<<-- "bool User::Equation::flush()" |
			<<-- "bool User::Equation::parse(std::__cxx11::string)" | ERR262 | failed to parse an equation into an array of string tokens...

			PASS pattern: 3
			-->> "User::Tree<Payload>::~Tree() [with Payload = User::Equation::Token]" | This: 007efbf4
			<<-- "User::Tree<Payload>::~Tree() [with Payload = User::Equation::Token]" |
			PATTERN4 >((1)<
			-->> "bool User::Equation::parse(std::__cxx11::string)" | Parse: ((1) | Size: 4
				-->> "static bool User::Equation::equation_to_token_array(std::__cxx11::string, std::vector<std::__cxx11::basic_string<char> >&, std::vector<User::Equation::Token>&)" | Parse: ((1) | Size: 4
					SEEK_NEXT_TOKEN | Decode: >>(<<
					-->> "static bool User::Equation::is_symbol(char)" | Digit: >>(<<
					<<-- "static bool User::Equation::is_symbol(char)" | N
					-->> "static bool User::Equation::is_operator(char)" | Digit: >>(<<
					<<-- "static bool User::Equation::is_operator(char)" | N
					Open detected: >>(<< | Token: (
					Token fully decoded:  ( | type: 3 | size: 1
					Tokens decoded: 1
					SEEK_NEXT_TOKEN | Decode: >>(<<
					-->> "static bool User::Equation::is_symbol(char)" | Digit: >>(<<
					<<-- "static bool User::Equation::is_symbol(char)" | N
					-->> "static bool User::Equation::is_operator(char)" | Digit: >>(<<
					<<-- "static bool User::Equation::is_operator(char)" | N
					Open detected: >>(<< | Token: (
					Token fully decoded:  ( | type: 3 | size: 1
					Tokens decoded: 2
					SEEK_NEXT_TOKEN | Decode: >>1<<
					TOKEN_NUMBER | Decode: >>)<<
					Token fully decoded:  1 | type: 0 | size: 1
					Tokens decoded: 3
					SEEK_NEXT_TOKEN | Decode: >>)<<
					-->> "static bool User::Equation::is_symbol(char)" | Digit: >>)<<
					<<-- "static bool User::Equation::is_symbol(char)" | N
					-->> "static bool User::Equation::is_operator(char)" | Digit: >>)<<
					<<-- "static bool User::Equation::is_operator(char)" | N
					Close detected: >>)<< | Token: )
					Token fully decoded:  ) | type: 4 | size: 1
					Tokens decoded: 4
					-->> "static bool User::Equation::is_symbol(char)" | Digit: >> <<
					<<-- "static bool User::Equation::is_symbol(char)" | N
					-->> "static bool User::Equation::is_operator(char)" | Digit: >> <<
					<<-- "static bool User::Equation::is_operator(char)" | N
					ERR1244: Invalid Digit >> <<
				<<-- "static bool User::Equation::equation_to_token_array(std::__cxx11::string, std::vector<std::__cxx11::basic_string<char> >&, std::vector<User::Equation::Token>&)" | ERR1387 | Unbalanced brackets | Open 2 | Close 1
				-->> "bool User::Equation::flush()" |
					-->> "bool User::Tree<Payload>::flush() [with Payload = User::Equation::Token]" | Nodes inside the tree: 1
						-->> "bool User::Tree<Payload>::init_root() [with Payload = User::Equation::Token]" |
						<<-- "bool User::Tree<Payload>::init_root() [with Payload = User::Equation::Token]" |
					<<-- "bool User::Tree<Payload>::flush() [with Payload = User::Equation::Token]" | Nodes inside the tree: 1
				<<-- "bool User::Equation::flush()" |
			<<-- "bool User::Equation::parse(std::__cxx11::string)" | ERR262 | failed to parse an equation into an array of string tokens...

			PASS pattern: 4
			-->> "User::Tree<Payload>::~Tree() [with Payload = User::Equation::Token]" | This: 007efbf4
			<<-- "User::Tree<Payload>::~Tree() [with Payload = User::Equation::Token]" |
			PATTERN5 >1=1=1<
			-->> "bool User::Equation::parse(std::__cxx11::string)" | Parse: 1=1=1 | Size: 5
				-->> "static bool User::Equation::equation_to_token_array(std::__cxx11::string, std::vector<std::__cxx11::basic_string<char> >&, std::vector<User::Equation::Token>&)" | Parse: 1=1=1 | Size: 5
					SEEK_NEXT_TOKEN | Decode: >>1<<
					TOKEN_NUMBER | Decode: >>=<<
					Token fully decoded:  1 | type: 0 | size: 1
					Tokens decoded: 1
					SEEK_NEXT_TOKEN | Decode: >>=<<
					-->> "static bool User::Equation::is_symbol(char)" | Digit: >>=<<
					<<-- "static bool User::Equation::is_symbol(char)" | N
					-->> "static bool User::Equation::is_operator(char)" | Digit: >>=<<
					<<-- "static bool User::Equation::is_operator(char)" | Y
					Operator detected: >>=<< | Token: =
					Token fully decoded:  = | type: 2 | size: 1
					Tokens decoded: 2
					SEEK_NEXT_TOKEN | Decode: >>1<<
					TOKEN_NUMBER | Decode: >>=<<
					Token fully decoded:  1 | type: 0 | size: 1
					Tokens decoded: 3
					SEEK_NEXT_TOKEN | Decode: >>=<<
					-->> "static bool User::Equation::is_symbol(char)" | Digit: >>=<<
					<<-- "static bool User::Equation::is_symbol(char)" | N
					-->> "static bool User::Equation::is_operator(char)" | Digit: >>=<<
					<<-- "static bool User::Equation::is_operator(char)" | Y
					Operator detected: >>=<< | Token: =
					Token fully decoded:  = | type: 2 | size: 1
					Tokens decoded: 4
					SEEK_NEXT_TOKEN | Decode: >>1<<
					Token fully decoded:  1 | type: 0 | size: 1
					Tokens decoded: 5
					Equations decoded into 5 tokens
					Token: >>1<< | Type: 0 | Size: 1
					Token: >>=<< | Type: 2 | Size: 1
					Token: >>1<< | Type: 0 | Size: 1
					Token: >>=<< | Type: 2 | Size: 1
					Token: >>1<< | Type: 0 | Size: 1
				<<-- "static bool User::Equation::equation_to_token_array(std::__cxx11::string, std::vector<std::__cxx11::basic_string<char> >&, std::vector<User::Equation::Token>&)" | Decoded 5 tokens
				-->> "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | Token Array Size: 5 | Father 0
					-->> "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 5
						Token   0 | >1< | Open Close Priority: 0 | Symbol Priority 5 
						Token   1 | >=< | Open Close Priority: 0 | Symbol Priority 0 
						Token   2 | >1< | Open Close Priority: 0 | Symbol Priority 5 
						Token   3 | >=< | Open Close Priority: 0 | Symbol Priority 0 
						Token   4 | >1< | Open Close Priority: 0 | Symbol Priority 5 
						Candidate   0 | >1< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Default
						Candidate   1 | >=< | Open Close Priority 0 | Symbol Priority 0 | Min Priority 0
						Ignore   2 | >1< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Best Priority 0
						Ignore   3 | >=< | Open Close Priority 0 | Symbol Priority 0 | Min Priority 0 | Best Priority 0
						Ignore   4 | >1< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Best Priority 0
						Token   1 | >=< | Highest priority token
					<<-- "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 5 | Highest Priority Token: <=> | 0 0
					Core Token: >=< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 0
					LHS: >1<
					RHS: >1<
					RHS: >=<
					RHS: >1<
					LHS Tokens: 1 | RHS Tokens: 3
					ROOT: >=<
					-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" | Object: 007efd18, Index: 0
					<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" |
					LHS: >=<
					-->> "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | Token Array Size: 1 | Father 0
						-->> "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1
							Token   0 | >1< | Open Close Priority: 0 | Symbol Priority 5 
							Candidate   0 | >1< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Default
							Token   0 | >1< | Highest priority token
						<<-- "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1 | Highest Priority Token: <1> | 0 5
						Core Token: >1< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 5
						LHS Tokens: 0 | RHS Tokens: 0
						-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" | Object: 007efd18, Index: 0
						<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" |
						-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
						<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 0 | Own Index: 1 | Nodes under Father: 2
					<<-- "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | PASS
					LHS of size 1 under father 0
					-->> "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | Token Array Size: 3 | Father 0
						-->> "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 3
							Token   0 | >1< | Open Close Priority: 0 | Symbol Priority 5 
							Token   1 | >=< | Open Close Priority: 0 | Symbol Priority 0 
							Token   2 | >1< | Open Close Priority: 0 | Symbol Priority 5 
							Candidate   0 | >1< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Default
							Candidate   1 | >=< | Open Close Priority 0 | Symbol Priority 0 | Min Priority 0
							Ignore   2 | >1< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Best Priority 0
							Token   1 | >=< | Highest priority token
						<<-- "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 3 | Highest Priority Token: <=> | 0 0
						Core Token: >=< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 0
						LHS: >1<
						RHS: >1<
						LHS Tokens: 1 | RHS Tokens: 1
					<<-- "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | ERR:1496 | Equal not as root of the tree! Father: 0 | Tree size: 2
					RHS of size 3 under father 0
				<<-- "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | FAIL
				-->> "bool User::Equation::flush()" |
					-->> "bool User::Tree<Payload>::flush() [with Payload = User::Equation::Token]" | Nodes inside the tree: 2
						-->> "bool User::Tree<Payload>::init_root() [with Payload = User::Equation::Token]" |
						<<-- "bool User::Tree<Payload>::init_root() [with Payload = User::Equation::Token]" |
					<<-- "bool User::Tree<Payload>::flush() [with Payload = User::Equation::Token]" | Nodes inside the tree: 1
				<<-- "bool User::Equation::flush()" |
			<<-- "bool User::Equation::parse(std::__cxx11::string)" | ERR:309 | Could not convert from token array to tree...
			PASS pattern: 5
			-->> "User::Tree<Payload>::~Tree() [with Payload = User::Equation::Token]" | This: 007efbf4
			<<-- "User::Tree<Payload>::~Tree() [with Payload = User::Equation::Token]" |
			PATTERN6 >1=((((((1))))))<
			-->> "bool User::Equation::parse(std::__cxx11::string)" | Parse: 1=((((((1)))))) | Size: 15
				-->> "static bool User::Equation::equation_to_token_array(std::__cxx11::string, std::vector<std::__cxx11::basic_string<char> >&, std::vector<User::Equation::Token>&)" | Parse: 1=((((((1)))))) | Size: 15
					SEEK_NEXT_TOKEN | Decode: >>1<<
					TOKEN_NUMBER | Decode: >>=<<
					Token fully decoded:  1 | type: 0 | size: 1
					Tokens decoded: 1
					SEEK_NEXT_TOKEN | Decode: >>=<<
					-->> "static bool User::Equation::is_symbol(char)" | Digit: >>=<<
					<<-- "static bool User::Equation::is_symbol(char)" | N
					-->> "static bool User::Equation::is_operator(char)" | Digit: >>=<<
					<<-- "static bool User::Equation::is_operator(char)" | Y
					Operator detected: >>=<< | Token: =
					Token fully decoded:  = | type: 2 | size: 1
					Tokens decoded: 2
					SEEK_NEXT_TOKEN | Decode: >>(<<
					-->> "static bool User::Equation::is_symbol(char)" | Digit: >>(<<
					<<-- "static bool User::Equation::is_symbol(char)" | N
					-->> "static bool User::Equation::is_operator(char)" | Digit: >>(<<
					<<-- "static bool User::Equation::is_operator(char)" | N
					Open detected: >>(<< | Token: (
					Token fully decoded:  ( | type: 3 | size: 1
					Tokens decoded: 3
					SEEK_NEXT_TOKEN | Decode: >>(<<
					-->> "static bool User::Equation::is_symbol(char)" | Digit: >>(<<
					<<-- "static bool User::Equation::is_symbol(char)" | N
					-->> "static bool User::Equation::is_operator(char)" | Digit: >>(<<
					<<-- "static bool User::Equation::is_operator(char)" | N
					Open detected: >>(<< | Token: (
					Token fully decoded:  ( | type: 3 | size: 1
					Tokens decoded: 4
					SEEK_NEXT_TOKEN | Decode: >>(<<
					-->> "static bool User::Equation::is_symbol(char)" | Digit: >>(<<
					<<-- "static bool User::Equation::is_symbol(char)" | N
					-->> "static bool User::Equation::is_operator(char)" | Digit: >>(<<
					<<-- "static bool User::Equation::is_operator(char)" | N
					Open detected: >>(<< | Token: (
					Token fully decoded:  ( | type: 3 | size: 1
					Tokens decoded: 5
					SEEK_NEXT_TOKEN | Decode: >>(<<
					-->> "static bool User::Equation::is_symbol(char)" | Digit: >>(<<
					<<-- "static bool User::Equation::is_symbol(char)" | N
					-->> "static bool User::Equation::is_operator(char)" | Digit: >>(<<
					<<-- "static bool User::Equation::is_operator(char)" | N
					Open detected: >>(<< | Token: (
					Token fully decoded:  ( | type: 3 | size: 1
					Tokens decoded: 6
					SEEK_NEXT_TOKEN | Decode: >>(<<
					-->> "static bool User::Equation::is_symbol(char)" | Digit: >>(<<
					<<-- "static bool User::Equation::is_symbol(char)" | N
					-->> "static bool User::Equation::is_operator(char)" | Digit: >>(<<
					<<-- "static bool User::Equation::is_operator(char)" | N
					Open detected: >>(<< | Token: (
					Token fully decoded:  ( | type: 3 | size: 1
					Tokens decoded: 7
					SEEK_NEXT_TOKEN | Decode: >>(<<
					-->> "static bool User::Equation::is_symbol(char)" | Digit: >>(<<
					<<-- "static bool User::Equation::is_symbol(char)" | N
					-->> "static bool User::Equation::is_operator(char)" | Digit: >>(<<
					<<-- "static bool User::Equation::is_operator(char)" | N
					Open detected: >>(<< | Token: (
					Token fully decoded:  ( | type: 3 | size: 1
					Tokens decoded: 8
					SEEK_NEXT_TOKEN | Decode: >>1<<
					TOKEN_NUMBER | Decode: >>)<<
					Token fully decoded:  1 | type: 0 | size: 1
					Tokens decoded: 9
					SEEK_NEXT_TOKEN | Decode: >>)<<
					-->> "static bool User::Equation::is_symbol(char)" | Digit: >>)<<
					<<-- "static bool User::Equation::is_symbol(char)" | N
					-->> "static bool User::Equation::is_operator(char)" | Digit: >>)<<
					<<-- "static bool User::Equation::is_operator(char)" | N
					Close detected: >>)<< | Token: )
					Token fully decoded:  ) | type: 4 | size: 1
					Tokens decoded: 10
					SEEK_NEXT_TOKEN | Decode: >>)<<
					-->> "static bool User::Equation::is_symbol(char)" | Digit: >>)<<
					<<-- "static bool User::Equation::is_symbol(char)" | N
					-->> "static bool User::Equation::is_operator(char)" | Digit: >>)<<
					<<-- "static bool User::Equation::is_operator(char)" | N
					Close detected: >>)<< | Token: )
					Token fully decoded:  ) | type: 4 | size: 1
					Tokens decoded: 11
					SEEK_NEXT_TOKEN | Decode: >>)<<
					-->> "static bool User::Equation::is_symbol(char)" | Digit: >>)<<
					<<-- "static bool User::Equation::is_symbol(char)" | N
					-->> "static bool User::Equation::is_operator(char)" | Digit: >>)<<
					<<-- "static bool User::Equation::is_operator(char)" | N
					Close detected: >>)<< | Token: )
					Token fully decoded:  ) | type: 4 | size: 1
					Tokens decoded: 12
					SEEK_NEXT_TOKEN | Decode: >>)<<
					-->> "static bool User::Equation::is_symbol(char)" | Digit: >>)<<
					<<-- "static bool User::Equation::is_symbol(char)" | N
					-->> "static bool User::Equation::is_operator(char)" | Digit: >>)<<
					<<-- "static bool User::Equation::is_operator(char)" | N
					Close detected: >>)<< | Token: )
					Token fully decoded:  ) | type: 4 | size: 1
					Tokens decoded: 13
					SEEK_NEXT_TOKEN | Decode: >>)<<
					-->> "static bool User::Equation::is_symbol(char)" | Digit: >>)<<
					<<-- "static bool User::Equation::is_symbol(char)" | N
					-->> "static bool User::Equation::is_operator(char)" | Digit: >>)<<
					<<-- "static bool User::Equation::is_operator(char)" | N
					Close detected: >>)<< | Token: )
					Token fully decoded:  ) | type: 4 | size: 1
					Tokens decoded: 14
					SEEK_NEXT_TOKEN | Decode: >>)<<
					-->> "static bool User::Equation::is_symbol(char)" | Digit: >>)<<
					<<-- "static bool User::Equation::is_symbol(char)" | N
					-->> "static bool User::Equation::is_operator(char)" | Digit: >>)<<
					<<-- "static bool User::Equation::is_operator(char)" | N
					Close detected: >>)<< | Token: )
					Token fully decoded:  ) | type: 4 | size: 1
					Tokens decoded: 15
					-->> "static bool User::Equation::is_symbol(char)" | Digit: >> <<
					<<-- "static bool User::Equation::is_symbol(char)" | N
					-->> "static bool User::Equation::is_operator(char)" | Digit: >> <<
					<<-- "static bool User::Equation::is_operator(char)" | N
					ERR1244: Invalid Digit >> <<
					Equations decoded into 15 tokens
					Token: >>1<< | Type: 0 | Size: 1
					Token: >>=<< | Type: 2 | Size: 1
					Token: >>(<< | Type: 3 | Size: 1
					Token: >>(<< | Type: 3 | Size: 1
					Token: >>(<< | Type: 3 | Size: 1
					Token: >>(<< | Type: 3 | Size: 1
					Token: >>(<< | Type: 3 | Size: 1
					Token: >>(<< | Type: 3 | Size: 1
					Token: >>1<< | Type: 0 | Size: 1
					Token: >>)<< | Type: 4 | Size: 1
					Token: >>)<< | Type: 4 | Size: 1
					Token: >>)<< | Type: 4 | Size: 1
					Token: >>)<< | Type: 4 | Size: 1
					Token: >>)<< | Type: 4 | Size: 1
					Token: >>)<< | Type: 4 | Size: 1
				<<-- "static bool User::Equation::equation_to_token_array(std::__cxx11::string, std::vector<std::__cxx11::basic_string<char> >&, std::vector<User::Equation::Token>&)" | Decoded 15 tokens
				-->> "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | Token Array Size: 15 | Father 0
					-->> "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 15
						Token   0 | >1< | Open Close Priority: 0 | Symbol Priority 5 
						Token   1 | >=< | Open Close Priority: 0 | Symbol Priority 0 
						Token   2 | Open | Priority: 1
						Token   3 | Open | Priority: 2
						Token   4 | Open | Priority: 3
						Token   5 | Open | Priority: 4
						Token   6 | Open | Priority: 5
						Token   7 | Open | Priority: 6
						Token   8 | >1< | Open Close Priority: 6 | Symbol Priority 5 
						Token   9 | Close| Priority: 6
						Token  10 | Close| Priority: 5
						Token  11 | Close| Priority: 4
						Token  12 | Close| Priority: 3
						Token  13 | Close| Priority: 2
						Token  14 | Close| Priority: 1
						Candidate   0 | >1< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Default
						Candidate   1 | >=< | Open Close Priority 0 | Symbol Priority 0 | Min Priority 0
						Token   1 | >=< | Highest priority token
					<<-- "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 15 | Highest Priority Token: <=> | 0 0
					Core Token: >=< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 0
					LHS: >1<
					RHS: >(<
					RHS: >(<
					RHS: >(<
					RHS: >(<
					RHS: >(<
					RHS: >(<
					RHS: >1<
					RHS: >)<
					RHS: >)<
					RHS: >)<
					RHS: >)<
					RHS: >)<
					RHS: >)<
					LHS Tokens: 1 | RHS Tokens: 13
					ROOT: >=<
					-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" | Object: 007efd18, Index: 0
					<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" |
					LHS: >=<
					-->> "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | Token Array Size: 1 | Father 0
						-->> "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1
							Token   0 | >1< | Open Close Priority: 0 | Symbol Priority 5 
							Candidate   0 | >1< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Default
							Token   0 | >1< | Highest priority token
						<<-- "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1 | Highest Priority Token: <1> | 0 5
						Core Token: >1< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 5
						LHS Tokens: 0 | RHS Tokens: 0
						-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" | Object: 007efd18, Index: 0
						<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" |
						-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
						<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 0 | Own Index: 1 | Nodes under Father: 2
					<<-- "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | PASS
					LHS of size 1 under father 0
					-->> "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | Token Array Size: 13 | Father 0
						-->> "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 13
							Token   0 | Open | Priority: 1
							Token   1 | Open | Priority: 2
							Token   2 | Open | Priority: 3
							Token   3 | Open | Priority: 4
							Token   4 | Open | Priority: 5
							Token   5 | Open | Priority: 6
							Token   6 | >1< | Open Close Priority: 6 | Symbol Priority 5 
							Token   7 | Close| Priority: 6
							Token   8 | Close| Priority: 5
							Token   9 | Close| Priority: 4
							Token  10 | Close| Priority: 3
							Token  11 | Close| Priority: 2
							Token  12 | Close| Priority: 1
							Delete Open 0 | Priority: 1 | Min Priority: 6 
							Delete Open 0 | Priority: 2 | Min Priority: 6 
							Delete Open 0 | Priority: 3 | Min Priority: 6 
							Delete Open 0 | Priority: 4 | Min Priority: 6 
							Delete Open 0 | Priority: 5 | Min Priority: 6 
							Delete Open 0 | Priority: 6 | Min Priority: 6 
							Delete Close 1 | Priority: 6 | Min Priority: 6 
							Delete Close 1 | Priority: 5 | Min Priority: 6 
							Delete Close 1 | Priority: 4 | Min Priority: 6 
							Delete Close 1 | Priority: 3 | Min Priority: 6 
							Delete Close 1 | Priority: 2 | Min Priority: 6 
							Delete Close 1 | Priority: 1 | Min Priority: 6 
							Deleted redundant priority tokens | Tokens: 1 | Min Open Close Priority: 0
							Token   0 | >1< | Open Close Priority: 0 | Symbol Priority 5 
							Candidate   0 | >1< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Default
							Token   0 | >1< | Highest priority token
						<<-- "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1 | Highest Priority Token: <1> | 0 5
						Core Token: >1< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 5
						LHS Tokens: 0 | RHS Tokens: 0
						-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
						<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 0 | Own Index: 2 | Nodes under Father: 3
					<<-- "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | PASS
					RHS of size 1 under father 0
				<<-- "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | PASS
				-->> "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" | Index: 0
					-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef904 | Begin: 1 | Index: 0
					<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 0 | Stack size: 1
					-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef934 | Begin: 0 | Index: 0
					<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 3 | Stack size: 0
					-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
						-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 0
							Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 0 | Depth: 1
							Found children || Index 2 | Own Index: 2 | Father Index: 0 | Own Priority 1 | Children: 0 | Depth: 1
						<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
					<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 1 | Index: 0
					-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef934 | Begin: 0 | Index: 0
					<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 3 | Stack size: 0
					-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
						-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 1
						<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
					<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 2 | Index: 1
					-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef934 | Begin: 0 | Index: 0
					<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 3 | Stack size: 0
					-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
						-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 2
						<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
					<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 3 | Index: 2
					-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef934 | Begin: 0 | Index: 0
					<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 3 | Stack size: 0
				<<-- "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" |
			<<-- "bool User::Equation::parse(std::__cxx11::string)" | Token array size: 15 | Token tree size: 3
			TOKEN0
			TOKEN1
			TOKEN2
			TOKEN3
			TOKEN4
			TOKEN5
			TOKEN6
			TOKEN7
			TOKEN8
			TOKEN9
			TOKEN10
			TOKEN11
			TOKEN12
			TOKEN13
			TOKEN14
			-->> "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" | Index: 0
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa54 | Begin: 1 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 0 | Stack size: 1
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 3 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 0
						Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 0 | Depth: 1
						Found children || Index 2 | Own Index: 2 | Father Index: 0 | Own Priority 1 | Children: 0 | Depth: 1
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 1 | Index: 0
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 3 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 1
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 2 | Index: 1
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 3 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 2
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 3 | Index: 2
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 3 | Stack size: 0
			<<-- "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" |
			-->> "User::Tree<Payload>::Tree(std::vector<User::Tree<Payload>::St_minimal_node>) [with Payload = User::Equation::Token]" | This: 007efc40 | Nodes: 3
				-->> "bool User::Tree<Payload>::init_class_vars(Payload) [with Payload = User::Equation::Token]" |
				<<-- "bool User::Tree<Payload>::init_class_vars(Payload) [with Payload = User::Equation::Token]" |
				-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
				<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 0 | Own Index: 1 | Nodes under Father: 2
				-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
				<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 0 | Own Index: 2 | Nodes under Father: 3
				-->> "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" | Index: 0
					-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa54 | Begin: 1 | Index: 0
					<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 0 | Stack size: 1
					-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
					<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 3 | Stack size: 0
					-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
						-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 0
							Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 0 | Depth: 1
							Found children || Index 2 | Own Index: 2 | Father Index: 0 | Own Priority 1 | Children: 0 | Depth: 1
						<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
					<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 1 | Index: 0
					-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
					<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 3 | Stack size: 0
					-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
						-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 1
						<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
					<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 2 | Index: 1
					-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
					<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 3 | Stack size: 0
					-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
						-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 2
						<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
					<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 3 | Index: 2
					-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
					<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 3 | Stack size: 0
				<<-- "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::operator==(User::Tree<Payload>&) [with Payload = User::Equation::Token]" |
					-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef9cc | Begin: 1 | Index: 0
					<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 0 | Stack size: 1
					-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef99c | Begin: 1 | Index: 0
					<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 0 | Stack size: 1
					-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef9fc | Begin: 0 | Index: 0
					<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 3 | Stack size: 0
					-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa2c | Begin: 0 | Index: 0
					<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 3 | Stack size: 0
					-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
						-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 0
							Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 0 | Depth: 1
							Found children || Index 2 | Own Index: 2 | Father Index: 0 | Own Priority 1 | Children: 0 | Depth: 1
						<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
					<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 1 | Index: 0
					-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
						-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 0
							Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 0 | Depth: 1
							Found children || Index 2 | Own Index: 2 | Father Index: 0 | Own Priority 1 | Children: 0 | Depth: 1
						<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
					<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 1 | Index: 0
					-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef9fc | Begin: 0 | Index: 0
					<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 3 | Stack size: 0
					-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa2c | Begin: 0 | Index: 0
					<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 3 | Stack size: 0
					-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
						-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 1
						<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
					<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 2 | Index: 1
					-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
						-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 1
						<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
					<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 2 | Index: 1
					-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef9fc | Begin: 0 | Index: 0
					<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 3 | Stack size: 0
					-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa2c | Begin: 0 | Index: 0
					<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 3 | Stack size: 0
					-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
						-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 2
						<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
					<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 3 | Index: 2
					-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
						-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 2
						<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
					<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 3 | Index: 2
					-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef9fc | Begin: 0 | Index: 0
					<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 3 | Stack size: 0
					-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa2c | Begin: 0 | Index: 0
					<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 3 | Stack size: 0
				<<-- "bool User::Tree<Payload>::operator==(User::Tree<Payload>&) [with Payload = User::Equation::Token]" | Same
				-->> "static bool User::Equation::convert_token_tree_to_array(User::Tree<User::Equation::Token>&, std::vector<User::Equation::Token>&)" |
					-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" | Object: 007efd18, Index: 0
					<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa30 | Begin: 1 | Index: 0
					<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 0 | Stack size: 1
					-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa60 | Begin: 0 | Index: 0
					<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 3 | Stack size: 0
					Token:  = | Type: 2 | Priority: 0
					-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
						-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 0
							Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 0 | Depth: 1
							Found children || Index 2 | Own Index: 2 | Father Index: 0 | Own Priority 1 | Children: 0 | Depth: 1
						<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
					<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 1 | Index: 0
					-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa60 | Begin: 0 | Index: 0
					<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 3 | Stack size: 0
					Token:  1 | Type: 0 | Priority: 0
					-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
						-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 1
						<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
					<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 2 | Index: 1
					-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa60 | Begin: 0 | Index: 0
					<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 3 | Stack size: 0
					Token:  1 | Type: 0 | Priority: 0
					-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
						-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 2
						<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
					<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 3 | Index: 2
					-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa60 | Begin: 0 | Index: 0
					<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 3 | Stack size: 0
				<<-- "static bool User::Equation::convert_token_tree_to_array(User::Tree<User::Equation::Token>&, std::vector<User::Equation::Token>&)" |
				PASS pattern: 6
				-->> "User::Tree<Payload>::~Tree() [with Payload = User::Equation::Token]" | This: 007efc40
				<<-- "User::Tree<Payload>::~Tree() [with Payload = User::Equation::Token]" |
				-->> "User::Tree<Payload>::~Tree() [with Payload = User::Equation::Token]" | This: 007efbf4
				<<-- "User::Tree<Payload>::~Tree() [with Payload = User::Equation::Token]" |
				PATTERN7 >1=1<
				-->> "bool User::Equation::parse(std::__cxx11::string)" | Parse: 1=1 | Size: 3
					-->> "static bool User::Equation::equation_to_token_array(std::__cxx11::string, std::vector<std::__cxx11::basic_string<char> >&, std::vector<User::Equation::Token>&)" | Parse: 1=1 | Size: 3
						SEEK_NEXT_TOKEN | Decode: >>1<<
						TOKEN_NUMBER | Decode: >>=<<
						Token fully decoded:  1 | type: 0 | size: 1
						Tokens decoded: 1
						SEEK_NEXT_TOKEN | Decode: >>=<<
						-->> "static bool User::Equation::is_symbol(char)" | Digit: >>=<<
						<<-- "static bool User::Equation::is_symbol(char)" | N
						-->> "static bool User::Equation::is_operator(char)" | Digit: >>=<<
						<<-- "static bool User::Equation::is_operator(char)" | Y
						Operator detected: >>=<< | Token: =
						Token fully decoded:  = | type: 2 | size: 1
						Tokens decoded: 2
						SEEK_NEXT_TOKEN | Decode: >>1<<
						Token fully decoded:  1 | type: 0 | size: 1
						Tokens decoded: 3
						Equations decoded into 3 tokens
						Token: >>1<< | Type: 0 | Size: 1
						Token: >>=<< | Type: 2 | Size: 1
						Token: >>1<< | Type: 0 | Size: 1
					<<-- "static bool User::Equation::equation_to_token_array(std::__cxx11::string, std::vector<std::__cxx11::basic_string<char> >&, std::vector<User::Equation::Token>&)" | Decoded 3 tokens
					Tree wasn't empty: 3 | FLUSH
					-->> "bool User::Tree<Payload>::flush() [with Payload = User::Equation::Token]" | Nodes inside the tree: 3
						-->> "bool User::Tree<Payload>::init_root() [with Payload = User::Equation::Token]" |
						<<-- "bool User::Tree<Payload>::init_root() [with Payload = User::Equation::Token]" |
					<<-- "bool User::Tree<Payload>::flush() [with Payload = User::Equation::Token]" | Nodes inside the tree: 1
					-->> "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | Token Array Size: 3 | Father 0
						-->> "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 3
							Token   0 | >1< | Open Close Priority: 0 | Symbol Priority 5 
							Token   1 | >=< | Open Close Priority: 0 | Symbol Priority 0 
							Token   2 | >1< | Open Close Priority: 0 | Symbol Priority 5 
							Candidate   0 | >1< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Default
							Candidate   1 | >=< | Open Close Priority 0 | Symbol Priority 0 | Min Priority 0
							Ignore   2 | >1< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Best Priority 0
							Token   1 | >=< | Highest priority token
						<<-- "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 3 | Highest Priority Token: <=> | 0 0
						Core Token: >=< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 0
						LHS: >1<
						RHS: >1<
						LHS Tokens: 1 | RHS Tokens: 1
						ROOT: >=<
						-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" | Object: 007efd18, Index: 0
						<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" |
						LHS: >=<
						-->> "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | Token Array Size: 1 | Father 0
							-->> "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1
								Token   0 | >1< | Open Close Priority: 0 | Symbol Priority 5 
								Candidate   0 | >1< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Default
								Token   0 | >1< | Highest priority token
							<<-- "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1 | Highest Priority Token: <1> | 0 5
							Core Token: >1< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 5
							LHS Tokens: 0 | RHS Tokens: 0
							-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" | Object: 007efd18, Index: 0
							<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" |
							-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
							<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 0 | Own Index: 1 | Nodes under Father: 2
						<<-- "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | PASS
						LHS of size 1 under father 0
						-->> "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | Token Array Size: 1 | Father 0
							-->> "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1
								Token   0 | >1< | Open Close Priority: 0 | Symbol Priority 5 
								Candidate   0 | >1< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Default
								Token   0 | >1< | Highest priority token
							<<-- "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1 | Highest Priority Token: <1> | 0 5
							Core Token: >1< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 5
							LHS Tokens: 0 | RHS Tokens: 0
							-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
							<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 0 | Own Index: 2 | Nodes under Father: 3
						<<-- "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | PASS
						RHS of size 1 under father 0
					<<-- "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | PASS
					-->> "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" | Index: 0
						-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef904 | Begin: 1 | Index: 0
						<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 0 | Stack size: 1
						-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef934 | Begin: 0 | Index: 0
						<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 3 | Stack size: 0
						-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
							-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 0
								Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 0 | Depth: 1
								Found children || Index 2 | Own Index: 2 | Father Index: 0 | Own Priority 1 | Children: 0 | Depth: 1
							<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
						<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 1 | Index: 0
						-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef934 | Begin: 0 | Index: 0
						<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 3 | Stack size: 0
						-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
							-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 1
							<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
						<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 2 | Index: 1
						-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef934 | Begin: 0 | Index: 0
						<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 3 | Stack size: 0
						-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
							-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 2
							<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
						<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 3 | Index: 2
						-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef934 | Begin: 0 | Index: 0
						<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 3 | Stack size: 0
					<<-- "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" |
				<<-- "bool User::Equation::parse(std::__cxx11::string)" | Token array size: 3 | Token tree size: 3
				TOKEN0
				TOKEN1
				TOKEN2
				-->> "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" | Index: 0
					-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa54 | Begin: 1 | Index: 0
					<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 0 | Stack size: 1
					-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
					<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 3 | Stack size: 0
					-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
						-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 0
							Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 0 | Depth: 1
							Found children || Index 2 | Own Index: 2 | Father Index: 0 | Own Priority 1 | Children: 0 | Depth: 1
						<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
					<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 1 | Index: 0
					-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
					<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 3 | Stack size: 0
					-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
						-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 1
						<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
					<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 2 | Index: 1
					-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
					<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 3 | Stack size: 0
					-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
						-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 2
						<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
					<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 3 | Index: 2
					-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
					<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 3 | Stack size: 0
				<<-- "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" |
				-->> "User::Tree<Payload>::Tree(std::vector<User::Tree<Payload>::St_minimal_node>) [with Payload = User::Equation::Token]" | This: 007efc40 | Nodes: 3
					-->> "bool User::Tree<Payload>::init_class_vars(Payload) [with Payload = User::Equation::Token]" |
					<<-- "bool User::Tree<Payload>::init_class_vars(Payload) [with Payload = User::Equation::Token]" |
					-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
					<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 0 | Own Index: 1 | Nodes under Father: 2
					-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
					<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 0 | Own Index: 2 | Nodes under Father: 3
					-->> "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" | Index: 0
						-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa54 | Begin: 1 | Index: 0
						<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 0 | Stack size: 1
						-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
						<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 3 | Stack size: 0
						-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
							-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 0
								Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 0 | Depth: 1
								Found children || Index 2 | Own Index: 2 | Father Index: 0 | Own Priority 1 | Children: 0 | Depth: 1
							<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
						<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 1 | Index: 0
						-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
						<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 3 | Stack size: 0
						-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
							-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 1
							<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
						<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 2 | Index: 1
						-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
						<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 3 | Stack size: 0
						-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
							-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 2
							<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
						<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 3 | Index: 2
						-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
						<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 3 | Stack size: 0
					<<-- "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::operator==(User::Tree<Payload>&) [with Payload = User::Equation::Token]" |
						-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef9cc | Begin: 1 | Index: 0
						<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 0 | Stack size: 1
						-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef99c | Begin: 1 | Index: 0
						<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 0 | Stack size: 1
						-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef9fc | Begin: 0 | Index: 0
						<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 3 | Stack size: 0
						-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa2c | Begin: 0 | Index: 0
						<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 3 | Stack size: 0
						-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
							-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 0
								Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 0 | Depth: 1
								Found children || Index 2 | Own Index: 2 | Father Index: 0 | Own Priority 1 | Children: 0 | Depth: 1
							<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
						<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 1 | Index: 0
						-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
							-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 0
								Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 0 | Depth: 1
								Found children || Index 2 | Own Index: 2 | Father Index: 0 | Own Priority 1 | Children: 0 | Depth: 1
							<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
						<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 1 | Index: 0
						-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef9fc | Begin: 0 | Index: 0
						<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 3 | Stack size: 0
						-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa2c | Begin: 0 | Index: 0
						<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 3 | Stack size: 0
						-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
							-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 1
							<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
						<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 2 | Index: 1
						-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
							-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 1
							<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
						<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 2 | Index: 1
						-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef9fc | Begin: 0 | Index: 0
						<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 3 | Stack size: 0
						-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa2c | Begin: 0 | Index: 0
						<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 3 | Stack size: 0
						-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
							-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 2
							<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
						<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 3 | Index: 2
						-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
							-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 2
							<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
						<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 3 | Index: 2
						-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef9fc | Begin: 0 | Index: 0
						<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 3 | Stack size: 0
						-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa2c | Begin: 0 | Index: 0
						<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 3 | Stack size: 0
					<<-- "bool User::Tree<Payload>::operator==(User::Tree<Payload>&) [with Payload = User::Equation::Token]" | Same
					-->> "static bool User::Equation::convert_token_tree_to_array(User::Tree<User::Equation::Token>&, std::vector<User::Equation::Token>&)" |
						-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" | Object: 007efd18, Index: 0
						<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" |
						-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa30 | Begin: 1 | Index: 0
						<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 0 | Stack size: 1
						-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa60 | Begin: 0 | Index: 0
						<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 3 | Stack size: 0
						Token:  = | Type: 2 | Priority: 0
						-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
							-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 0
								Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 0 | Depth: 1
								Found children || Index 2 | Own Index: 2 | Father Index: 0 | Own Priority 1 | Children: 0 | Depth: 1
							<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
						<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 1 | Index: 0
						-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa60 | Begin: 0 | Index: 0
						<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 3 | Stack size: 0
						Token:  1 | Type: 0 | Priority: 0
						-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
							-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 1
							<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
						<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 2 | Index: 1
						-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa60 | Begin: 0 | Index: 0
						<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 3 | Stack size: 0
						Token:  1 | Type: 0 | Priority: 0
						-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
							-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 2
							<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
						<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 3 | Index: 2
						-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa60 | Begin: 0 | Index: 0
						<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 3 | Stack size: 0
					<<-- "static bool User::Equation::convert_token_tree_to_array(User::Tree<User::Equation::Token>&, std::vector<User::Equation::Token>&)" |
					PASS pattern: 7
					-->> "User::Tree<Payload>::~Tree() [with Payload = User::Equation::Token]" | This: 007efc40
					<<-- "User::Tree<Payload>::~Tree() [with Payload = User::Equation::Token]" |
					-->> "User::Tree<Payload>::~Tree() [with Payload = User::Equation::Token]" | This: 007efbf4
					<<-- "User::Tree<Payload>::~Tree() [with Payload = User::Equation::Token]" |
					PATTERN8 >3/2=1.5000000000<
					-->> "bool User::Equation::parse(std::__cxx11::string)" | Parse: 3/2=1.5000000000 | Size: 16
						-->> "static bool User::Equation::equation_to_token_array(std::__cxx11::string, std::vector<std::__cxx11::basic_string<char> >&, std::vector<User::Equation::Token>&)" | Parse: 3/2=1.5000000000 | Size: 16
							SEEK_NEXT_TOKEN | Decode: >>3<<
							TOKEN_NUMBER | Decode: >>/<<
							Token fully decoded:  3 | type: 0 | size: 1
							Tokens decoded: 1
							SEEK_NEXT_TOKEN | Decode: >>/<<
							-->> "static bool User::Equation::is_symbol(char)" | Digit: >>/<<
							<<-- "static bool User::Equation::is_symbol(char)" | N
							-->> "static bool User::Equation::is_operator(char)" | Digit: >>/<<
							<<-- "static bool User::Equation::is_operator(char)" | Y
							Operator detected: >>/<< | Token: /
							Token fully decoded:  / | type: 2 | size: 1
							Tokens decoded: 2
							SEEK_NEXT_TOKEN | Decode: >>2<<
							TOKEN_NUMBER | Decode: >>=<<
							Token fully decoded:  2 | type: 0 | size: 1
							Tokens decoded: 3
							SEEK_NEXT_TOKEN | Decode: >>=<<
							-->> "static bool User::Equation::is_symbol(char)" | Digit: >>=<<
							<<-- "static bool User::Equation::is_symbol(char)" | N
							-->> "static bool User::Equation::is_operator(char)" | Digit: >>=<<
							<<-- "static bool User::Equation::is_operator(char)" | Y
							Operator detected: >>=<< | Token: =
							Token fully decoded:  = | type: 2 | size: 1
							Tokens decoded: 4
							SEEK_NEXT_TOKEN | Decode: >>1<<
							TOKEN_NUMBER | Decode: >>.<<
							TOKEN_NUMBER | Decode: >>5<<
							TOKEN_NUMBER | Decode: >>0<<
							TOKEN_NUMBER | Decode: >>0<<
							TOKEN_NUMBER | Decode: >>0<<
							TOKEN_NUMBER | Decode: >>0<<
							TOKEN_NUMBER | Decode: >>0<<
							TOKEN_NUMBER | Decode: >>0<<
							TOKEN_NUMBER | Decode: >>0<<
							TOKEN_NUMBER | Decode: >>0<<
							TOKEN_NUMBER | Decode: >>0<<
							Token fully decoded:  1.5000000000 | type: 0 | size: 12
							Tokens decoded: 5
							Equations decoded into 5 tokens
							Token: >>3<< | Type: 0 | Size: 1
							Token: >>/<< | Type: 2 | Size: 1
							Token: >>2<< | Type: 0 | Size: 1
							Token: >>=<< | Type: 2 | Size: 1
							Token: >>1.5000000000<< | Type: 0 | Size: 12
						<<-- "static bool User::Equation::equation_to_token_array(std::__cxx11::string, std::vector<std::__cxx11::basic_string<char> >&, std::vector<User::Equation::Token>&)" | Decoded 5 tokens
						Tree wasn't empty: 3 | FLUSH
						-->> "bool User::Tree<Payload>::flush() [with Payload = User::Equation::Token]" | Nodes inside the tree: 3
							-->> "bool User::Tree<Payload>::init_root() [with Payload = User::Equation::Token]" |
							<<-- "bool User::Tree<Payload>::init_root() [with Payload = User::Equation::Token]" |
						<<-- "bool User::Tree<Payload>::flush() [with Payload = User::Equation::Token]" | Nodes inside the tree: 1
						-->> "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | Token Array Size: 5 | Father 0
							-->> "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 5
								Token   0 | >3< | Open Close Priority: 0 | Symbol Priority 5 
								Token   1 | >/< | Open Close Priority: 0 | Symbol Priority 2 
								Token   2 | >2< | Open Close Priority: 0 | Symbol Priority 5 
								Token   3 | >=< | Open Close Priority: 0 | Symbol Priority 0 
								Token   4 | >1.5000000000< | Open Close Priority: 0 | Symbol Priority 5 
								Candidate   0 | >3< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Default
								Candidate   1 | >/< | Open Close Priority 0 | Symbol Priority 2 | Min Priority 0
								Ignore   2 | >2< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Best Priority 2
								Candidate   3 | >=< | Open Close Priority 0 | Symbol Priority 0 | Min Priority 0
								Ignore   4 | >1.5000000000< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Best Priority 0
								Token   3 | >=< | Highest priority token
							<<-- "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 5 | Highest Priority Token: <=> | 0 0
							Core Token: >=< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 0
							LHS: >3<
							LHS: >/<
							LHS: >2<
							RHS: >1.5000000000<
							LHS Tokens: 3 | RHS Tokens: 1
							ROOT: >=<
							-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" | Object: 007efd18, Index: 0
							<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" |
							LHS: >=<
							-->> "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | Token Array Size: 3 | Father 0
								-->> "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 3
									Token   0 | >3< | Open Close Priority: 0 | Symbol Priority 5 
									Token   1 | >/< | Open Close Priority: 0 | Symbol Priority 2 
									Token   2 | >2< | Open Close Priority: 0 | Symbol Priority 5 
									Candidate   0 | >3< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Default
									Candidate   1 | >/< | Open Close Priority 0 | Symbol Priority 2 | Min Priority 0
									Ignore   2 | >2< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Best Priority 2
									Token   1 | >/< | Highest priority token
								<<-- "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 3 | Highest Priority Token: </> | 0 2
								Core Token: >/< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 2
								LHS: >3<
								RHS: >2<
								LHS Tokens: 1 | RHS Tokens: 1
								-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" | Object: 007efd18, Index: 0
								<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" |
								-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
								<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 0 | Own Index: 1 | Nodes under Father: 2
								-->> "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | Token Array Size: 1 | Father 1
									-->> "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1
										Token   0 | >3< | Open Close Priority: 0 | Symbol Priority 5 
										Candidate   0 | >3< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Default
										Token   0 | >3< | Highest priority token
									<<-- "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1 | Highest Priority Token: <3> | 0 5
									Core Token: >3< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 5
									LHS Tokens: 0 | RHS Tokens: 0
									-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
									<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 1 | Own Index: 2 | Nodes under Father: 2
								<<-- "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | PASS
								LHS of size 1 under father 1
								-->> "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | Token Array Size: 1 | Father 1
									-->> "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1
										Token   0 | >2< | Open Close Priority: 0 | Symbol Priority 5 
										Candidate   0 | >2< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Default
										Token   0 | >2< | Highest priority token
									<<-- "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1 | Highest Priority Token: <2> | 0 5
									Core Token: >2< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 5
									LHS Tokens: 0 | RHS Tokens: 0
									-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
									<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 1 | Own Index: 3 | Nodes under Father: 3
								<<-- "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | PASS
								RHS of size 1 under father 1
							<<-- "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | PASS
							LHS of size 3 under father 0
							-->> "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | Token Array Size: 1 | Father 0
								-->> "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1
									Token   0 | >1.5000000000< | Open Close Priority: 0 | Symbol Priority 5 
									Candidate   0 | >1.5000000000< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Default
									Token   0 | >1.5000000000< | Highest priority token
								<<-- "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1 | Highest Priority Token: <1.5000000000> | 0 5
								Core Token: >1.5000000000< | Size: 12 | Open/Close Priority: 0 | Symbol Priority: 5
								LHS Tokens: 0 | RHS Tokens: 0
								-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
								<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 0 | Own Index: 4 | Nodes under Father: 3
							<<-- "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | PASS
							RHS of size 1 under father 0
						<<-- "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | PASS
						-->> "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" | Index: 0
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef904 | Begin: 1 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 0 | Stack size: 1
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef934 | Begin: 0 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
							-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
								-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 0
									Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 2 | Depth: 1
									Found children || Index 4 | Own Index: 4 | Father Index: 0 | Own Priority 1 | Children: 0 | Depth: 1
								<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
							<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 1 | Index: 0
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef934 | Begin: 0 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
							-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
								-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 1
									Found children || Index 2 | Own Index: 2 | Father Index: 1 | Own Priority 0 | Children: 0 | Depth: 2
									Found children || Index 3 | Own Index: 3 | Father Index: 1 | Own Priority 1 | Children: 0 | Depth: 2
								<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
							<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 2 | Index: 1
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef934 | Begin: 0 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
							-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
								-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 2
								<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
							<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 3 | Index: 2
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef934 | Begin: 0 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
							-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
								-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 3
								<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
							<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 4 | Index: 3
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef934 | Begin: 0 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
							-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
								-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 4
								<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
							<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Index: 4
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef934 | Begin: 0 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
						<<-- "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" |
					<<-- "bool User::Equation::parse(std::__cxx11::string)" | Token array size: 5 | Token tree size: 5
					TOKEN0
					TOKEN1
					TOKEN2
					TOKEN3
					TOKEN4
					-->> "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" | Index: 0
						-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa54 | Begin: 1 | Index: 0
						<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 0 | Stack size: 1
						-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
						<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
						-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
							-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 0
								Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 2 | Depth: 1
								Found children || Index 4 | Own Index: 4 | Father Index: 0 | Own Priority 1 | Children: 0 | Depth: 1
							<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
						<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 1 | Index: 0
						-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
						<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
						-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
							-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 1
								Found children || Index 2 | Own Index: 2 | Father Index: 1 | Own Priority 0 | Children: 0 | Depth: 2
								Found children || Index 3 | Own Index: 3 | Father Index: 1 | Own Priority 1 | Children: 0 | Depth: 2
							<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
						<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 2 | Index: 1
						-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
						<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
						-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
							-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 2
							<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
						<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 3 | Index: 2
						-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
						<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
						-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
							-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 3
							<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
						<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 4 | Index: 3
						-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
						<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
						-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
							-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 4
							<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
						<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Index: 4
						-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
						<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
					<<-- "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "User::Tree<Payload>::Tree(std::vector<User::Tree<Payload>::St_minimal_node>) [with Payload = User::Equation::Token]" | This: 007efc40 | Nodes: 5
						-->> "bool User::Tree<Payload>::init_class_vars(Payload) [with Payload = User::Equation::Token]" |
						<<-- "bool User::Tree<Payload>::init_class_vars(Payload) [with Payload = User::Equation::Token]" |
						-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
						<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 0 | Own Index: 1 | Nodes under Father: 2
						-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
						<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 0 | Own Index: 2 | Nodes under Father: 3
						-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
						<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 1 | Own Index: 3 | Nodes under Father: 2
						-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
						<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 1 | Own Index: 4 | Nodes under Father: 3
						-->> "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" | Index: 0
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa54 | Begin: 1 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 0 | Stack size: 1
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
							-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
								-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 0
									Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 2 | Depth: 1
									Found children || Index 2 | Own Index: 2 | Father Index: 0 | Own Priority 1 | Children: 0 | Depth: 1
								<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
							<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 1 | Index: 0
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
							-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
								-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 1
									Found children || Index 3 | Own Index: 3 | Father Index: 1 | Own Priority 0 | Children: 0 | Depth: 2
									Found children || Index 4 | Own Index: 4 | Father Index: 1 | Own Priority 1 | Children: 0 | Depth: 2
								<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
							<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 2 | Index: 1
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
							-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
								-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 3
								<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
							<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 3 | Index: 3
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
							-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
								-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 4
								<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
							<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 4 | Index: 4
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
							-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
								-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 2
								<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
							<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Index: 2
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
						<<-- "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" |
						-->> "bool User::Tree<Payload>::operator==(User::Tree<Payload>&) [with Payload = User::Equation::Token]" |
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef9cc | Begin: 1 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 0 | Stack size: 1
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef99c | Begin: 1 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 0 | Stack size: 1
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef9fc | Begin: 0 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa2c | Begin: 0 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
							-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
								-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 0
									Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 2 | Depth: 1
									Found children || Index 4 | Own Index: 4 | Father Index: 0 | Own Priority 1 | Children: 0 | Depth: 1
								<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
							<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 1 | Index: 0
							-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
								-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 0
									Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 2 | Depth: 1
									Found children || Index 2 | Own Index: 2 | Father Index: 0 | Own Priority 1 | Children: 0 | Depth: 1
								<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
							<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 1 | Index: 0
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef9fc | Begin: 0 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa2c | Begin: 0 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
							-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
								-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 1
									Found children || Index 2 | Own Index: 2 | Father Index: 1 | Own Priority 0 | Children: 0 | Depth: 2
									Found children || Index 3 | Own Index: 3 | Father Index: 1 | Own Priority 1 | Children: 0 | Depth: 2
								<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
							<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 2 | Index: 1
							-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
								-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 1
									Found children || Index 3 | Own Index: 3 | Father Index: 1 | Own Priority 0 | Children: 0 | Depth: 2
									Found children || Index 4 | Own Index: 4 | Father Index: 1 | Own Priority 1 | Children: 0 | Depth: 2
								<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
							<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 2 | Index: 1
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef9fc | Begin: 0 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa2c | Begin: 0 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
							-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
								-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 2
								<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
							<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 3 | Index: 2
							-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
								-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 3
								<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
							<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 3 | Index: 3
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef9fc | Begin: 0 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa2c | Begin: 0 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
							-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
								-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 3
								<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
							<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 4 | Index: 3
							-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
								-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 4
								<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
							<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 4 | Index: 4
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef9fc | Begin: 0 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa2c | Begin: 0 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
							-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
								-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 4
								<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
							<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Index: 4
							-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
								-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 2
								<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
							<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Index: 2
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef9fc | Begin: 0 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa2c | Begin: 0 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
						<<-- "bool User::Tree<Payload>::operator==(User::Tree<Payload>&) [with Payload = User::Equation::Token]" | Same
						-->> "static bool User::Equation::convert_token_tree_to_array(User::Tree<User::Equation::Token>&, std::vector<User::Equation::Token>&)" |
							-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" | Object: 007efd18, Index: 0
							<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" |
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa30 | Begin: 1 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 0 | Stack size: 1
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa60 | Begin: 0 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
							Token:  = | Type: 2 | Priority: 0
							-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
								-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 0
									Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 2 | Depth: 1
									Found children || Index 4 | Own Index: 4 | Father Index: 0 | Own Priority 1 | Children: 0 | Depth: 1
								<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
							<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 1 | Index: 0
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa60 | Begin: 0 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
							Token:  / | Type: 2 | Priority: 0
							-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
								-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 1
									Found children || Index 2 | Own Index: 2 | Father Index: 1 | Own Priority 0 | Children: 0 | Depth: 2
									Found children || Index 3 | Own Index: 3 | Father Index: 1 | Own Priority 1 | Children: 0 | Depth: 2
								<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
							<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 2 | Index: 1
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa60 | Begin: 0 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
							Token:  3 | Type: 0 | Priority: 0
							-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
								-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 2
								<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
							<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 3 | Index: 2
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa60 | Begin: 0 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
							Token:  2 | Type: 0 | Priority: 0
							-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
								-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 3
								<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
							<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 4 | Index: 3
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa60 | Begin: 0 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
							Token:  1.5000000000 | Type: 0 | Priority: 0
							-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
								-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 4
								<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
							<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Index: 4
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa60 | Begin: 0 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
						<<-- "static bool User::Equation::convert_token_tree_to_array(User::Tree<User::Equation::Token>&, std::vector<User::Equation::Token>&)" |
						PASS pattern: 8
						-->> "User::Tree<Payload>::~Tree() [with Payload = User::Equation::Token]" | This: 007efc40
						<<-- "User::Tree<Payload>::~Tree() [with Payload = User::Equation::Token]" |
						-->> "User::Tree<Payload>::~Tree() [with Payload = User::Equation::Token]" | This: 007efbf4
						<<-- "User::Tree<Payload>::~Tree() [with Payload = User::Equation::Token]" |
						PATTERN9 >5=2+3<
						-->> "bool User::Equation::parse(std::__cxx11::string)" | Parse: 5=2+3 | Size: 5
							-->> "static bool User::Equation::equation_to_token_array(std::__cxx11::string, std::vector<std::__cxx11::basic_string<char> >&, std::vector<User::Equation::Token>&)" | Parse: 5=2+3 | Size: 5
								SEEK_NEXT_TOKEN | Decode: >>5<<
								TOKEN_NUMBER | Decode: >>=<<
								Token fully decoded:  5 | type: 0 | size: 1
								Tokens decoded: 1
								SEEK_NEXT_TOKEN | Decode: >>=<<
								-->> "static bool User::Equation::is_symbol(char)" | Digit: >>=<<
								<<-- "static bool User::Equation::is_symbol(char)" | N
								-->> "static bool User::Equation::is_operator(char)" | Digit: >>=<<
								<<-- "static bool User::Equation::is_operator(char)" | Y
								Operator detected: >>=<< | Token: =
								Token fully decoded:  = | type: 2 | size: 1
								Tokens decoded: 2
								SEEK_NEXT_TOKEN | Decode: >>2<<
								TOKEN_NUMBER | Decode: >>+<<
								Token fully decoded:  2 | type: 0 | size: 1
								Tokens decoded: 3
								SEEK_NEXT_TOKEN | Decode: >>+<<
								-->> "static bool User::Equation::is_symbol(char)" | Digit: >>+<<
								<<-- "static bool User::Equation::is_symbol(char)" | N
								-->> "static bool User::Equation::is_operator(char)" | Digit: >>+<<
								<<-- "static bool User::Equation::is_operator(char)" | Y
								Operator detected: >>+<< | Token: +
								Token fully decoded:  + | type: 2 | size: 1
								Tokens decoded: 4
								SEEK_NEXT_TOKEN | Decode: >>3<<
								Token fully decoded:  3 | type: 0 | size: 1
								Tokens decoded: 5
								Equations decoded into 5 tokens
								Token: >>5<< | Type: 0 | Size: 1
								Token: >>=<< | Type: 2 | Size: 1
								Token: >>2<< | Type: 0 | Size: 1
								Token: >>+<< | Type: 2 | Size: 1
								Token: >>3<< | Type: 0 | Size: 1
							<<-- "static bool User::Equation::equation_to_token_array(std::__cxx11::string, std::vector<std::__cxx11::basic_string<char> >&, std::vector<User::Equation::Token>&)" | Decoded 5 tokens
							Tree wasn't empty: 5 | FLUSH
							-->> "bool User::Tree<Payload>::flush() [with Payload = User::Equation::Token]" | Nodes inside the tree: 5
								-->> "bool User::Tree<Payload>::init_root() [with Payload = User::Equation::Token]" |
								<<-- "bool User::Tree<Payload>::init_root() [with Payload = User::Equation::Token]" |
							<<-- "bool User::Tree<Payload>::flush() [with Payload = User::Equation::Token]" | Nodes inside the tree: 1
							-->> "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | Token Array Size: 5 | Father 0
								-->> "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 5
									Token   0 | >5< | Open Close Priority: 0 | Symbol Priority 5 
									Token   1 | >=< | Open Close Priority: 0 | Symbol Priority 0 
									Token   2 | >2< | Open Close Priority: 0 | Symbol Priority 5 
									Token   3 | >+< | Open Close Priority: 0 | Symbol Priority 3 
									Token   4 | >3< | Open Close Priority: 0 | Symbol Priority 5 
									Candidate   0 | >5< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Default
									Candidate   1 | >=< | Open Close Priority 0 | Symbol Priority 0 | Min Priority 0
									Ignore   2 | >2< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Best Priority 0
									Ignore   3 | >+< | Open Close Priority 0 | Symbol Priority 3 | Min Priority 0 | Best Priority 0
									Ignore   4 | >3< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Best Priority 0
									Token   1 | >=< | Highest priority token
								<<-- "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 5 | Highest Priority Token: <=> | 0 0
								Core Token: >=< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 0
								LHS: >5<
								RHS: >2<
								RHS: >+<
								RHS: >3<
								LHS Tokens: 1 | RHS Tokens: 3
								ROOT: >=<
								-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" | Object: 007efd18, Index: 0
								<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" |
								LHS: >=<
								-->> "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | Token Array Size: 1 | Father 0
									-->> "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1
										Token   0 | >5< | Open Close Priority: 0 | Symbol Priority 5 
										Candidate   0 | >5< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Default
										Token   0 | >5< | Highest priority token
									<<-- "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1 | Highest Priority Token: <5> | 0 5
									Core Token: >5< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 5
									LHS Tokens: 0 | RHS Tokens: 0
									-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" | Object: 007efd18, Index: 0
									<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
									<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 0 | Own Index: 1 | Nodes under Father: 2
								<<-- "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | PASS
								LHS of size 1 under father 0
								-->> "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | Token Array Size: 3 | Father 0
									-->> "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 3
										Token   0 | >2< | Open Close Priority: 0 | Symbol Priority 5 
										Token   1 | >+< | Open Close Priority: 0 | Symbol Priority 3 
										Token   2 | >3< | Open Close Priority: 0 | Symbol Priority 5 
										Candidate   0 | >2< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Default
										Candidate   1 | >+< | Open Close Priority 0 | Symbol Priority 3 | Min Priority 0
										Ignore   2 | >3< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Best Priority 3
										Token   1 | >+< | Highest priority token
									<<-- "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 3 | Highest Priority Token: <+> | 0 3
									Core Token: >+< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 3
									LHS: >2<
									RHS: >3<
									LHS Tokens: 1 | RHS Tokens: 1
									-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
									<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 0 | Own Index: 2 | Nodes under Father: 3
									-->> "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | Token Array Size: 1 | Father 2
										-->> "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1
											Token   0 | >2< | Open Close Priority: 0 | Symbol Priority 5 
											Candidate   0 | >2< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Default
											Token   0 | >2< | Highest priority token
										<<-- "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1 | Highest Priority Token: <2> | 0 5
										Core Token: >2< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 5
										LHS Tokens: 0 | RHS Tokens: 0
										-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
										<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 2 | Own Index: 3 | Nodes under Father: 2
									<<-- "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | PASS
									LHS of size 1 under father 2
									-->> "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | Token Array Size: 1 | Father 2
										-->> "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1
											Token   0 | >3< | Open Close Priority: 0 | Symbol Priority 5 
											Candidate   0 | >3< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Default
											Token   0 | >3< | Highest priority token
										<<-- "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1 | Highest Priority Token: <3> | 0 5
										Core Token: >3< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 5
										LHS Tokens: 0 | RHS Tokens: 0
										-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
										<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 2 | Own Index: 4 | Nodes under Father: 3
									<<-- "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | PASS
									RHS of size 1 under father 2
								<<-- "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | PASS
								RHS of size 3 under father 0
							<<-- "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | PASS
							-->> "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" | Index: 0
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef904 | Begin: 1 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 0 | Stack size: 1
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef934 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 0
										Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 0 | Depth: 1
										Found children || Index 2 | Own Index: 2 | Father Index: 0 | Own Priority 1 | Children: 2 | Depth: 1
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 1 | Index: 0
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef934 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 1
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 2 | Index: 1
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef934 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 2
										Found children || Index 3 | Own Index: 3 | Father Index: 2 | Own Priority 0 | Children: 0 | Depth: 2
										Found children || Index 4 | Own Index: 4 | Father Index: 2 | Own Priority 1 | Children: 0 | Depth: 2
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 3 | Index: 2
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef934 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 3
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 4 | Index: 3
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef934 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 4
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Index: 4
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef934 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
							<<-- "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" |
						<<-- "bool User::Equation::parse(std::__cxx11::string)" | Token array size: 5 | Token tree size: 5
						TOKEN0
						TOKEN1
						TOKEN2
						TOKEN3
						TOKEN4
						-->> "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" | Index: 0
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa54 | Begin: 1 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 0 | Stack size: 1
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
							-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
								-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 0
									Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 0 | Depth: 1
									Found children || Index 2 | Own Index: 2 | Father Index: 0 | Own Priority 1 | Children: 2 | Depth: 1
								<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
							<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 1 | Index: 0
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
							-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
								-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 1
								<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
							<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 2 | Index: 1
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
							-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
								-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 2
									Found children || Index 3 | Own Index: 3 | Father Index: 2 | Own Priority 0 | Children: 0 | Depth: 2
									Found children || Index 4 | Own Index: 4 | Father Index: 2 | Own Priority 1 | Children: 0 | Depth: 2
								<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
							<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 3 | Index: 2
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
							-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
								-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 3
								<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
							<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 4 | Index: 3
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
							-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
								-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 4
								<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
							<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Index: 4
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
						<<-- "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" |
						-->> "User::Tree<Payload>::Tree(std::vector<User::Tree<Payload>::St_minimal_node>) [with Payload = User::Equation::Token]" | This: 007efc40 | Nodes: 5
							-->> "bool User::Tree<Payload>::init_class_vars(Payload) [with Payload = User::Equation::Token]" |
							<<-- "bool User::Tree<Payload>::init_class_vars(Payload) [with Payload = User::Equation::Token]" |
							-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
							<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 0 | Own Index: 1 | Nodes under Father: 2
							-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
							<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 0 | Own Index: 2 | Nodes under Father: 3
							-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
							<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 2 | Own Index: 3 | Nodes under Father: 2
							-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
							<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 2 | Own Index: 4 | Nodes under Father: 3
							-->> "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" | Index: 0
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa54 | Begin: 1 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 0 | Stack size: 1
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 0
										Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 0 | Depth: 1
										Found children || Index 2 | Own Index: 2 | Father Index: 0 | Own Priority 1 | Children: 2 | Depth: 1
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 1 | Index: 0
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 1
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 2 | Index: 1
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 2
										Found children || Index 3 | Own Index: 3 | Father Index: 2 | Own Priority 0 | Children: 0 | Depth: 2
										Found children || Index 4 | Own Index: 4 | Father Index: 2 | Own Priority 1 | Children: 0 | Depth: 2
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 3 | Index: 2
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 3
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 4 | Index: 3
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 4
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Index: 4
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
							<<-- "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" |
							-->> "bool User::Tree<Payload>::operator==(User::Tree<Payload>&) [with Payload = User::Equation::Token]" |
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef9cc | Begin: 1 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 0 | Stack size: 1
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef99c | Begin: 1 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 0 | Stack size: 1
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef9fc | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa2c | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 0
										Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 0 | Depth: 1
										Found children || Index 2 | Own Index: 2 | Father Index: 0 | Own Priority 1 | Children: 2 | Depth: 1
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 1 | Index: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 0
										Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 0 | Depth: 1
										Found children || Index 2 | Own Index: 2 | Father Index: 0 | Own Priority 1 | Children: 2 | Depth: 1
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 1 | Index: 0
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef9fc | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa2c | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 1
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 2 | Index: 1
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 1
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 2 | Index: 1
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef9fc | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa2c | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 2
										Found children || Index 3 | Own Index: 3 | Father Index: 2 | Own Priority 0 | Children: 0 | Depth: 2
										Found children || Index 4 | Own Index: 4 | Father Index: 2 | Own Priority 1 | Children: 0 | Depth: 2
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 3 | Index: 2
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 2
										Found children || Index 3 | Own Index: 3 | Father Index: 2 | Own Priority 0 | Children: 0 | Depth: 2
										Found children || Index 4 | Own Index: 4 | Father Index: 2 | Own Priority 1 | Children: 0 | Depth: 2
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 3 | Index: 2
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef9fc | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa2c | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 3
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 4 | Index: 3
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 3
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 4 | Index: 3
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef9fc | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa2c | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 4
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Index: 4
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 4
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Index: 4
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef9fc | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa2c | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
							<<-- "bool User::Tree<Payload>::operator==(User::Tree<Payload>&) [with Payload = User::Equation::Token]" | Same
							-->> "static bool User::Equation::convert_token_tree_to_array(User::Tree<User::Equation::Token>&, std::vector<User::Equation::Token>&)" |
								-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" | Object: 007efd18, Index: 0
								<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" |
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa30 | Begin: 1 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 0 | Stack size: 1
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa60 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
								Token:  = | Type: 2 | Priority: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 0
										Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 0 | Depth: 1
										Found children || Index 2 | Own Index: 2 | Father Index: 0 | Own Priority 1 | Children: 2 | Depth: 1
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 1 | Index: 0
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa60 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
								Token:  5 | Type: 0 | Priority: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 1
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 2 | Index: 1
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa60 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
								Token:  + | Type: 2 | Priority: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 2
										Found children || Index 3 | Own Index: 3 | Father Index: 2 | Own Priority 0 | Children: 0 | Depth: 2
										Found children || Index 4 | Own Index: 4 | Father Index: 2 | Own Priority 1 | Children: 0 | Depth: 2
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 3 | Index: 2
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa60 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
								Token:  2 | Type: 0 | Priority: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 3
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 4 | Index: 3
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa60 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
								Token:  3 | Type: 0 | Priority: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 4
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Index: 4
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa60 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
							<<-- "static bool User::Equation::convert_token_tree_to_array(User::Tree<User::Equation::Token>&, std::vector<User::Equation::Token>&)" |
							PASS pattern: 9
							-->> "User::Tree<Payload>::~Tree() [with Payload = User::Equation::Token]" | This: 007efc40
							<<-- "User::Tree<Payload>::~Tree() [with Payload = User::Equation::Token]" |
							-->> "User::Tree<Payload>::~Tree() [with Payload = User::Equation::Token]" | This: 007efbf4
							<<-- "User::Tree<Payload>::~Tree() [with Payload = User::Equation::Token]" |
							PATTERN10 >A+B+C=a+b+c<
							-->> "bool User::Equation::parse(std::__cxx11::string)" | Parse: A+B+C=a+b+c | Size: 11
								-->> "static bool User::Equation::equation_to_token_array(std::__cxx11::string, std::vector<std::__cxx11::basic_string<char> >&, std::vector<User::Equation::Token>&)" | Parse: A+B+C=a+b+c | Size: 11
									SEEK_NEXT_TOKEN | Decode: >>A<<
									-->> "static bool User::Equation::is_symbol(char)" | Digit: >>A<<
									<<-- "static bool User::Equation::is_symbol(char)" | Y
									TOKEN_SYMBOL | Decode: >>+<<
									-->> "static bool User::Equation::is_symbol(char)" | Digit: >>+<<
									<<-- "static bool User::Equation::is_symbol(char)" | N
									Token fully decoded:  A | type: 1 | size: 1
									Tokens decoded: 1
									SEEK_NEXT_TOKEN | Decode: >>+<<
									-->> "static bool User::Equation::is_symbol(char)" | Digit: >>+<<
									<<-- "static bool User::Equation::is_symbol(char)" | N
									-->> "static bool User::Equation::is_operator(char)" | Digit: >>+<<
									<<-- "static bool User::Equation::is_operator(char)" | Y
									Operator detected: >>+<< | Token: +
									Token fully decoded:  + | type: 2 | size: 1
									Tokens decoded: 2
									SEEK_NEXT_TOKEN | Decode: >>B<<
									-->> "static bool User::Equation::is_symbol(char)" | Digit: >>B<<
									<<-- "static bool User::Equation::is_symbol(char)" | Y
									TOKEN_SYMBOL | Decode: >>+<<
									-->> "static bool User::Equation::is_symbol(char)" | Digit: >>+<<
									<<-- "static bool User::Equation::is_symbol(char)" | N
									Token fully decoded:  B | type: 1 | size: 1
									Tokens decoded: 3
									SEEK_NEXT_TOKEN | Decode: >>+<<
									-->> "static bool User::Equation::is_symbol(char)" | Digit: >>+<<
									<<-- "static bool User::Equation::is_symbol(char)" | N
									-->> "static bool User::Equation::is_operator(char)" | Digit: >>+<<
									<<-- "static bool User::Equation::is_operator(char)" | Y
									Operator detected: >>+<< | Token: +
									Token fully decoded:  + | type: 2 | size: 1
									Tokens decoded: 4
									SEEK_NEXT_TOKEN | Decode: >>C<<
									-->> "static bool User::Equation::is_symbol(char)" | Digit: >>C<<
									<<-- "static bool User::Equation::is_symbol(char)" | Y
									TOKEN_SYMBOL | Decode: >>=<<
									-->> "static bool User::Equation::is_symbol(char)" | Digit: >>=<<
									<<-- "static bool User::Equation::is_symbol(char)" | N
									Token fully decoded:  C | type: 1 | size: 1
									Tokens decoded: 5
									SEEK_NEXT_TOKEN | Decode: >>=<<
									-->> "static bool User::Equation::is_symbol(char)" | Digit: >>=<<
									<<-- "static bool User::Equation::is_symbol(char)" | N
									-->> "static bool User::Equation::is_operator(char)" | Digit: >>=<<
									<<-- "static bool User::Equation::is_operator(char)" | Y
									Operator detected: >>=<< | Token: =
									Token fully decoded:  = | type: 2 | size: 1
									Tokens decoded: 6
									SEEK_NEXT_TOKEN | Decode: >>a<<
									-->> "static bool User::Equation::is_symbol(char)" | Digit: >>a<<
									<<-- "static bool User::Equation::is_symbol(char)" | Y
									TOKEN_SYMBOL | Decode: >>+<<
									-->> "static bool User::Equation::is_symbol(char)" | Digit: >>+<<
									<<-- "static bool User::Equation::is_symbol(char)" | N
									Token fully decoded:  a | type: 1 | size: 1
									Tokens decoded: 7
									SEEK_NEXT_TOKEN | Decode: >>+<<
									-->> "static bool User::Equation::is_symbol(char)" | Digit: >>+<<
									<<-- "static bool User::Equation::is_symbol(char)" | N
									-->> "static bool User::Equation::is_operator(char)" | Digit: >>+<<
									<<-- "static bool User::Equation::is_operator(char)" | Y
									Operator detected: >>+<< | Token: +
									Token fully decoded:  + | type: 2 | size: 1
									Tokens decoded: 8
									SEEK_NEXT_TOKEN | Decode: >>b<<
									-->> "static bool User::Equation::is_symbol(char)" | Digit: >>b<<
									<<-- "static bool User::Equation::is_symbol(char)" | Y
									TOKEN_SYMBOL | Decode: >>+<<
									-->> "static bool User::Equation::is_symbol(char)" | Digit: >>+<<
									<<-- "static bool User::Equation::is_symbol(char)" | N
									Token fully decoded:  b | type: 1 | size: 1
									Tokens decoded: 9
									SEEK_NEXT_TOKEN | Decode: >>+<<
									-->> "static bool User::Equation::is_symbol(char)" | Digit: >>+<<
									<<-- "static bool User::Equation::is_symbol(char)" | N
									-->> "static bool User::Equation::is_operator(char)" | Digit: >>+<<
									<<-- "static bool User::Equation::is_operator(char)" | Y
									Operator detected: >>+<< | Token: +
									Token fully decoded:  + | type: 2 | size: 1
									Tokens decoded: 10
									SEEK_NEXT_TOKEN | Decode: >>c<<
									-->> "static bool User::Equation::is_symbol(char)" | Digit: >>c<<
									<<-- "static bool User::Equation::is_symbol(char)" | Y
									Token fully decoded:  c | type: 1 | size: 1
									Tokens decoded: 11
									Equations decoded into 11 tokens
									Token: >>A<< | Type: 1 | Size: 1
									Token: >>+<< | Type: 2 | Size: 1
									Token: >>B<< | Type: 1 | Size: 1
									Token: >>+<< | Type: 2 | Size: 1
									Token: >>C<< | Type: 1 | Size: 1
									Token: >>=<< | Type: 2 | Size: 1
									Token: >>a<< | Type: 1 | Size: 1
									Token: >>+<< | Type: 2 | Size: 1
									Token: >>b<< | Type: 1 | Size: 1
									Token: >>+<< | Type: 2 | Size: 1
									Token: >>c<< | Type: 1 | Size: 1
								<<-- "static bool User::Equation::equation_to_token_array(std::__cxx11::string, std::vector<std::__cxx11::basic_string<char> >&, std::vector<User::Equation::Token>&)" | Decoded 11 tokens
								Tree wasn't empty: 5 | FLUSH
								-->> "bool User::Tree<Payload>::flush() [with Payload = User::Equation::Token]" | Nodes inside the tree: 5
									-->> "bool User::Tree<Payload>::init_root() [with Payload = User::Equation::Token]" |
									<<-- "bool User::Tree<Payload>::init_root() [with Payload = User::Equation::Token]" |
								<<-- "bool User::Tree<Payload>::flush() [with Payload = User::Equation::Token]" | Nodes inside the tree: 1
								-->> "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | Token Array Size: 11 | Father 0
									-->> "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 11
										Token   0 | >A< | Open Close Priority: 0 | Symbol Priority 4 
										Token   1 | >+< | Open Close Priority: 0 | Symbol Priority 3 
										Token   2 | >B< | Open Close Priority: 0 | Symbol Priority 4 
										Token   3 | >+< | Open Close Priority: 0 | Symbol Priority 3 
										Token   4 | >C< | Open Close Priority: 0 | Symbol Priority 4 
										Token   5 | >=< | Open Close Priority: 0 | Symbol Priority 0 
										Token   6 | >a< | Open Close Priority: 0 | Symbol Priority 4 
										Token   7 | >+< | Open Close Priority: 0 | Symbol Priority 3 
										Token   8 | >b< | Open Close Priority: 0 | Symbol Priority 4 
										Token   9 | >+< | Open Close Priority: 0 | Symbol Priority 3 
										Token  10 | >c< | Open Close Priority: 0 | Symbol Priority 4 
										Candidate   0 | >A< | Open Close Priority 0 | Symbol Priority 4 | Min Priority 0 | Default
										Candidate   1 | >+< | Open Close Priority 0 | Symbol Priority 3 | Min Priority 0
										Ignore   2 | >B< | Open Close Priority 0 | Symbol Priority 4 | Min Priority 0 | Best Priority 3
										Ignore   3 | >+< | Open Close Priority 0 | Symbol Priority 3 | Min Priority 0 | Best Priority 3
										Ignore   4 | >C< | Open Close Priority 0 | Symbol Priority 4 | Min Priority 0 | Best Priority 3
										Candidate   5 | >=< | Open Close Priority 0 | Symbol Priority 0 | Min Priority 0
										Ignore   6 | >a< | Open Close Priority 0 | Symbol Priority 4 | Min Priority 0 | Best Priority 0
										Ignore   7 | >+< | Open Close Priority 0 | Symbol Priority 3 | Min Priority 0 | Best Priority 0
										Ignore   8 | >b< | Open Close Priority 0 | Symbol Priority 4 | Min Priority 0 | Best Priority 0
										Ignore   9 | >+< | Open Close Priority 0 | Symbol Priority 3 | Min Priority 0 | Best Priority 0
										Ignore  10 | >c< | Open Close Priority 0 | Symbol Priority 4 | Min Priority 0 | Best Priority 0
										Token   5 | >=< | Highest priority token
									<<-- "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 11 | Highest Priority Token: <=> | 0 0
									Core Token: >=< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 0
									LHS: >A<
									LHS: >+<
									LHS: >B<
									LHS: >+<
									LHS: >C<
									RHS: >a<
									RHS: >+<
									RHS: >b<
									RHS: >+<
									RHS: >c<
									LHS Tokens: 5 | RHS Tokens: 5
									ROOT: >=<
									-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" | Object: 007efd18, Index: 0
									<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" |
									LHS: >=<
									-->> "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | Token Array Size: 5 | Father 0
										-->> "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 5
											Token   0 | >A< | Open Close Priority: 0 | Symbol Priority 4 
											Token   1 | >+< | Open Close Priority: 0 | Symbol Priority 3 
											Token   2 | >B< | Open Close Priority: 0 | Symbol Priority 4 
											Token   3 | >+< | Open Close Priority: 0 | Symbol Priority 3 
											Token   4 | >C< | Open Close Priority: 0 | Symbol Priority 4 
											Candidate   0 | >A< | Open Close Priority 0 | Symbol Priority 4 | Min Priority 0 | Default
											Candidate   1 | >+< | Open Close Priority 0 | Symbol Priority 3 | Min Priority 0
											Ignore   2 | >B< | Open Close Priority 0 | Symbol Priority 4 | Min Priority 0 | Best Priority 3
											Ignore   3 | >+< | Open Close Priority 0 | Symbol Priority 3 | Min Priority 0 | Best Priority 3
											Ignore   4 | >C< | Open Close Priority 0 | Symbol Priority 4 | Min Priority 0 | Best Priority 3
											Token   1 | >+< | Highest priority token
										<<-- "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 5 | Highest Priority Token: <+> | 0 3
										Core Token: >+< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 3
										LHS: >A<
										RHS: >B<
										RHS: >+<
										RHS: >C<
										LHS Tokens: 1 | RHS Tokens: 3
										-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" | Object: 007efd18, Index: 0
										<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" |
										-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
										<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 0 | Own Index: 1 | Nodes under Father: 2
										-->> "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | Token Array Size: 1 | Father 1
											-->> "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1
												Token   0 | >A< | Open Close Priority: 0 | Symbol Priority 4 
												Candidate   0 | >A< | Open Close Priority 0 | Symbol Priority 4 | Min Priority 0 | Default
												Token   0 | >A< | Highest priority token
											<<-- "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1 | Highest Priority Token: <A> | 0 4
											Core Token: >A< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 4
											LHS Tokens: 0 | RHS Tokens: 0
											-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
											<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 1 | Own Index: 2 | Nodes under Father: 2
										<<-- "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | PASS
										LHS of size 1 under father 1
										-->> "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | Token Array Size: 3 | Father 1
											-->> "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 3
												Token   0 | >B< | Open Close Priority: 0 | Symbol Priority 4 
												Token   1 | >+< | Open Close Priority: 0 | Symbol Priority 3 
												Token   2 | >C< | Open Close Priority: 0 | Symbol Priority 4 
												Candidate   0 | >B< | Open Close Priority 0 | Symbol Priority 4 | Min Priority 0 | Default
												Candidate   1 | >+< | Open Close Priority 0 | Symbol Priority 3 | Min Priority 0
												Ignore   2 | >C< | Open Close Priority 0 | Symbol Priority 4 | Min Priority 0 | Best Priority 3
												Token   1 | >+< | Highest priority token
											<<-- "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 3 | Highest Priority Token: <+> | 0 3
											Core Token: >+< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 3
											LHS: >B<
											RHS: >C<
											LHS Tokens: 1 | RHS Tokens: 1
											-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
											<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 1 | Own Index: 3 | Nodes under Father: 3
											-->> "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | Token Array Size: 1 | Father 3
												-->> "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1
												Token   0 | >B< | Open Close Priority: 0 | Symbol Priority 4 
												Candidate   0 | >B< | Open Close Priority 0 | Symbol Priority 4 | Min Priority 0 | Default
												Token   0 | >B< | Highest priority token
											<<-- "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1 | Highest Priority Token: <B> | 0 4
											Core Token: >B< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 4
											LHS Tokens: 0 | RHS Tokens: 0
											-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
											<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 3 | Own Index: 4 | Nodes under Father: 2
										<<-- "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | PASS
										LHS of size 1 under father 3
										-->> "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | Token Array Size: 1 | Father 3
											-->> "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1
												Token   0 | >C< | Open Close Priority: 0 | Symbol Priority 4 
												Candidate   0 | >C< | Open Close Priority 0 | Symbol Priority 4 | Min Priority 0 | Default
												Token   0 | >C< | Highest priority token
											<<-- "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1 | Highest Priority Token: <C> | 0 4
											Core Token: >C< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 4
											LHS Tokens: 0 | RHS Tokens: 0
											-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
											<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 3 | Own Index: 5 | Nodes under Father: 3
										<<-- "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | PASS
										RHS of size 1 under father 3
									<<-- "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | PASS
									RHS of size 3 under father 1
								<<-- "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | PASS
								LHS of size 5 under father 0
								-->> "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | Token Array Size: 5 | Father 0
									-->> "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 5
										Token   0 | >a< | Open Close Priority: 0 | Symbol Priority 4 
										Token   1 | >+< | Open Close Priority: 0 | Symbol Priority 3 
										Token   2 | >b< | Open Close Priority: 0 | Symbol Priority 4 
										Token   3 | >+< | Open Close Priority: 0 | Symbol Priority 3 
										Token   4 | >c< | Open Close Priority: 0 | Symbol Priority 4 
										Candidate   0 | >a< | Open Close Priority 0 | Symbol Priority 4 | Min Priority 0 | Default
										Candidate   1 | >+< | Open Close Priority 0 | Symbol Priority 3 | Min Priority 0
										Ignore   2 | >b< | Open Close Priority 0 | Symbol Priority 4 | Min Priority 0 | Best Priority 3
										Ignore   3 | >+< | Open Close Priority 0 | Symbol Priority 3 | Min Priority 0 | Best Priority 3
										Ignore   4 | >c< | Open Close Priority 0 | Symbol Priority 4 | Min Priority 0 | Best Priority 3
										Token   1 | >+< | Highest priority token
									<<-- "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 5 | Highest Priority Token: <+> | 0 3
									Core Token: >+< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 3
									LHS: >a<
									RHS: >b<
									RHS: >+<
									RHS: >c<
									LHS Tokens: 1 | RHS Tokens: 3
									-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
									<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 0 | Own Index: 6 | Nodes under Father: 3
									-->> "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | Token Array Size: 1 | Father 6
										-->> "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1
											Token   0 | >a< | Open Close Priority: 0 | Symbol Priority 4 
											Candidate   0 | >a< | Open Close Priority 0 | Symbol Priority 4 | Min Priority 0 | Default
											Token   0 | >a< | Highest priority token
										<<-- "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1 | Highest Priority Token: <a> | 0 4
										Core Token: >a< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 4
										LHS Tokens: 0 | RHS Tokens: 0
										-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
										<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 6 | Own Index: 7 | Nodes under Father: 2
									<<-- "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | PASS
									LHS of size 1 under father 6
									-->> "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | Token Array Size: 3 | Father 6
										-->> "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 3
											Token   0 | >b< | Open Close Priority: 0 | Symbol Priority 4 
											Token   1 | >+< | Open Close Priority: 0 | Symbol Priority 3 
											Token   2 | >c< | Open Close Priority: 0 | Symbol Priority 4 
											Candidate   0 | >b< | Open Close Priority 0 | Symbol Priority 4 | Min Priority 0 | Default
											Candidate   1 | >+< | Open Close Priority 0 | Symbol Priority 3 | Min Priority 0
											Ignore   2 | >c< | Open Close Priority 0 | Symbol Priority 4 | Min Priority 0 | Best Priority 3
											Token   1 | >+< | Highest priority token
										<<-- "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 3 | Highest Priority Token: <+> | 0 3
										Core Token: >+< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 3
										LHS: >b<
										RHS: >c<
										LHS Tokens: 1 | RHS Tokens: 1
										-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
										<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 6 | Own Index: 8 | Nodes under Father: 3
										-->> "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | Token Array Size: 1 | Father 8
											-->> "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1
												Token   0 | >b< | Open Close Priority: 0 | Symbol Priority 4 
												Candidate   0 | >b< | Open Close Priority 0 | Symbol Priority 4 | Min Priority 0 | Default
												Token   0 | >b< | Highest priority token
											<<-- "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1 | Highest Priority Token: <b> | 0 4
											Core Token: >b< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 4
											LHS Tokens: 0 | RHS Tokens: 0
											-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
											<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 8 | Own Index: 9 | Nodes under Father: 2
										<<-- "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | PASS
										LHS of size 1 under father 8
										-->> "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | Token Array Size: 1 | Father 8
											-->> "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1
												Token   0 | >c< | Open Close Priority: 0 | Symbol Priority 4 
												Candidate   0 | >c< | Open Close Priority 0 | Symbol Priority 4 | Min Priority 0 | Default
												Token   0 | >c< | Highest priority token
											<<-- "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1 | Highest Priority Token: <c> | 0 4
											Core Token: >c< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 4
											LHS Tokens: 0 | RHS Tokens: 0
											-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
											<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 8 | Own Index: 10 | Nodes under Father: 3
										<<-- "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | PASS
										RHS of size 1 under father 8
									<<-- "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | PASS
									RHS of size 3 under father 6
								<<-- "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | PASS
								RHS of size 5 under father 0
							<<-- "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | PASS
							-->> "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" | Index: 0
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef904 | Begin: 1 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 0 | Stack size: 1
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef934 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 11 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 0
										Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 2 | Depth: 1
										Found children || Index 6 | Own Index: 6 | Father Index: 0 | Own Priority 1 | Children: 2 | Depth: 1
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 1 | Index: 0
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef934 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 11 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 1
										Found children || Index 2 | Own Index: 2 | Father Index: 1 | Own Priority 0 | Children: 0 | Depth: 2
										Found children || Index 3 | Own Index: 3 | Father Index: 1 | Own Priority 1 | Children: 2 | Depth: 2
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 2 | Index: 1
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef934 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 11 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 2
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 3 | Index: 2
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef934 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 11 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 3
										Found children || Index 4 | Own Index: 4 | Father Index: 3 | Own Priority 0 | Children: 0 | Depth: 3
										Found children || Index 5 | Own Index: 5 | Father Index: 3 | Own Priority 1 | Children: 0 | Depth: 3
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 4 | Index: 3
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef934 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 11 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 4
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Index: 4
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef934 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 11 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 5
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 6 | Index: 5
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef934 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 11 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 6
										Found children || Index 7 | Own Index: 7 | Father Index: 6 | Own Priority 0 | Children: 0 | Depth: 2
										Found children || Index 8 | Own Index: 8 | Father Index: 6 | Own Priority 1 | Children: 2 | Depth: 2
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 7 | Index: 6
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef934 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 11 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 7
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 8 | Index: 7
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef934 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 11 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 8
										Found children || Index 9 | Own Index: 9 | Father Index: 8 | Own Priority 0 | Children: 0 | Depth: 3
										Found children || Index 10 | Own Index: 10 | Father Index: 8 | Own Priority 1 | Children: 0 | Depth: 3
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 9 | Index: 8
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef934 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 11 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 9
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 10 | Index: 9
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef934 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 11 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 10
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 11 | Index: 10
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef934 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 11 | Stack size: 0
							<<-- "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" |
						<<-- "bool User::Equation::parse(std::__cxx11::string)" | Token array size: 11 | Token tree size: 11
						TOKEN0
						TOKEN1
						TOKEN2
						TOKEN3
						TOKEN4
						TOKEN5
						TOKEN6
						TOKEN7
						TOKEN8
						TOKEN9
						TOKEN10
						-->> "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" | Index: 0
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa54 | Begin: 1 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 0 | Stack size: 1
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 11 | Stack size: 0
							-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
								-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 0
									Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 2 | Depth: 1
									Found children || Index 6 | Own Index: 6 | Father Index: 0 | Own Priority 1 | Children: 2 | Depth: 1
								<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
							<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 1 | Index: 0
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 11 | Stack size: 0
							-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
								-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 1
									Found children || Index 2 | Own Index: 2 | Father Index: 1 | Own Priority 0 | Children: 0 | Depth: 2
									Found children || Index 3 | Own Index: 3 | Father Index: 1 | Own Priority 1 | Children: 2 | Depth: 2
								<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
							<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 2 | Index: 1
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 11 | Stack size: 0
							-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
								-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 2
								<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
							<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 3 | Index: 2
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 11 | Stack size: 0
							-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
								-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 3
									Found children || Index 4 | Own Index: 4 | Father Index: 3 | Own Priority 0 | Children: 0 | Depth: 3
									Found children || Index 5 | Own Index: 5 | Father Index: 3 | Own Priority 1 | Children: 0 | Depth: 3
								<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
							<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 4 | Index: 3
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 11 | Stack size: 0
							-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
								-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 4
								<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
							<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Index: 4
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 11 | Stack size: 0
							-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
								-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 5
								<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
							<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 6 | Index: 5
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 11 | Stack size: 0
							-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
								-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 6
									Found children || Index 7 | Own Index: 7 | Father Index: 6 | Own Priority 0 | Children: 0 | Depth: 2
									Found children || Index 8 | Own Index: 8 | Father Index: 6 | Own Priority 1 | Children: 2 | Depth: 2
								<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
							<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 7 | Index: 6
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 11 | Stack size: 0
							-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
								-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 7
								<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
							<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 8 | Index: 7
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 11 | Stack size: 0
							-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
								-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 8
									Found children || Index 9 | Own Index: 9 | Father Index: 8 | Own Priority 0 | Children: 0 | Depth: 3
									Found children || Index 10 | Own Index: 10 | Father Index: 8 | Own Priority 1 | Children: 0 | Depth: 3
								<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
							<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 9 | Index: 8
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 11 | Stack size: 0
							-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
								-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 9
								<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
							<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 10 | Index: 9
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 11 | Stack size: 0
							-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
								-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 10
								<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
							<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 11 | Index: 10
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 11 | Stack size: 0
						<<-- "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" |
						-->> "User::Tree<Payload>::Tree(std::vector<User::Tree<Payload>::St_minimal_node>) [with Payload = User::Equation::Token]" | This: 007efc40 | Nodes: 11
							-->> "bool User::Tree<Payload>::init_class_vars(Payload) [with Payload = User::Equation::Token]" |
							<<-- "bool User::Tree<Payload>::init_class_vars(Payload) [with Payload = User::Equation::Token]" |
							-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
							<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 0 | Own Index: 1 | Nodes under Father: 2
							-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
							<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 0 | Own Index: 2 | Nodes under Father: 3
							-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
							<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 1 | Own Index: 3 | Nodes under Father: 2
							-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
							<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 1 | Own Index: 4 | Nodes under Father: 3
							-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
							<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 2 | Own Index: 5 | Nodes under Father: 2
							-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
							<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 2 | Own Index: 6 | Nodes under Father: 3
							-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
							<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 4 | Own Index: 7 | Nodes under Father: 2
							-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
							<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 4 | Own Index: 8 | Nodes under Father: 3
							-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
							<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 6 | Own Index: 9 | Nodes under Father: 2
							-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
							<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 6 | Own Index: 10 | Nodes under Father: 3
							-->> "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" | Index: 0
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa54 | Begin: 1 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 0 | Stack size: 1
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 11 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 0
										Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 2 | Depth: 1
										Found children || Index 2 | Own Index: 2 | Father Index: 0 | Own Priority 1 | Children: 2 | Depth: 1
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 1 | Index: 0
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 11 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 1
										Found children || Index 3 | Own Index: 3 | Father Index: 1 | Own Priority 0 | Children: 0 | Depth: 2
										Found children || Index 4 | Own Index: 4 | Father Index: 1 | Own Priority 1 | Children: 2 | Depth: 2
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 2 | Index: 1
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 11 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 3
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 3 | Index: 3
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 11 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 4
										Found children || Index 7 | Own Index: 7 | Father Index: 4 | Own Priority 0 | Children: 0 | Depth: 3
										Found children || Index 8 | Own Index: 8 | Father Index: 4 | Own Priority 1 | Children: 0 | Depth: 3
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 4 | Index: 4
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 11 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 7
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Index: 7
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 11 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 8
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 6 | Index: 8
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 11 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 2
										Found children || Index 5 | Own Index: 5 | Father Index: 2 | Own Priority 0 | Children: 0 | Depth: 2
										Found children || Index 6 | Own Index: 6 | Father Index: 2 | Own Priority 1 | Children: 2 | Depth: 2
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 7 | Index: 2
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 11 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 5
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 8 | Index: 5
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 11 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 6
										Found children || Index 9 | Own Index: 9 | Father Index: 6 | Own Priority 0 | Children: 0 | Depth: 3
										Found children || Index 10 | Own Index: 10 | Father Index: 6 | Own Priority 1 | Children: 0 | Depth: 3
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 9 | Index: 6
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 11 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 9
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 10 | Index: 9
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 11 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 10
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 11 | Index: 10
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 11 | Stack size: 0
							<<-- "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" |
							-->> "bool User::Tree<Payload>::operator==(User::Tree<Payload>&) [with Payload = User::Equation::Token]" |
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef9cc | Begin: 1 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 0 | Stack size: 1
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef99c | Begin: 1 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 0 | Stack size: 1
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef9fc | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 11 | Stack size: 0
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa2c | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 11 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 0
										Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 2 | Depth: 1
										Found children || Index 6 | Own Index: 6 | Father Index: 0 | Own Priority 1 | Children: 2 | Depth: 1
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 1 | Index: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 0
										Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 2 | Depth: 1
										Found children || Index 2 | Own Index: 2 | Father Index: 0 | Own Priority 1 | Children: 2 | Depth: 1
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 1 | Index: 0
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef9fc | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 11 | Stack size: 0
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa2c | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 11 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 1
										Found children || Index 2 | Own Index: 2 | Father Index: 1 | Own Priority 0 | Children: 0 | Depth: 2
										Found children || Index 3 | Own Index: 3 | Father Index: 1 | Own Priority 1 | Children: 2 | Depth: 2
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 2 | Index: 1
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 1
										Found children || Index 3 | Own Index: 3 | Father Index: 1 | Own Priority 0 | Children: 0 | Depth: 2
										Found children || Index 4 | Own Index: 4 | Father Index: 1 | Own Priority 1 | Children: 2 | Depth: 2
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 2 | Index: 1
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef9fc | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 11 | Stack size: 0
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa2c | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 11 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 2
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 3 | Index: 2
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 3
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 3 | Index: 3
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef9fc | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 11 | Stack size: 0
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa2c | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 11 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 3
										Found children || Index 4 | Own Index: 4 | Father Index: 3 | Own Priority 0 | Children: 0 | Depth: 3
										Found children || Index 5 | Own Index: 5 | Father Index: 3 | Own Priority 1 | Children: 0 | Depth: 3
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 4 | Index: 3
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 4
										Found children || Index 7 | Own Index: 7 | Father Index: 4 | Own Priority 0 | Children: 0 | Depth: 3
										Found children || Index 8 | Own Index: 8 | Father Index: 4 | Own Priority 1 | Children: 0 | Depth: 3
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 4 | Index: 4
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef9fc | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 11 | Stack size: 0
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa2c | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 11 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 4
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Index: 4
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 7
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Index: 7
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef9fc | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 11 | Stack size: 0
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa2c | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 11 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 5
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 6 | Index: 5
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 8
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 6 | Index: 8
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef9fc | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 11 | Stack size: 0
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa2c | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 11 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 6
										Found children || Index 7 | Own Index: 7 | Father Index: 6 | Own Priority 0 | Children: 0 | Depth: 2
										Found children || Index 8 | Own Index: 8 | Father Index: 6 | Own Priority 1 | Children: 2 | Depth: 2
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 7 | Index: 6
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 2
										Found children || Index 5 | Own Index: 5 | Father Index: 2 | Own Priority 0 | Children: 0 | Depth: 2
										Found children || Index 6 | Own Index: 6 | Father Index: 2 | Own Priority 1 | Children: 2 | Depth: 2
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 7 | Index: 2
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef9fc | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 11 | Stack size: 0
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa2c | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 11 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 7
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 8 | Index: 7
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 5
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 8 | Index: 5
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef9fc | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 11 | Stack size: 0
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa2c | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 11 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 8
										Found children || Index 9 | Own Index: 9 | Father Index: 8 | Own Priority 0 | Children: 0 | Depth: 3
										Found children || Index 10 | Own Index: 10 | Father Index: 8 | Own Priority 1 | Children: 0 | Depth: 3
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 9 | Index: 8
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 6
										Found children || Index 9 | Own Index: 9 | Father Index: 6 | Own Priority 0 | Children: 0 | Depth: 3
										Found children || Index 10 | Own Index: 10 | Father Index: 6 | Own Priority 1 | Children: 0 | Depth: 3
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 9 | Index: 6
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef9fc | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 11 | Stack size: 0
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa2c | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 11 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 9
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 10 | Index: 9
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 9
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 10 | Index: 9
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef9fc | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 11 | Stack size: 0
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa2c | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 11 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 10
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 11 | Index: 10
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 10
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 11 | Index: 10
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef9fc | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 11 | Stack size: 0
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa2c | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 11 | Stack size: 0
							<<-- "bool User::Tree<Payload>::operator==(User::Tree<Payload>&) [with Payload = User::Equation::Token]" | Same
							-->> "static bool User::Equation::convert_token_tree_to_array(User::Tree<User::Equation::Token>&, std::vector<User::Equation::Token>&)" |
								-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" | Object: 007efd18, Index: 0
								<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" |
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa30 | Begin: 1 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 0 | Stack size: 1
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa60 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 11 | Stack size: 0
								Token:  = | Type: 2 | Priority: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 0
										Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 2 | Depth: 1
										Found children || Index 6 | Own Index: 6 | Father Index: 0 | Own Priority 1 | Children: 2 | Depth: 1
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 1 | Index: 0
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa60 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 11 | Stack size: 0
								Token:  + | Type: 2 | Priority: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 1
										Found children || Index 2 | Own Index: 2 | Father Index: 1 | Own Priority 0 | Children: 0 | Depth: 2
										Found children || Index 3 | Own Index: 3 | Father Index: 1 | Own Priority 1 | Children: 2 | Depth: 2
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 2 | Index: 1
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa60 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 11 | Stack size: 0
								Token:  A | Type: 1 | Priority: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 2
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 3 | Index: 2
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa60 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 11 | Stack size: 0
								Token:  + | Type: 2 | Priority: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 3
										Found children || Index 4 | Own Index: 4 | Father Index: 3 | Own Priority 0 | Children: 0 | Depth: 3
										Found children || Index 5 | Own Index: 5 | Father Index: 3 | Own Priority 1 | Children: 0 | Depth: 3
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 4 | Index: 3
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa60 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 11 | Stack size: 0
								Token:  B | Type: 1 | Priority: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 4
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Index: 4
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa60 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 11 | Stack size: 0
								Token:  C | Type: 1 | Priority: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 5
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 6 | Index: 5
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa60 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 11 | Stack size: 0
								Token:  + | Type: 2 | Priority: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 6
										Found children || Index 7 | Own Index: 7 | Father Index: 6 | Own Priority 0 | Children: 0 | Depth: 2
										Found children || Index 8 | Own Index: 8 | Father Index: 6 | Own Priority 1 | Children: 2 | Depth: 2
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 7 | Index: 6
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa60 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 11 | Stack size: 0
								Token:  a | Type: 1 | Priority: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 7
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 8 | Index: 7
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa60 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 11 | Stack size: 0
								Token:  + | Type: 2 | Priority: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 8
										Found children || Index 9 | Own Index: 9 | Father Index: 8 | Own Priority 0 | Children: 0 | Depth: 3
										Found children || Index 10 | Own Index: 10 | Father Index: 8 | Own Priority 1 | Children: 0 | Depth: 3
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 9 | Index: 8
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa60 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 11 | Stack size: 0
								Token:  b | Type: 1 | Priority: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 9
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 10 | Index: 9
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa60 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 11 | Stack size: 0
								Token:  c | Type: 1 | Priority: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 10
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 11 | Index: 10
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa60 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 11 | Stack size: 0
							<<-- "static bool User::Equation::convert_token_tree_to_array(User::Tree<User::Equation::Token>&, std::vector<User::Equation::Token>&)" |
							PASS pattern: 10
							-->> "User::Tree<Payload>::~Tree() [with Payload = User::Equation::Token]" | This: 007efc40
							<<-- "User::Tree<Payload>::~Tree() [with Payload = User::Equation::Token]" |
							-->> "User::Tree<Payload>::~Tree() [with Payload = User::Equation::Token]" | This: 007efbf4
							<<-- "User::Tree<Payload>::~Tree() [with Payload = User::Equation::Token]" |
							PATTERN11 >X=1<
							-->> "bool User::Equation::parse(std::__cxx11::string)" | Parse: X=1 | Size: 3
								-->> "static bool User::Equation::equation_to_token_array(std::__cxx11::string, std::vector<std::__cxx11::basic_string<char> >&, std::vector<User::Equation::Token>&)" | Parse: X=1 | Size: 3
									SEEK_NEXT_TOKEN | Decode: >>X<<
									-->> "static bool User::Equation::is_symbol(char)" | Digit: >>X<<
									<<-- "static bool User::Equation::is_symbol(char)" | Y
									TOKEN_SYMBOL | Decode: >>=<<
									-->> "static bool User::Equation::is_symbol(char)" | Digit: >>=<<
									<<-- "static bool User::Equation::is_symbol(char)" | N
									Token fully decoded:  X | type: 1 | size: 1
									Tokens decoded: 1
									SEEK_NEXT_TOKEN | Decode: >>=<<
									-->> "static bool User::Equation::is_symbol(char)" | Digit: >>=<<
									<<-- "static bool User::Equation::is_symbol(char)" | N
									-->> "static bool User::Equation::is_operator(char)" | Digit: >>=<<
									<<-- "static bool User::Equation::is_operator(char)" | Y
									Operator detected: >>=<< | Token: =
									Token fully decoded:  = | type: 2 | size: 1
									Tokens decoded: 2
									SEEK_NEXT_TOKEN | Decode: >>1<<
									Token fully decoded:  1 | type: 0 | size: 1
									Tokens decoded: 3
									Equations decoded into 3 tokens
									Token: >>X<< | Type: 1 | Size: 1
									Token: >>=<< | Type: 2 | Size: 1
									Token: >>1<< | Type: 0 | Size: 1
								<<-- "static bool User::Equation::equation_to_token_array(std::__cxx11::string, std::vector<std::__cxx11::basic_string<char> >&, std::vector<User::Equation::Token>&)" | Decoded 3 tokens
								Tree wasn't empty: 11 | FLUSH
								-->> "bool User::Tree<Payload>::flush() [with Payload = User::Equation::Token]" | Nodes inside the tree: 11
									-->> "bool User::Tree<Payload>::init_root() [with Payload = User::Equation::Token]" |
									<<-- "bool User::Tree<Payload>::init_root() [with Payload = User::Equation::Token]" |
								<<-- "bool User::Tree<Payload>::flush() [with Payload = User::Equation::Token]" | Nodes inside the tree: 1
								-->> "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | Token Array Size: 3 | Father 0
									-->> "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 3
										Token   0 | >X< | Open Close Priority: 0 | Symbol Priority 4 
										Token   1 | >=< | Open Close Priority: 0 | Symbol Priority 0 
										Token   2 | >1< | Open Close Priority: 0 | Symbol Priority 5 
										Candidate   0 | >X< | Open Close Priority 0 | Symbol Priority 4 | Min Priority 0 | Default
										Candidate   1 | >=< | Open Close Priority 0 | Symbol Priority 0 | Min Priority 0
										Ignore   2 | >1< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Best Priority 0
										Token   1 | >=< | Highest priority token
									<<-- "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 3 | Highest Priority Token: <=> | 0 0
									Core Token: >=< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 0
									LHS: >X<
									RHS: >1<
									LHS Tokens: 1 | RHS Tokens: 1
									ROOT: >=<
									-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" | Object: 007efd18, Index: 0
									<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" |
									LHS: >=<
									-->> "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | Token Array Size: 1 | Father 0
										-->> "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1
											Token   0 | >X< | Open Close Priority: 0 | Symbol Priority 4 
											Candidate   0 | >X< | Open Close Priority 0 | Symbol Priority 4 | Min Priority 0 | Default
											Token   0 | >X< | Highest priority token
										<<-- "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1 | Highest Priority Token: <X> | 0 4
										Core Token: >X< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 4
										LHS Tokens: 0 | RHS Tokens: 0
										-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" | Object: 007efd18, Index: 0
										<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" |
										-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
										<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 0 | Own Index: 1 | Nodes under Father: 2
									<<-- "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | PASS
									LHS of size 1 under father 0
									-->> "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | Token Array Size: 1 | Father 0
										-->> "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1
											Token   0 | >1< | Open Close Priority: 0 | Symbol Priority 5 
											Candidate   0 | >1< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Default
											Token   0 | >1< | Highest priority token
										<<-- "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1 | Highest Priority Token: <1> | 0 5
										Core Token: >1< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 5
										LHS Tokens: 0 | RHS Tokens: 0
										-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
										<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 0 | Own Index: 2 | Nodes under Father: 3
									<<-- "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | PASS
									RHS of size 1 under father 0
								<<-- "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | PASS
								-->> "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" | Index: 0
									-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef904 | Begin: 1 | Index: 0
									<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 0 | Stack size: 1
									-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef934 | Begin: 0 | Index: 0
									<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 3 | Stack size: 0
									-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
										-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 0
											Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 0 | Depth: 1
											Found children || Index 2 | Own Index: 2 | Father Index: 0 | Own Priority 1 | Children: 0 | Depth: 1
										<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
									<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 1 | Index: 0
									-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef934 | Begin: 0 | Index: 0
									<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 3 | Stack size: 0
									-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
										-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 1
										<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
									<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 2 | Index: 1
									-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef934 | Begin: 0 | Index: 0
									<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 3 | Stack size: 0
									-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
										-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 2
										<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
									<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 3 | Index: 2
									-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef934 | Begin: 0 | Index: 0
									<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 3 | Stack size: 0
								<<-- "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" |
							<<-- "bool User::Equation::parse(std::__cxx11::string)" | Token array size: 3 | Token tree size: 3
							TOKEN0
							TOKEN1
							TOKEN2
							-->> "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" | Index: 0
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa54 | Begin: 1 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 0 | Stack size: 1
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 3 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 0
										Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 0 | Depth: 1
										Found children || Index 2 | Own Index: 2 | Father Index: 0 | Own Priority 1 | Children: 0 | Depth: 1
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 1 | Index: 0
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 3 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 1
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 2 | Index: 1
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 3 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 2
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 3 | Index: 2
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 3 | Stack size: 0
							<<-- "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" |
							-->> "User::Tree<Payload>::Tree(std::vector<User::Tree<Payload>::St_minimal_node>) [with Payload = User::Equation::Token]" | This: 007efc40 | Nodes: 3
								-->> "bool User::Tree<Payload>::init_class_vars(Payload) [with Payload = User::Equation::Token]" |
								<<-- "bool User::Tree<Payload>::init_class_vars(Payload) [with Payload = User::Equation::Token]" |
								-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
								<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 0 | Own Index: 1 | Nodes under Father: 2
								-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
								<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 0 | Own Index: 2 | Nodes under Father: 3
								-->> "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" | Index: 0
									-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa54 | Begin: 1 | Index: 0
									<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 0 | Stack size: 1
									-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
									<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 3 | Stack size: 0
									-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
										-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 0
											Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 0 | Depth: 1
											Found children || Index 2 | Own Index: 2 | Father Index: 0 | Own Priority 1 | Children: 0 | Depth: 1
										<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
									<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 1 | Index: 0
									-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
									<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 3 | Stack size: 0
									-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
										-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 1
										<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
									<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 2 | Index: 1
									-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
									<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 3 | Stack size: 0
									-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
										-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 2
										<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
									<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 3 | Index: 2
									-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
									<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 3 | Stack size: 0
								<<-- "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" |
								-->> "bool User::Tree<Payload>::operator==(User::Tree<Payload>&) [with Payload = User::Equation::Token]" |
									-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef9cc | Begin: 1 | Index: 0
									<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 0 | Stack size: 1
									-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef99c | Begin: 1 | Index: 0
									<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 0 | Stack size: 1
									-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef9fc | Begin: 0 | Index: 0
									<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 3 | Stack size: 0
									-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa2c | Begin: 0 | Index: 0
									<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 3 | Stack size: 0
									-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
										-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 0
											Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 0 | Depth: 1
											Found children || Index 2 | Own Index: 2 | Father Index: 0 | Own Priority 1 | Children: 0 | Depth: 1
										<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
									<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 1 | Index: 0
									-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
										-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 0
											Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 0 | Depth: 1
											Found children || Index 2 | Own Index: 2 | Father Index: 0 | Own Priority 1 | Children: 0 | Depth: 1
										<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
									<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 1 | Index: 0
									-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef9fc | Begin: 0 | Index: 0
									<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 3 | Stack size: 0
									-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa2c | Begin: 0 | Index: 0
									<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 3 | Stack size: 0
									-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
										-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 1
										<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
									<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 2 | Index: 1
									-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
										-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 1
										<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
									<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 2 | Index: 1
									-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef9fc | Begin: 0 | Index: 0
									<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 3 | Stack size: 0
									-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa2c | Begin: 0 | Index: 0
									<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 3 | Stack size: 0
									-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
										-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 2
										<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
									<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 3 | Index: 2
									-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
										-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 2
										<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
									<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 3 | Index: 2
									-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef9fc | Begin: 0 | Index: 0
									<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 3 | Stack size: 0
									-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa2c | Begin: 0 | Index: 0
									<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 3 | Stack size: 0
								<<-- "bool User::Tree<Payload>::operator==(User::Tree<Payload>&) [with Payload = User::Equation::Token]" | Same
								-->> "static bool User::Equation::convert_token_tree_to_array(User::Tree<User::Equation::Token>&, std::vector<User::Equation::Token>&)" |
									-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" | Object: 007efd18, Index: 0
									<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa30 | Begin: 1 | Index: 0
									<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 0 | Stack size: 1
									-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa60 | Begin: 0 | Index: 0
									<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 3 | Stack size: 0
									Token:  = | Type: 2 | Priority: 0
									-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
										-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 0
											Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 0 | Depth: 1
											Found children || Index 2 | Own Index: 2 | Father Index: 0 | Own Priority 1 | Children: 0 | Depth: 1
										<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
									<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 1 | Index: 0
									-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa60 | Begin: 0 | Index: 0
									<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 3 | Stack size: 0
									Token:  X | Type: 1 | Priority: 0
									-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
										-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 1
										<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
									<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 2 | Index: 1
									-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa60 | Begin: 0 | Index: 0
									<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 3 | Stack size: 0
									Token:  1 | Type: 0 | Priority: 0
									-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
										-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 2
										<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
									<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 3 | Index: 2
									-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa60 | Begin: 0 | Index: 0
									<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 3 | Stack size: 0
								<<-- "static bool User::Equation::convert_token_tree_to_array(User::Tree<User::Equation::Token>&, std::vector<User::Equation::Token>&)" |
								PASS pattern: 11
								-->> "User::Tree<Payload>::~Tree() [with Payload = User::Equation::Token]" | This: 007efc40
								<<-- "User::Tree<Payload>::~Tree() [with Payload = User::Equation::Token]" |
								-->> "User::Tree<Payload>::~Tree() [with Payload = User::Equation::Token]" | This: 007efbf4
								<<-- "User::Tree<Payload>::~Tree() [with Payload = User::Equation::Token]" |
								PATTERN12 >3*X=(5*Y)+C<
								-->> "bool User::Equation::parse(std::__cxx11::string)" | Parse: 3*X=(5*Y)+C | Size: 11
									-->> "static bool User::Equation::equation_to_token_array(std::__cxx11::string, std::vector<std::__cxx11::basic_string<char> >&, std::vector<User::Equation::Token>&)" | Parse: 3*X=(5*Y)+C | Size: 11
										SEEK_NEXT_TOKEN | Decode: >>3<<
										TOKEN_NUMBER | Decode: >>*<<
										Token fully decoded:  3 | type: 0 | size: 1
										Tokens decoded: 1
										SEEK_NEXT_TOKEN | Decode: >>*<<
										-->> "static bool User::Equation::is_symbol(char)" | Digit: >>*<<
										<<-- "static bool User::Equation::is_symbol(char)" | N
										-->> "static bool User::Equation::is_operator(char)" | Digit: >>*<<
										<<-- "static bool User::Equation::is_operator(char)" | Y
										Operator detected: >>*<< | Token: *
										Token fully decoded:  * | type: 2 | size: 1
										Tokens decoded: 2
										SEEK_NEXT_TOKEN | Decode: >>X<<
										-->> "static bool User::Equation::is_symbol(char)" | Digit: >>X<<
										<<-- "static bool User::Equation::is_symbol(char)" | Y
										TOKEN_SYMBOL | Decode: >>=<<
										-->> "static bool User::Equation::is_symbol(char)" | Digit: >>=<<
										<<-- "static bool User::Equation::is_symbol(char)" | N
										Token fully decoded:  X | type: 1 | size: 1
										Tokens decoded: 3
										SEEK_NEXT_TOKEN | Decode: >>=<<
										-->> "static bool User::Equation::is_symbol(char)" | Digit: >>=<<
										<<-- "static bool User::Equation::is_symbol(char)" | N
										-->> "static bool User::Equation::is_operator(char)" | Digit: >>=<<
										<<-- "static bool User::Equation::is_operator(char)" | Y
										Operator detected: >>=<< | Token: =
										Token fully decoded:  = | type: 2 | size: 1
										Tokens decoded: 4
										SEEK_NEXT_TOKEN | Decode: >>(<<
										-->> "static bool User::Equation::is_symbol(char)" | Digit: >>(<<
										<<-- "static bool User::Equation::is_symbol(char)" | N
										-->> "static bool User::Equation::is_operator(char)" | Digit: >>(<<
										<<-- "static bool User::Equation::is_operator(char)" | N
										Open detected: >>(<< | Token: (
										Token fully decoded:  ( | type: 3 | size: 1
										Tokens decoded: 5
										SEEK_NEXT_TOKEN | Decode: >>5<<
										TOKEN_NUMBER | Decode: >>*<<
										Token fully decoded:  5 | type: 0 | size: 1
										Tokens decoded: 6
										SEEK_NEXT_TOKEN | Decode: >>*<<
										-->> "static bool User::Equation::is_symbol(char)" | Digit: >>*<<
										<<-- "static bool User::Equation::is_symbol(char)" | N
										-->> "static bool User::Equation::is_operator(char)" | Digit: >>*<<
										<<-- "static bool User::Equation::is_operator(char)" | Y
										Operator detected: >>*<< | Token: *
										Token fully decoded:  * | type: 2 | size: 1
										Tokens decoded: 7
										SEEK_NEXT_TOKEN | Decode: >>Y<<
										-->> "static bool User::Equation::is_symbol(char)" | Digit: >>Y<<
										<<-- "static bool User::Equation::is_symbol(char)" | Y
										TOKEN_SYMBOL | Decode: >>)<<
										-->> "static bool User::Equation::is_symbol(char)" | Digit: >>)<<
										<<-- "static bool User::Equation::is_symbol(char)" | N
										Token fully decoded:  Y | type: 1 | size: 1
										Tokens decoded: 8
										SEEK_NEXT_TOKEN | Decode: >>)<<
										-->> "static bool User::Equation::is_symbol(char)" | Digit: >>)<<
										<<-- "static bool User::Equation::is_symbol(char)" | N
										-->> "static bool User::Equation::is_operator(char)" | Digit: >>)<<
										<<-- "static bool User::Equation::is_operator(char)" | N
										Close detected: >>)<< | Token: )
										Token fully decoded:  ) | type: 4 | size: 1
										Tokens decoded: 9
										SEEK_NEXT_TOKEN | Decode: >>+<<
										-->> "static bool User::Equation::is_symbol(char)" | Digit: >>+<<
										<<-- "static bool User::Equation::is_symbol(char)" | N
										-->> "static bool User::Equation::is_operator(char)" | Digit: >>+<<
										<<-- "static bool User::Equation::is_operator(char)" | Y
										Operator detected: >>+<< | Token: +
										Token fully decoded:  + | type: 2 | size: 1
										Tokens decoded: 10
										SEEK_NEXT_TOKEN | Decode: >>C<<
										-->> "static bool User::Equation::is_symbol(char)" | Digit: >>C<<
										<<-- "static bool User::Equation::is_symbol(char)" | Y
										Token fully decoded:  C | type: 1 | size: 1
										Tokens decoded: 11
										Equations decoded into 11 tokens
										Token: >>3<< | Type: 0 | Size: 1
										Token: >>*<< | Type: 2 | Size: 1
										Token: >>X<< | Type: 1 | Size: 1
										Token: >>=<< | Type: 2 | Size: 1
										Token: >>(<< | Type: 3 | Size: 1
										Token: >>5<< | Type: 0 | Size: 1
										Token: >>*<< | Type: 2 | Size: 1
										Token: >>Y<< | Type: 1 | Size: 1
										Token: >>)<< | Type: 4 | Size: 1
										Token: >>+<< | Type: 2 | Size: 1
										Token: >>C<< | Type: 1 | Size: 1
									<<-- "static bool User::Equation::equation_to_token_array(std::__cxx11::string, std::vector<std::__cxx11::basic_string<char> >&, std::vector<User::Equation::Token>&)" | Decoded 11 tokens
									Tree wasn't empty: 3 | FLUSH
									-->> "bool User::Tree<Payload>::flush() [with Payload = User::Equation::Token]" | Nodes inside the tree: 3
										-->> "bool User::Tree<Payload>::init_root() [with Payload = User::Equation::Token]" |
										<<-- "bool User::Tree<Payload>::init_root() [with Payload = User::Equation::Token]" |
									<<-- "bool User::Tree<Payload>::flush() [with Payload = User::Equation::Token]" | Nodes inside the tree: 1
									-->> "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | Token Array Size: 11 | Father 0
										-->> "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 11
											Token   0 | >3< | Open Close Priority: 0 | Symbol Priority 5 
											Token   1 | >*< | Open Close Priority: 0 | Symbol Priority 1 
											Token   2 | >X< | Open Close Priority: 0 | Symbol Priority 4 
											Token   3 | >=< | Open Close Priority: 0 | Symbol Priority 0 
											Token   4 | Open | Priority: 1
											Token   5 | >5< | Open Close Priority: 1 | Symbol Priority 5 
											Token   6 | >*< | Open Close Priority: 1 | Symbol Priority 1 
											Token   7 | >Y< | Open Close Priority: 1 | Symbol Priority 4 
											Token   8 | Close| Priority: 1
											Token   9 | >+< | Open Close Priority: 0 | Symbol Priority 3 
											Token  10 | >C< | Open Close Priority: 0 | Symbol Priority 4 
											Candidate   0 | >3< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Default
											Candidate   1 | >*< | Open Close Priority 0 | Symbol Priority 1 | Min Priority 0
											Ignore   2 | >X< | Open Close Priority 0 | Symbol Priority 4 | Min Priority 0 | Best Priority 1
											Candidate   3 | >=< | Open Close Priority 0 | Symbol Priority 0 | Min Priority 0
											Ignore   9 | >+< | Open Close Priority 0 | Symbol Priority 3 | Min Priority 0 | Best Priority 0
											Ignore  10 | >C< | Open Close Priority 0 | Symbol Priority 4 | Min Priority 0 | Best Priority 0
											Token   3 | >=< | Highest priority token
										<<-- "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 11 | Highest Priority Token: <=> | 0 0
										Core Token: >=< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 0
										LHS: >3<
										LHS: >*<
										LHS: >X<
										RHS: >(<
										RHS: >5<
										RHS: >*<
										RHS: >Y<
										RHS: >)<
										RHS: >+<
										RHS: >C<
										LHS Tokens: 3 | RHS Tokens: 7
										ROOT: >=<
										-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" | Object: 007efd18, Index: 0
										<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" |
										LHS: >=<
										-->> "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | Token Array Size: 3 | Father 0
											-->> "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 3
												Token   0 | >3< | Open Close Priority: 0 | Symbol Priority 5 
												Token   1 | >*< | Open Close Priority: 0 | Symbol Priority 1 
												Token   2 | >X< | Open Close Priority: 0 | Symbol Priority 4 
												Candidate   0 | >3< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Default
												Candidate   1 | >*< | Open Close Priority 0 | Symbol Priority 1 | Min Priority 0
												Ignore   2 | >X< | Open Close Priority 0 | Symbol Priority 4 | Min Priority 0 | Best Priority 1
												Token   1 | >*< | Highest priority token
											<<-- "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 3 | Highest Priority Token: <*> | 0 1
											Core Token: >*< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 1
											LHS: >3<
											RHS: >X<
											LHS Tokens: 1 | RHS Tokens: 1
											-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" | Object: 007efd18, Index: 0
											<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" |
											-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
											<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 0 | Own Index: 1 | Nodes under Father: 2
											-->> "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | Token Array Size: 1 | Father 1
												-->> "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1
												Token   0 | >3< | Open Close Priority: 0 | Symbol Priority 5 
												Candidate   0 | >3< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Default
												Token   0 | >3< | Highest priority token
											<<-- "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1 | Highest Priority Token: <3> | 0 5
											Core Token: >3< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 5
											LHS Tokens: 0 | RHS Tokens: 0
											-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
											<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 1 | Own Index: 2 | Nodes under Father: 2
										<<-- "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | PASS
										LHS of size 1 under father 1
										-->> "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | Token Array Size: 1 | Father 1
											-->> "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1
												Token   0 | >X< | Open Close Priority: 0 | Symbol Priority 4 
												Candidate   0 | >X< | Open Close Priority 0 | Symbol Priority 4 | Min Priority 0 | Default
												Token   0 | >X< | Highest priority token
											<<-- "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1 | Highest Priority Token: <X> | 0 4
											Core Token: >X< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 4
											LHS Tokens: 0 | RHS Tokens: 0
											-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
											<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 1 | Own Index: 3 | Nodes under Father: 3
										<<-- "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | PASS
										RHS of size 1 under father 1
									<<-- "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | PASS
									LHS of size 3 under father 0
									-->> "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | Token Array Size: 7 | Father 0
										-->> "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 7
											Token   0 | Open | Priority: 1
											Token   1 | >5< | Open Close Priority: 1 | Symbol Priority 5 
											Token   2 | >*< | Open Close Priority: 1 | Symbol Priority 1 
											Token   3 | >Y< | Open Close Priority: 1 | Symbol Priority 4 
											Token   4 | Close| Priority: 1
											Token   5 | >+< | Open Close Priority: 0 | Symbol Priority 3 
											Token   6 | >C< | Open Close Priority: 0 | Symbol Priority 4 
											Candidate   5 | >+< | Open Close Priority 0 | Symbol Priority 3 | Min Priority 0 | Default
											Ignore   6 | >C< | Open Close Priority 0 | Symbol Priority 4 | Min Priority 0 | Best Priority 3
											Token   5 | >+< | Highest priority token
										<<-- "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 7 | Highest Priority Token: <+> | 0 3
										Core Token: >+< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 3
										LHS: >(<
										LHS: >5<
										LHS: >*<
										LHS: >Y<
										LHS: >)<
										RHS: >C<
										LHS Tokens: 5 | RHS Tokens: 1
										-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
										<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 0 | Own Index: 4 | Nodes under Father: 3
										-->> "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | Token Array Size: 5 | Father 4
											-->> "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 5
												Token   0 | Open | Priority: 1
												Token   1 | >5< | Open Close Priority: 1 | Symbol Priority 5 
												Token   2 | >*< | Open Close Priority: 1 | Symbol Priority 1 
												Token   3 | >Y< | Open Close Priority: 1 | Symbol Priority 4 
												Token   4 | Close| Priority: 1
												Delete Open 0 | Priority: 1 | Min Priority: 1 
												Delete Close 3 | Priority: 1 | Min Priority: 1 
												Deleted redundant priority tokens | Tokens: 3 | Min Open Close Priority: 0
												Token   0 | >5< | Open Close Priority: 0 | Symbol Priority 5 
												Token   1 | >*< | Open Close Priority: 0 | Symbol Priority 1 
												Token   2 | >Y< | Open Close Priority: 0 | Symbol Priority 4 
												Candidate   0 | >5< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Default
												Candidate   1 | >*< | Open Close Priority 0 | Symbol Priority 1 | Min Priority 0
												Ignore   2 | >Y< | Open Close Priority 0 | Symbol Priority 4 | Min Priority 0 | Best Priority 1
												Token   1 | >*< | Highest priority token
											<<-- "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 3 | Highest Priority Token: <*> | 0 1
											Core Token: >*< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 1
											LHS: >5<
											RHS: >Y<
											LHS Tokens: 1 | RHS Tokens: 1
											-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
											<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 4 | Own Index: 5 | Nodes under Father: 2
											-->> "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | Token Array Size: 1 | Father 5
												-->> "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1
												Token   0 | >5< | Open Close Priority: 0 | Symbol Priority 5 
												Candidate   0 | >5< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Default
												Token   0 | >5< | Highest priority token
											<<-- "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1 | Highest Priority Token: <5> | 0 5
											Core Token: >5< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 5
											LHS Tokens: 0 | RHS Tokens: 0
											-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
											<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 5 | Own Index: 6 | Nodes under Father: 2
										<<-- "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | PASS
										LHS of size 1 under father 5
										-->> "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | Token Array Size: 1 | Father 5
											-->> "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1
												Token   0 | >Y< | Open Close Priority: 0 | Symbol Priority 4 
												Candidate   0 | >Y< | Open Close Priority 0 | Symbol Priority 4 | Min Priority 0 | Default
												Token   0 | >Y< | Highest priority token
											<<-- "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1 | Highest Priority Token: <Y> | 0 4
											Core Token: >Y< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 4
											LHS Tokens: 0 | RHS Tokens: 0
											-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
											<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 5 | Own Index: 7 | Nodes under Father: 3
										<<-- "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | PASS
										RHS of size 1 under father 5
									<<-- "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | PASS
									LHS of size 3 under father 4
									-->> "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | Token Array Size: 1 | Father 4
										-->> "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1
											Token   0 | >C< | Open Close Priority: 0 | Symbol Priority 4 
											Candidate   0 | >C< | Open Close Priority 0 | Symbol Priority 4 | Min Priority 0 | Default
											Token   0 | >C< | Highest priority token
										<<-- "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1 | Highest Priority Token: <C> | 0 4
										Core Token: >C< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 4
										LHS Tokens: 0 | RHS Tokens: 0
										-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
										<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 4 | Own Index: 8 | Nodes under Father: 3
									<<-- "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | PASS
									RHS of size 1 under father 4
								<<-- "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | PASS
								RHS of size 7 under father 0
							<<-- "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | PASS
							-->> "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" | Index: 0
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef904 | Begin: 1 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 0 | Stack size: 1
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef934 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 9 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 0
										Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 2 | Depth: 1
										Found children || Index 4 | Own Index: 4 | Father Index: 0 | Own Priority 1 | Children: 2 | Depth: 1
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 1 | Index: 0
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef934 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 9 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 1
										Found children || Index 2 | Own Index: 2 | Father Index: 1 | Own Priority 0 | Children: 0 | Depth: 2
										Found children || Index 3 | Own Index: 3 | Father Index: 1 | Own Priority 1 | Children: 0 | Depth: 2
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 2 | Index: 1
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef934 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 9 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 2
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 3 | Index: 2
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef934 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 9 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 3
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 4 | Index: 3
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef934 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 9 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 4
										Found children || Index 5 | Own Index: 5 | Father Index: 4 | Own Priority 0 | Children: 2 | Depth: 2
										Found children || Index 8 | Own Index: 8 | Father Index: 4 | Own Priority 1 | Children: 0 | Depth: 2
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Index: 4
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef934 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 9 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 5
										Found children || Index 6 | Own Index: 6 | Father Index: 5 | Own Priority 0 | Children: 0 | Depth: 3
										Found children || Index 7 | Own Index: 7 | Father Index: 5 | Own Priority 1 | Children: 0 | Depth: 3
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 6 | Index: 5
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef934 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 9 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 6
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 7 | Index: 6
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef934 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 9 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 7
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 8 | Index: 7
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef934 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 9 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 8
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 9 | Index: 8
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef934 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 9 | Stack size: 0
							<<-- "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" |
						<<-- "bool User::Equation::parse(std::__cxx11::string)" | Token array size: 11 | Token tree size: 9
						TOKEN0
						TOKEN1
						TOKEN2
						TOKEN3
						TOKEN4
						TOKEN5
						TOKEN6
						TOKEN7
						TOKEN8
						TOKEN9
						TOKEN10
						-->> "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" | Index: 0
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa54 | Begin: 1 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 0 | Stack size: 1
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 9 | Stack size: 0
							-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
								-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 0
									Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 2 | Depth: 1
									Found children || Index 4 | Own Index: 4 | Father Index: 0 | Own Priority 1 | Children: 2 | Depth: 1
								<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
							<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 1 | Index: 0
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 9 | Stack size: 0
							-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
								-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 1
									Found children || Index 2 | Own Index: 2 | Father Index: 1 | Own Priority 0 | Children: 0 | Depth: 2
									Found children || Index 3 | Own Index: 3 | Father Index: 1 | Own Priority 1 | Children: 0 | Depth: 2
								<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
							<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 2 | Index: 1
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 9 | Stack size: 0
							-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
								-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 2
								<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
							<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 3 | Index: 2
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 9 | Stack size: 0
							-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
								-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 3
								<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
							<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 4 | Index: 3
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 9 | Stack size: 0
							-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
								-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 4
									Found children || Index 5 | Own Index: 5 | Father Index: 4 | Own Priority 0 | Children: 2 | Depth: 2
									Found children || Index 8 | Own Index: 8 | Father Index: 4 | Own Priority 1 | Children: 0 | Depth: 2
								<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
							<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Index: 4
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 9 | Stack size: 0
							-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
								-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 5
									Found children || Index 6 | Own Index: 6 | Father Index: 5 | Own Priority 0 | Children: 0 | Depth: 3
									Found children || Index 7 | Own Index: 7 | Father Index: 5 | Own Priority 1 | Children: 0 | Depth: 3
								<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
							<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 6 | Index: 5
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 9 | Stack size: 0
							-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
								-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 6
								<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
							<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 7 | Index: 6
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 9 | Stack size: 0
							-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
								-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 7
								<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
							<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 8 | Index: 7
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 9 | Stack size: 0
							-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
								-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 8
								<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
							<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 9 | Index: 8
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 9 | Stack size: 0
						<<-- "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" |
						-->> "User::Tree<Payload>::Tree(std::vector<User::Tree<Payload>::St_minimal_node>) [with Payload = User::Equation::Token]" | This: 007efc40 | Nodes: 9
							-->> "bool User::Tree<Payload>::init_class_vars(Payload) [with Payload = User::Equation::Token]" |
							<<-- "bool User::Tree<Payload>::init_class_vars(Payload) [with Payload = User::Equation::Token]" |
							-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
							<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 0 | Own Index: 1 | Nodes under Father: 2
							-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
							<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 0 | Own Index: 2 | Nodes under Father: 3
							-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
							<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 1 | Own Index: 3 | Nodes under Father: 2
							-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
							<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 1 | Own Index: 4 | Nodes under Father: 3
							-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
							<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 2 | Own Index: 5 | Nodes under Father: 2
							-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
							<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 2 | Own Index: 6 | Nodes under Father: 3
							-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
							<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 5 | Own Index: 7 | Nodes under Father: 2
							-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
							<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 5 | Own Index: 8 | Nodes under Father: 3
							-->> "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" | Index: 0
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa54 | Begin: 1 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 0 | Stack size: 1
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 9 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 0
										Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 2 | Depth: 1
										Found children || Index 2 | Own Index: 2 | Father Index: 0 | Own Priority 1 | Children: 2 | Depth: 1
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 1 | Index: 0
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 9 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 1
										Found children || Index 3 | Own Index: 3 | Father Index: 1 | Own Priority 0 | Children: 0 | Depth: 2
										Found children || Index 4 | Own Index: 4 | Father Index: 1 | Own Priority 1 | Children: 0 | Depth: 2
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 2 | Index: 1
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 9 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 3
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 3 | Index: 3
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 9 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 4
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 4 | Index: 4
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 9 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 2
										Found children || Index 5 | Own Index: 5 | Father Index: 2 | Own Priority 0 | Children: 2 | Depth: 2
										Found children || Index 6 | Own Index: 6 | Father Index: 2 | Own Priority 1 | Children: 0 | Depth: 2
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Index: 2
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 9 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 5
										Found children || Index 7 | Own Index: 7 | Father Index: 5 | Own Priority 0 | Children: 0 | Depth: 3
										Found children || Index 8 | Own Index: 8 | Father Index: 5 | Own Priority 1 | Children: 0 | Depth: 3
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 6 | Index: 5
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 9 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 7
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 7 | Index: 7
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 9 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 8
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 8 | Index: 8
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 9 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 6
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 9 | Index: 6
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 9 | Stack size: 0
							<<-- "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" |
							-->> "bool User::Tree<Payload>::operator==(User::Tree<Payload>&) [with Payload = User::Equation::Token]" |
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef9cc | Begin: 1 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 0 | Stack size: 1
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef99c | Begin: 1 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 0 | Stack size: 1
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef9fc | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 9 | Stack size: 0
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa2c | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 9 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 0
										Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 2 | Depth: 1
										Found children || Index 4 | Own Index: 4 | Father Index: 0 | Own Priority 1 | Children: 2 | Depth: 1
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 1 | Index: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 0
										Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 2 | Depth: 1
										Found children || Index 2 | Own Index: 2 | Father Index: 0 | Own Priority 1 | Children: 2 | Depth: 1
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 1 | Index: 0
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef9fc | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 9 | Stack size: 0
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa2c | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 9 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 1
										Found children || Index 2 | Own Index: 2 | Father Index: 1 | Own Priority 0 | Children: 0 | Depth: 2
										Found children || Index 3 | Own Index: 3 | Father Index: 1 | Own Priority 1 | Children: 0 | Depth: 2
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 2 | Index: 1
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 1
										Found children || Index 3 | Own Index: 3 | Father Index: 1 | Own Priority 0 | Children: 0 | Depth: 2
										Found children || Index 4 | Own Index: 4 | Father Index: 1 | Own Priority 1 | Children: 0 | Depth: 2
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 2 | Index: 1
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef9fc | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 9 | Stack size: 0
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa2c | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 9 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 2
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 3 | Index: 2
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 3
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 3 | Index: 3
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef9fc | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 9 | Stack size: 0
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa2c | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 9 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 3
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 4 | Index: 3
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 4
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 4 | Index: 4
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef9fc | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 9 | Stack size: 0
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa2c | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 9 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 4
										Found children || Index 5 | Own Index: 5 | Father Index: 4 | Own Priority 0 | Children: 2 | Depth: 2
										Found children || Index 8 | Own Index: 8 | Father Index: 4 | Own Priority 1 | Children: 0 | Depth: 2
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Index: 4
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 2
										Found children || Index 5 | Own Index: 5 | Father Index: 2 | Own Priority 0 | Children: 2 | Depth: 2
										Found children || Index 6 | Own Index: 6 | Father Index: 2 | Own Priority 1 | Children: 0 | Depth: 2
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Index: 2
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef9fc | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 9 | Stack size: 0
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa2c | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 9 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 5
										Found children || Index 6 | Own Index: 6 | Father Index: 5 | Own Priority 0 | Children: 0 | Depth: 3
										Found children || Index 7 | Own Index: 7 | Father Index: 5 | Own Priority 1 | Children: 0 | Depth: 3
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 6 | Index: 5
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 5
										Found children || Index 7 | Own Index: 7 | Father Index: 5 | Own Priority 0 | Children: 0 | Depth: 3
										Found children || Index 8 | Own Index: 8 | Father Index: 5 | Own Priority 1 | Children: 0 | Depth: 3
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 6 | Index: 5
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef9fc | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 9 | Stack size: 0
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa2c | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 9 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 6
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 7 | Index: 6
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 7
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 7 | Index: 7
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef9fc | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 9 | Stack size: 0
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa2c | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 9 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 7
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 8 | Index: 7
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 8
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 8 | Index: 8
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef9fc | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 9 | Stack size: 0
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa2c | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 9 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 8
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 9 | Index: 8
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 6
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 9 | Index: 6
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef9fc | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 9 | Stack size: 0
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa2c | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 9 | Stack size: 0
							<<-- "bool User::Tree<Payload>::operator==(User::Tree<Payload>&) [with Payload = User::Equation::Token]" | Same
							-->> "static bool User::Equation::convert_token_tree_to_array(User::Tree<User::Equation::Token>&, std::vector<User::Equation::Token>&)" |
								-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" | Object: 007efd18, Index: 0
								<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" |
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa30 | Begin: 1 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 0 | Stack size: 1
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa60 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 9 | Stack size: 0
								Token:  = | Type: 2 | Priority: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 0
										Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 2 | Depth: 1
										Found children || Index 4 | Own Index: 4 | Father Index: 0 | Own Priority 1 | Children: 2 | Depth: 1
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 1 | Index: 0
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa60 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 9 | Stack size: 0
								Token:  * | Type: 2 | Priority: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 1
										Found children || Index 2 | Own Index: 2 | Father Index: 1 | Own Priority 0 | Children: 0 | Depth: 2
										Found children || Index 3 | Own Index: 3 | Father Index: 1 | Own Priority 1 | Children: 0 | Depth: 2
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 2 | Index: 1
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa60 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 9 | Stack size: 0
								Token:  3 | Type: 0 | Priority: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 2
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 3 | Index: 2
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa60 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 9 | Stack size: 0
								Token:  X | Type: 1 | Priority: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 3
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 4 | Index: 3
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa60 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 9 | Stack size: 0
								Token:  + | Type: 2 | Priority: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 4
										Found children || Index 5 | Own Index: 5 | Father Index: 4 | Own Priority 0 | Children: 2 | Depth: 2
										Found children || Index 8 | Own Index: 8 | Father Index: 4 | Own Priority 1 | Children: 0 | Depth: 2
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Index: 4
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa60 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 9 | Stack size: 0
								Token:  * | Type: 2 | Priority: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 5
										Found children || Index 6 | Own Index: 6 | Father Index: 5 | Own Priority 0 | Children: 0 | Depth: 3
										Found children || Index 7 | Own Index: 7 | Father Index: 5 | Own Priority 1 | Children: 0 | Depth: 3
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 6 | Index: 5
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa60 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 9 | Stack size: 0
								Token:  5 | Type: 0 | Priority: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 6
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 7 | Index: 6
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa60 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 9 | Stack size: 0
								Token:  Y | Type: 1 | Priority: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 7
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 8 | Index: 7
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa60 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 9 | Stack size: 0
								Token:  C | Type: 1 | Priority: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 8
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 9 | Index: 8
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa60 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 9 | Stack size: 0
							<<-- "static bool User::Equation::convert_token_tree_to_array(User::Tree<User::Equation::Token>&, std::vector<User::Equation::Token>&)" |
							PASS pattern: 12
							-->> "User::Tree<Payload>::~Tree() [with Payload = User::Equation::Token]" | This: 007efc40
							<<-- "User::Tree<Payload>::~Tree() [with Payload = User::Equation::Token]" |
							-->> "User::Tree<Payload>::~Tree() [with Payload = User::Equation::Token]" | This: 007efbf4
							<<-- "User::Tree<Payload>::~Tree() [with Payload = User::Equation::Token]" |
							PATTERN13 >Pippo=Pluto+self_awareness<
							-->> "bool User::Equation::parse(std::__cxx11::string)" | Parse: Pippo=Pluto+self_awareness | Size: 26
								-->> "static bool User::Equation::equation_to_token_array(std::__cxx11::string, std::vector<std::__cxx11::basic_string<char> >&, std::vector<User::Equation::Token>&)" | Parse: Pippo=Pluto+self_awareness | Size: 26
									SEEK_NEXT_TOKEN | Decode: >>P<<
									-->> "static bool User::Equation::is_symbol(char)" | Digit: >>P<<
									<<-- "static bool User::Equation::is_symbol(char)" | Y
									TOKEN_SYMBOL | Decode: >>i<<
									-->> "static bool User::Equation::is_symbol(char)" | Digit: >>i<<
									<<-- "static bool User::Equation::is_symbol(char)" | Y
									TOKEN_SYMBOL | Decode: >>p<<
									-->> "static bool User::Equation::is_symbol(char)" | Digit: >>p<<
									<<-- "static bool User::Equation::is_symbol(char)" | Y
									TOKEN_SYMBOL | Decode: >>p<<
									-->> "static bool User::Equation::is_symbol(char)" | Digit: >>p<<
									<<-- "static bool User::Equation::is_symbol(char)" | Y
									TOKEN_SYMBOL | Decode: >>o<<
									-->> "static bool User::Equation::is_symbol(char)" | Digit: >>o<<
									<<-- "static bool User::Equation::is_symbol(char)" | Y
									TOKEN_SYMBOL | Decode: >>=<<
									-->> "static bool User::Equation::is_symbol(char)" | Digit: >>=<<
									<<-- "static bool User::Equation::is_symbol(char)" | N
									Token fully decoded:  Pippo | type: 1 | size: 5
									Tokens decoded: 1
									SEEK_NEXT_TOKEN | Decode: >>=<<
									-->> "static bool User::Equation::is_symbol(char)" | Digit: >>=<<
									<<-- "static bool User::Equation::is_symbol(char)" | N
									-->> "static bool User::Equation::is_operator(char)" | Digit: >>=<<
									<<-- "static bool User::Equation::is_operator(char)" | Y
									Operator detected: >>=<< | Token: =
									Token fully decoded:  = | type: 2 | size: 1
									Tokens decoded: 2
									SEEK_NEXT_TOKEN | Decode: >>P<<
									-->> "static bool User::Equation::is_symbol(char)" | Digit: >>P<<
									<<-- "static bool User::Equation::is_symbol(char)" | Y
									TOKEN_SYMBOL | Decode: >>l<<
									-->> "static bool User::Equation::is_symbol(char)" | Digit: >>l<<
									<<-- "static bool User::Equation::is_symbol(char)" | Y
									TOKEN_SYMBOL | Decode: >>u<<
									-->> "static bool User::Equation::is_symbol(char)" | Digit: >>u<<
									<<-- "static bool User::Equation::is_symbol(char)" | Y
									TOKEN_SYMBOL | Decode: >>t<<
									-->> "static bool User::Equation::is_symbol(char)" | Digit: >>t<<
									<<-- "static bool User::Equation::is_symbol(char)" | Y
									TOKEN_SYMBOL | Decode: >>o<<
									-->> "static bool User::Equation::is_symbol(char)" | Digit: >>o<<
									<<-- "static bool User::Equation::is_symbol(char)" | Y
									TOKEN_SYMBOL | Decode: >>+<<
									-->> "static bool User::Equation::is_symbol(char)" | Digit: >>+<<
									<<-- "static bool User::Equation::is_symbol(char)" | N
									Token fully decoded:  Pluto | type: 1 | size: 5
									Tokens decoded: 3
									SEEK_NEXT_TOKEN | Decode: >>+<<
									-->> "static bool User::Equation::is_symbol(char)" | Digit: >>+<<
									<<-- "static bool User::Equation::is_symbol(char)" | N
									-->> "static bool User::Equation::is_operator(char)" | Digit: >>+<<
									<<-- "static bool User::Equation::is_operator(char)" | Y
									Operator detected: >>+<< | Token: +
									Token fully decoded:  + | type: 2 | size: 1
									Tokens decoded: 4
									SEEK_NEXT_TOKEN | Decode: >>s<<
									-->> "static bool User::Equation::is_symbol(char)" | Digit: >>s<<
									<<-- "static bool User::Equation::is_symbol(char)" | Y
									TOKEN_SYMBOL | Decode: >>e<<
									-->> "static bool User::Equation::is_symbol(char)" | Digit: >>e<<
									<<-- "static bool User::Equation::is_symbol(char)" | Y
									TOKEN_SYMBOL | Decode: >>l<<
									-->> "static bool User::Equation::is_symbol(char)" | Digit: >>l<<
									<<-- "static bool User::Equation::is_symbol(char)" | Y
									TOKEN_SYMBOL | Decode: >>f<<
									-->> "static bool User::Equation::is_symbol(char)" | Digit: >>f<<
									<<-- "static bool User::Equation::is_symbol(char)" | Y
									TOKEN_SYMBOL | Decode: >>_<<
									-->> "static bool User::Equation::is_symbol(char)" | Digit: >>_<<
									<<-- "static bool User::Equation::is_symbol(char)" | Y
									TOKEN_SYMBOL | Decode: >>a<<
									-->> "static bool User::Equation::is_symbol(char)" | Digit: >>a<<
									<<-- "static bool User::Equation::is_symbol(char)" | Y
									TOKEN_SYMBOL | Decode: >>w<<
									-->> "static bool User::Equation::is_symbol(char)" | Digit: >>w<<
									<<-- "static bool User::Equation::is_symbol(char)" | Y
									TOKEN_SYMBOL | Decode: >>a<<
									-->> "static bool User::Equation::is_symbol(char)" | Digit: >>a<<
									<<-- "static bool User::Equation::is_symbol(char)" | Y
									TOKEN_SYMBOL | Decode: >>r<<
									-->> "static bool User::Equation::is_symbol(char)" | Digit: >>r<<
									<<-- "static bool User::Equation::is_symbol(char)" | Y
									TOKEN_SYMBOL | Decode: >>e<<
									-->> "static bool User::Equation::is_symbol(char)" | Digit: >>e<<
									<<-- "static bool User::Equation::is_symbol(char)" | Y
									TOKEN_SYMBOL | Decode: >>n<<
									-->> "static bool User::Equation::is_symbol(char)" | Digit: >>n<<
									<<-- "static bool User::Equation::is_symbol(char)" | Y
									TOKEN_SYMBOL | Decode: >>e<<
									-->> "static bool User::Equation::is_symbol(char)" | Digit: >>e<<
									<<-- "static bool User::Equation::is_symbol(char)" | Y
									TOKEN_SYMBOL | Decode: >>s<<
									-->> "static bool User::Equation::is_symbol(char)" | Digit: >>s<<
									<<-- "static bool User::Equation::is_symbol(char)" | Y
									TOKEN_SYMBOL | Decode: >>s<<
									-->> "static bool User::Equation::is_symbol(char)" | Digit: >>s<<
									<<-- "static bool User::Equation::is_symbol(char)" | Y
									Token fully decoded:  self_awareness | type: 1 | size: 14
									Tokens decoded: 5
									Equations decoded into 5 tokens
									Token: >>Pippo<< | Type: 1 | Size: 5
									Token: >>=<< | Type: 2 | Size: 1
									Token: >>Pluto<< | Type: 1 | Size: 5
									Token: >>+<< | Type: 2 | Size: 1
									Token: >>self_awareness<< | Type: 1 | Size: 14
								<<-- "static bool User::Equation::equation_to_token_array(std::__cxx11::string, std::vector<std::__cxx11::basic_string<char> >&, std::vector<User::Equation::Token>&)" | Decoded 5 tokens
								Tree wasn't empty: 9 | FLUSH
								-->> "bool User::Tree<Payload>::flush() [with Payload = User::Equation::Token]" | Nodes inside the tree: 9
									-->> "bool User::Tree<Payload>::init_root() [with Payload = User::Equation::Token]" |
									<<-- "bool User::Tree<Payload>::init_root() [with Payload = User::Equation::Token]" |
								<<-- "bool User::Tree<Payload>::flush() [with Payload = User::Equation::Token]" | Nodes inside the tree: 1
								-->> "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | Token Array Size: 5 | Father 0
									-->> "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 5
										Token   0 | >Pippo< | Open Close Priority: 0 | Symbol Priority 4 
										Token   1 | >=< | Open Close Priority: 0 | Symbol Priority 0 
										Token   2 | >Pluto< | Open Close Priority: 0 | Symbol Priority 4 
										Token   3 | >+< | Open Close Priority: 0 | Symbol Priority 3 
										Token   4 | >self_awareness< | Open Close Priority: 0 | Symbol Priority 4 
										Candidate   0 | >Pippo< | Open Close Priority 0 | Symbol Priority 4 | Min Priority 0 | Default
										Candidate   1 | >=< | Open Close Priority 0 | Symbol Priority 0 | Min Priority 0
										Ignore   2 | >Pluto< | Open Close Priority 0 | Symbol Priority 4 | Min Priority 0 | Best Priority 0
										Ignore   3 | >+< | Open Close Priority 0 | Symbol Priority 3 | Min Priority 0 | Best Priority 0
										Ignore   4 | >self_awareness< | Open Close Priority 0 | Symbol Priority 4 | Min Priority 0 | Best Priority 0
										Token   1 | >=< | Highest priority token
									<<-- "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 5 | Highest Priority Token: <=> | 0 0
									Core Token: >=< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 0
									LHS: >Pippo<
									RHS: >Pluto<
									RHS: >+<
									RHS: >self_awareness<
									LHS Tokens: 1 | RHS Tokens: 3
									ROOT: >=<
									-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" | Object: 007efd18, Index: 0
									<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" |
									LHS: >=<
									-->> "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | Token Array Size: 1 | Father 0
										-->> "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1
											Token   0 | >Pippo< | Open Close Priority: 0 | Symbol Priority 4 
											Candidate   0 | >Pippo< | Open Close Priority 0 | Symbol Priority 4 | Min Priority 0 | Default
											Token   0 | >Pippo< | Highest priority token
										<<-- "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1 | Highest Priority Token: <Pippo> | 0 4
										Core Token: >Pippo< | Size: 5 | Open/Close Priority: 0 | Symbol Priority: 4
										LHS Tokens: 0 | RHS Tokens: 0
										-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" | Object: 007efd18, Index: 0
										<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" |
										-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
										<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 0 | Own Index: 1 | Nodes under Father: 2
									<<-- "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | PASS
									LHS of size 1 under father 0
									-->> "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | Token Array Size: 3 | Father 0
										-->> "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 3
											Token   0 | >Pluto< | Open Close Priority: 0 | Symbol Priority 4 
											Token   1 | >+< | Open Close Priority: 0 | Symbol Priority 3 
											Token   2 | >self_awareness< | Open Close Priority: 0 | Symbol Priority 4 
											Candidate   0 | >Pluto< | Open Close Priority 0 | Symbol Priority 4 | Min Priority 0 | Default
											Candidate   1 | >+< | Open Close Priority 0 | Symbol Priority 3 | Min Priority 0
											Ignore   2 | >self_awareness< | Open Close Priority 0 | Symbol Priority 4 | Min Priority 0 | Best Priority 3
											Token   1 | >+< | Highest priority token
										<<-- "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 3 | Highest Priority Token: <+> | 0 3
										Core Token: >+< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 3
										LHS: >Pluto<
										RHS: >self_awareness<
										LHS Tokens: 1 | RHS Tokens: 1
										-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
										<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 0 | Own Index: 2 | Nodes under Father: 3
										-->> "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | Token Array Size: 1 | Father 2
											-->> "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1
												Token   0 | >Pluto< | Open Close Priority: 0 | Symbol Priority 4 
												Candidate   0 | >Pluto< | Open Close Priority 0 | Symbol Priority 4 | Min Priority 0 | Default
												Token   0 | >Pluto< | Highest priority token
											<<-- "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1 | Highest Priority Token: <Pluto> | 0 4
											Core Token: >Pluto< | Size: 5 | Open/Close Priority: 0 | Symbol Priority: 4
											LHS Tokens: 0 | RHS Tokens: 0
											-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
											<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 2 | Own Index: 3 | Nodes under Father: 2
										<<-- "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | PASS
										LHS of size 1 under father 2
										-->> "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | Token Array Size: 1 | Father 2
											-->> "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1
												Token   0 | >self_awareness< | Open Close Priority: 0 | Symbol Priority 4 
												Candidate   0 | >self_awareness< | Open Close Priority 0 | Symbol Priority 4 | Min Priority 0 | Default
												Token   0 | >self_awareness< | Highest priority token
											<<-- "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1 | Highest Priority Token: <self_awareness> | 0 4
											Core Token: >self_awareness< | Size: 14 | Open/Close Priority: 0 | Symbol Priority: 4
											LHS Tokens: 0 | RHS Tokens: 0
											-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
											<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 2 | Own Index: 4 | Nodes under Father: 3
										<<-- "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | PASS
										RHS of size 1 under father 2
									<<-- "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | PASS
									RHS of size 3 under father 0
								<<-- "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | PASS
								-->> "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" | Index: 0
									-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef904 | Begin: 1 | Index: 0
									<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 0 | Stack size: 1
									-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef934 | Begin: 0 | Index: 0
									<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
									-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
										-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 0
											Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 0 | Depth: 1
											Found children || Index 2 | Own Index: 2 | Father Index: 0 | Own Priority 1 | Children: 2 | Depth: 1
										<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
									<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 1 | Index: 0
									-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef934 | Begin: 0 | Index: 0
									<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
									-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
										-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 1
										<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
									<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 2 | Index: 1
									-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef934 | Begin: 0 | Index: 0
									<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
									-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
										-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 2
											Found children || Index 3 | Own Index: 3 | Father Index: 2 | Own Priority 0 | Children: 0 | Depth: 2
											Found children || Index 4 | Own Index: 4 | Father Index: 2 | Own Priority 1 | Children: 0 | Depth: 2
										<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
									<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 3 | Index: 2
									-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef934 | Begin: 0 | Index: 0
									<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
									-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
										-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 3
										<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
									<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 4 | Index: 3
									-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef934 | Begin: 0 | Index: 0
									<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
									-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
										-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 4
										<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
									<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Index: 4
									-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef934 | Begin: 0 | Index: 0
									<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
								<<-- "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" |
							<<-- "bool User::Equation::parse(std::__cxx11::string)" | Token array size: 5 | Token tree size: 5
							TOKEN0
							TOKEN1
							TOKEN2
							TOKEN3
							TOKEN4
							-->> "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" | Index: 0
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa54 | Begin: 1 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 0 | Stack size: 1
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 0
										Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 0 | Depth: 1
										Found children || Index 2 | Own Index: 2 | Father Index: 0 | Own Priority 1 | Children: 2 | Depth: 1
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 1 | Index: 0
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 1
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 2 | Index: 1
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 2
										Found children || Index 3 | Own Index: 3 | Father Index: 2 | Own Priority 0 | Children: 0 | Depth: 2
										Found children || Index 4 | Own Index: 4 | Father Index: 2 | Own Priority 1 | Children: 0 | Depth: 2
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 3 | Index: 2
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 3
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 4 | Index: 3
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 4
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Index: 4
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
							<<-- "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" |
							-->> "User::Tree<Payload>::Tree(std::vector<User::Tree<Payload>::St_minimal_node>) [with Payload = User::Equation::Token]" | This: 007efc40 | Nodes: 5
								-->> "bool User::Tree<Payload>::init_class_vars(Payload) [with Payload = User::Equation::Token]" |
								<<-- "bool User::Tree<Payload>::init_class_vars(Payload) [with Payload = User::Equation::Token]" |
								-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
								<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 0 | Own Index: 1 | Nodes under Father: 2
								-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
								<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 0 | Own Index: 2 | Nodes under Father: 3
								-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
								<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 2 | Own Index: 3 | Nodes under Father: 2
								-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
								<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 2 | Own Index: 4 | Nodes under Father: 3
								-->> "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" | Index: 0
									-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa54 | Begin: 1 | Index: 0
									<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 0 | Stack size: 1
									-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
									<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
									-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
										-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 0
											Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 0 | Depth: 1
											Found children || Index 2 | Own Index: 2 | Father Index: 0 | Own Priority 1 | Children: 2 | Depth: 1
										<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
									<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 1 | Index: 0
									-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
									<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
									-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
										-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 1
										<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
									<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 2 | Index: 1
									-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
									<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
									-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
										-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 2
											Found children || Index 3 | Own Index: 3 | Father Index: 2 | Own Priority 0 | Children: 0 | Depth: 2
											Found children || Index 4 | Own Index: 4 | Father Index: 2 | Own Priority 1 | Children: 0 | Depth: 2
										<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
									<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 3 | Index: 2
									-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
									<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
									-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
										-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 3
										<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
									<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 4 | Index: 3
									-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
									<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
									-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
										-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 4
										<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
									<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Index: 4
									-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
									<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
								<<-- "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" |
								-->> "bool User::Tree<Payload>::operator==(User::Tree<Payload>&) [with Payload = User::Equation::Token]" |
									-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef9cc | Begin: 1 | Index: 0
									<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 0 | Stack size: 1
									-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef99c | Begin: 1 | Index: 0
									<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 0 | Stack size: 1
									-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef9fc | Begin: 0 | Index: 0
									<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
									-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa2c | Begin: 0 | Index: 0
									<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
									-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
										-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 0
											Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 0 | Depth: 1
											Found children || Index 2 | Own Index: 2 | Father Index: 0 | Own Priority 1 | Children: 2 | Depth: 1
										<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
									<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 1 | Index: 0
									-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
										-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 0
											Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 0 | Depth: 1
											Found children || Index 2 | Own Index: 2 | Father Index: 0 | Own Priority 1 | Children: 2 | Depth: 1
										<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
									<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 1 | Index: 0
									-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef9fc | Begin: 0 | Index: 0
									<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
									-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa2c | Begin: 0 | Index: 0
									<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
									-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
										-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 1
										<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
									<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 2 | Index: 1
									-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
										-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 1
										<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
									<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 2 | Index: 1
									-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef9fc | Begin: 0 | Index: 0
									<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
									-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa2c | Begin: 0 | Index: 0
									<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
									-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
										-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 2
											Found children || Index 3 | Own Index: 3 | Father Index: 2 | Own Priority 0 | Children: 0 | Depth: 2
											Found children || Index 4 | Own Index: 4 | Father Index: 2 | Own Priority 1 | Children: 0 | Depth: 2
										<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
									<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 3 | Index: 2
									-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
										-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 2
											Found children || Index 3 | Own Index: 3 | Father Index: 2 | Own Priority 0 | Children: 0 | Depth: 2
											Found children || Index 4 | Own Index: 4 | Father Index: 2 | Own Priority 1 | Children: 0 | Depth: 2
										<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
									<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 3 | Index: 2
									-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef9fc | Begin: 0 | Index: 0
									<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
									-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa2c | Begin: 0 | Index: 0
									<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
									-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
										-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 3
										<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
									<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 4 | Index: 3
									-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
										-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 3
										<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
									<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 4 | Index: 3
									-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef9fc | Begin: 0 | Index: 0
									<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
									-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa2c | Begin: 0 | Index: 0
									<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
									-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
										-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 4
										<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
									<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Index: 4
									-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
										-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 4
										<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
									<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Index: 4
									-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef9fc | Begin: 0 | Index: 0
									<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
									-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa2c | Begin: 0 | Index: 0
									<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
								<<-- "bool User::Tree<Payload>::operator==(User::Tree<Payload>&) [with Payload = User::Equation::Token]" | Same
								-->> "static bool User::Equation::convert_token_tree_to_array(User::Tree<User::Equation::Token>&, std::vector<User::Equation::Token>&)" |
									-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" | Object: 007efd18, Index: 0
									<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa30 | Begin: 1 | Index: 0
									<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 0 | Stack size: 1
									-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa60 | Begin: 0 | Index: 0
									<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
									Token:  = | Type: 2 | Priority: 0
									-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
										-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 0
											Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 0 | Depth: 1
											Found children || Index 2 | Own Index: 2 | Father Index: 0 | Own Priority 1 | Children: 2 | Depth: 1
										<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
									<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 1 | Index: 0
									-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa60 | Begin: 0 | Index: 0
									<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
									Token:  Pippo | Type: 1 | Priority: 0
									-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
										-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 1
										<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
									<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 2 | Index: 1
									-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa60 | Begin: 0 | Index: 0
									<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
									Token:  + | Type: 2 | Priority: 0
									-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
										-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 2
											Found children || Index 3 | Own Index: 3 | Father Index: 2 | Own Priority 0 | Children: 0 | Depth: 2
											Found children || Index 4 | Own Index: 4 | Father Index: 2 | Own Priority 1 | Children: 0 | Depth: 2
										<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
									<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 3 | Index: 2
									-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa60 | Begin: 0 | Index: 0
									<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
									Token:  Pluto | Type: 1 | Priority: 0
									-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
										-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 3
										<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
									<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 4 | Index: 3
									-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa60 | Begin: 0 | Index: 0
									<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
									Token:  self_awareness | Type: 1 | Priority: 0
									-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
										-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 4
										<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
									<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Index: 4
									-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa60 | Begin: 0 | Index: 0
									<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Stack size: 0
								<<-- "static bool User::Equation::convert_token_tree_to_array(User::Tree<User::Equation::Token>&, std::vector<User::Equation::Token>&)" |
								PASS pattern: 13
								-->> "User::Tree<Payload>::~Tree() [with Payload = User::Equation::Token]" | This: 007efc40
								<<-- "User::Tree<Payload>::~Tree() [with Payload = User::Equation::Token]" |
								-->> "User::Tree<Payload>::~Tree() [with Payload = User::Equation::Token]" | This: 007efbf4
								<<-- "User::Tree<Payload>::~Tree() [with Payload = User::Equation::Token]" |
								PATTERN14 >3=1+1+1<
								-->> "bool User::Equation::parse(std::__cxx11::string)" | Parse: 3=1+1+1 | Size: 7
									-->> "static bool User::Equation::equation_to_token_array(std::__cxx11::string, std::vector<std::__cxx11::basic_string<char> >&, std::vector<User::Equation::Token>&)" | Parse: 3=1+1+1 | Size: 7
										SEEK_NEXT_TOKEN | Decode: >>3<<
										TOKEN_NUMBER | Decode: >>=<<
										Token fully decoded:  3 | type: 0 | size: 1
										Tokens decoded: 1
										SEEK_NEXT_TOKEN | Decode: >>=<<
										-->> "static bool User::Equation::is_symbol(char)" | Digit: >>=<<
										<<-- "static bool User::Equation::is_symbol(char)" | N
										-->> "static bool User::Equation::is_operator(char)" | Digit: >>=<<
										<<-- "static bool User::Equation::is_operator(char)" | Y
										Operator detected: >>=<< | Token: =
										Token fully decoded:  = | type: 2 | size: 1
										Tokens decoded: 2
										SEEK_NEXT_TOKEN | Decode: >>1<<
										TOKEN_NUMBER | Decode: >>+<<
										Token fully decoded:  1 | type: 0 | size: 1
										Tokens decoded: 3
										SEEK_NEXT_TOKEN | Decode: >>+<<
										-->> "static bool User::Equation::is_symbol(char)" | Digit: >>+<<
										<<-- "static bool User::Equation::is_symbol(char)" | N
										-->> "static bool User::Equation::is_operator(char)" | Digit: >>+<<
										<<-- "static bool User::Equation::is_operator(char)" | Y
										Operator detected: >>+<< | Token: +
										Token fully decoded:  + | type: 2 | size: 1
										Tokens decoded: 4
										SEEK_NEXT_TOKEN | Decode: >>1<<
										TOKEN_NUMBER | Decode: >>+<<
										Token fully decoded:  1 | type: 0 | size: 1
										Tokens decoded: 5
										SEEK_NEXT_TOKEN | Decode: >>+<<
										-->> "static bool User::Equation::is_symbol(char)" | Digit: >>+<<
										<<-- "static bool User::Equation::is_symbol(char)" | N
										-->> "static bool User::Equation::is_operator(char)" | Digit: >>+<<
										<<-- "static bool User::Equation::is_operator(char)" | Y
										Operator detected: >>+<< | Token: +
										Token fully decoded:  + | type: 2 | size: 1
										Tokens decoded: 6
										SEEK_NEXT_TOKEN | Decode: >>1<<
										Token fully decoded:  1 | type: 0 | size: 1
										Tokens decoded: 7
										Equations decoded into 7 tokens
										Token: >>3<< | Type: 0 | Size: 1
										Token: >>=<< | Type: 2 | Size: 1
										Token: >>1<< | Type: 0 | Size: 1
										Token: >>+<< | Type: 2 | Size: 1
										Token: >>1<< | Type: 0 | Size: 1
										Token: >>+<< | Type: 2 | Size: 1
										Token: >>1<< | Type: 0 | Size: 1
									<<-- "static bool User::Equation::equation_to_token_array(std::__cxx11::string, std::vector<std::__cxx11::basic_string<char> >&, std::vector<User::Equation::Token>&)" | Decoded 7 tokens
									Tree wasn't empty: 5 | FLUSH
									-->> "bool User::Tree<Payload>::flush() [with Payload = User::Equation::Token]" | Nodes inside the tree: 5
										-->> "bool User::Tree<Payload>::init_root() [with Payload = User::Equation::Token]" |
										<<-- "bool User::Tree<Payload>::init_root() [with Payload = User::Equation::Token]" |
									<<-- "bool User::Tree<Payload>::flush() [with Payload = User::Equation::Token]" | Nodes inside the tree: 1
									-->> "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | Token Array Size: 7 | Father 0
										-->> "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 7
											Token   0 | >3< | Open Close Priority: 0 | Symbol Priority 5 
											Token   1 | >=< | Open Close Priority: 0 | Symbol Priority 0 
											Token   2 | >1< | Open Close Priority: 0 | Symbol Priority 5 
											Token   3 | >+< | Open Close Priority: 0 | Symbol Priority 3 
											Token   4 | >1< | Open Close Priority: 0 | Symbol Priority 5 
											Token   5 | >+< | Open Close Priority: 0 | Symbol Priority 3 
											Token   6 | >1< | Open Close Priority: 0 | Symbol Priority 5 
											Candidate   0 | >3< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Default
											Candidate   1 | >=< | Open Close Priority 0 | Symbol Priority 0 | Min Priority 0
											Ignore   2 | >1< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Best Priority 0
											Ignore   3 | >+< | Open Close Priority 0 | Symbol Priority 3 | Min Priority 0 | Best Priority 0
											Ignore   4 | >1< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Best Priority 0
											Ignore   5 | >+< | Open Close Priority 0 | Symbol Priority 3 | Min Priority 0 | Best Priority 0
											Ignore   6 | >1< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Best Priority 0
											Token   1 | >=< | Highest priority token
										<<-- "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 7 | Highest Priority Token: <=> | 0 0
										Core Token: >=< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 0
										LHS: >3<
										RHS: >1<
										RHS: >+<
										RHS: >1<
										RHS: >+<
										RHS: >1<
										LHS Tokens: 1 | RHS Tokens: 5
										ROOT: >=<
										-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" | Object: 007efd18, Index: 0
										<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" |
										LHS: >=<
										-->> "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | Token Array Size: 1 | Father 0
											-->> "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1
												Token   0 | >3< | Open Close Priority: 0 | Symbol Priority 5 
												Candidate   0 | >3< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Default
												Token   0 | >3< | Highest priority token
											<<-- "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1 | Highest Priority Token: <3> | 0 5
											Core Token: >3< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 5
											LHS Tokens: 0 | RHS Tokens: 0
											-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" | Object: 007efd18, Index: 0
											<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" |
											-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
											<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 0 | Own Index: 1 | Nodes under Father: 2
										<<-- "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | PASS
										LHS of size 1 under father 0
										-->> "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | Token Array Size: 5 | Father 0
											-->> "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 5
												Token   0 | >1< | Open Close Priority: 0 | Symbol Priority 5 
												Token   1 | >+< | Open Close Priority: 0 | Symbol Priority 3 
												Token   2 | >1< | Open Close Priority: 0 | Symbol Priority 5 
												Token   3 | >+< | Open Close Priority: 0 | Symbol Priority 3 
												Token   4 | >1< | Open Close Priority: 0 | Symbol Priority 5 
												Candidate   0 | >1< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Default
												Candidate   1 | >+< | Open Close Priority 0 | Symbol Priority 3 | Min Priority 0
												Ignore   2 | >1< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Best Priority 3
												Ignore   3 | >+< | Open Close Priority 0 | Symbol Priority 3 | Min Priority 0 | Best Priority 3
												Ignore   4 | >1< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Best Priority 3
												Token   1 | >+< | Highest priority token
											<<-- "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 5 | Highest Priority Token: <+> | 0 3
											Core Token: >+< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 3
											LHS: >1<
											RHS: >1<
											RHS: >+<
											RHS: >1<
											LHS Tokens: 1 | RHS Tokens: 3
											-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
											<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 0 | Own Index: 2 | Nodes under Father: 3
											-->> "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | Token Array Size: 1 | Father 2
												-->> "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1
												Token   0 | >1< | Open Close Priority: 0 | Symbol Priority 5 
												Candidate   0 | >1< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Default
												Token   0 | >1< | Highest priority token
											<<-- "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1 | Highest Priority Token: <1> | 0 5
											Core Token: >1< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 5
											LHS Tokens: 0 | RHS Tokens: 0
											-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
											<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 2 | Own Index: 3 | Nodes under Father: 2
										<<-- "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | PASS
										LHS of size 1 under father 2
										-->> "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | Token Array Size: 3 | Father 2
											-->> "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 3
												Token   0 | >1< | Open Close Priority: 0 | Symbol Priority 5 
												Token   1 | >+< | Open Close Priority: 0 | Symbol Priority 3 
												Token   2 | >1< | Open Close Priority: 0 | Symbol Priority 5 
												Candidate   0 | >1< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Default
												Candidate   1 | >+< | Open Close Priority 0 | Symbol Priority 3 | Min Priority 0
												Ignore   2 | >1< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Best Priority 3
												Token   1 | >+< | Highest priority token
											<<-- "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 3 | Highest Priority Token: <+> | 0 3
											Core Token: >+< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 3
											LHS: >1<
											RHS: >1<
											LHS Tokens: 1 | RHS Tokens: 1
											-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
											<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 2 | Own Index: 4 | Nodes under Father: 3
											-->> "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | Token Array Size: 1 | Father 4
												-->> "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1
												Token   0 | >1< | Open Close Priority: 0 | Symbol Priority 5 
												Candidate   0 | >1< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Default
												Token   0 | >1< | Highest priority token
											<<-- "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1 | Highest Priority Token: <1> | 0 5
											Core Token: >1< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 5
											LHS Tokens: 0 | RHS Tokens: 0
											-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
											<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 4 | Own Index: 5 | Nodes under Father: 2
										<<-- "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | PASS
										LHS of size 1 under father 4
										-->> "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | Token Array Size: 1 | Father 4
											-->> "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1
												Token   0 | >1< | Open Close Priority: 0 | Symbol Priority 5 
												Candidate   0 | >1< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Default
												Token   0 | >1< | Highest priority token
											<<-- "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1 | Highest Priority Token: <1> | 0 5
											Core Token: >1< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 5
											LHS Tokens: 0 | RHS Tokens: 0
											-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
											<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 4 | Own Index: 6 | Nodes under Father: 3
										<<-- "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | PASS
										RHS of size 1 under father 4
									<<-- "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | PASS
									RHS of size 3 under father 2
								<<-- "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | PASS
								RHS of size 5 under father 0
							<<-- "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | PASS
							-->> "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" | Index: 0
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef904 | Begin: 1 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 0 | Stack size: 1
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef934 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 7 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 0
										Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 0 | Depth: 1
										Found children || Index 2 | Own Index: 2 | Father Index: 0 | Own Priority 1 | Children: 2 | Depth: 1
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 1 | Index: 0
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef934 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 7 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 1
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 2 | Index: 1
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef934 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 7 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 2
										Found children || Index 3 | Own Index: 3 | Father Index: 2 | Own Priority 0 | Children: 0 | Depth: 2
										Found children || Index 4 | Own Index: 4 | Father Index: 2 | Own Priority 1 | Children: 2 | Depth: 2
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 3 | Index: 2
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef934 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 7 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 3
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 4 | Index: 3
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef934 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 7 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 4
										Found children || Index 5 | Own Index: 5 | Father Index: 4 | Own Priority 0 | Children: 0 | Depth: 3
										Found children || Index 6 | Own Index: 6 | Father Index: 4 | Own Priority 1 | Children: 0 | Depth: 3
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Index: 4
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef934 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 7 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 5
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 6 | Index: 5
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef934 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 7 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 6
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 7 | Index: 6
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef934 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 7 | Stack size: 0
							<<-- "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" |
						<<-- "bool User::Equation::parse(std::__cxx11::string)" | Token array size: 7 | Token tree size: 7
						TOKEN0
						TOKEN1
						TOKEN2
						TOKEN3
						TOKEN4
						TOKEN5
						TOKEN6
						-->> "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" | Index: 0
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa54 | Begin: 1 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 0 | Stack size: 1
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 7 | Stack size: 0
							-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
								-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 0
									Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 0 | Depth: 1
									Found children || Index 2 | Own Index: 2 | Father Index: 0 | Own Priority 1 | Children: 2 | Depth: 1
								<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
							<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 1 | Index: 0
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 7 | Stack size: 0
							-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
								-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 1
								<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
							<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 2 | Index: 1
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 7 | Stack size: 0
							-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
								-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 2
									Found children || Index 3 | Own Index: 3 | Father Index: 2 | Own Priority 0 | Children: 0 | Depth: 2
									Found children || Index 4 | Own Index: 4 | Father Index: 2 | Own Priority 1 | Children: 2 | Depth: 2
								<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
							<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 3 | Index: 2
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 7 | Stack size: 0
							-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
								-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 3
								<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
							<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 4 | Index: 3
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 7 | Stack size: 0
							-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
								-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 4
									Found children || Index 5 | Own Index: 5 | Father Index: 4 | Own Priority 0 | Children: 0 | Depth: 3
									Found children || Index 6 | Own Index: 6 | Father Index: 4 | Own Priority 1 | Children: 0 | Depth: 3
								<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
							<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Index: 4
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 7 | Stack size: 0
							-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
								-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 5
								<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
							<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 6 | Index: 5
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 7 | Stack size: 0
							-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
								-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 6
								<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
							<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 7 | Index: 6
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 7 | Stack size: 0
						<<-- "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" |
						-->> "User::Tree<Payload>::Tree(std::vector<User::Tree<Payload>::St_minimal_node>) [with Payload = User::Equation::Token]" | This: 007efc40 | Nodes: 7
							-->> "bool User::Tree<Payload>::init_class_vars(Payload) [with Payload = User::Equation::Token]" |
							<<-- "bool User::Tree<Payload>::init_class_vars(Payload) [with Payload = User::Equation::Token]" |
							-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
							<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 0 | Own Index: 1 | Nodes under Father: 2
							-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
							<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 0 | Own Index: 2 | Nodes under Father: 3
							-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
							<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 2 | Own Index: 3 | Nodes under Father: 2
							-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
							<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 2 | Own Index: 4 | Nodes under Father: 3
							-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
							<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 4 | Own Index: 5 | Nodes under Father: 2
							-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
							<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 4 | Own Index: 6 | Nodes under Father: 3
							-->> "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" | Index: 0
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa54 | Begin: 1 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 0 | Stack size: 1
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 7 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 0
										Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 0 | Depth: 1
										Found children || Index 2 | Own Index: 2 | Father Index: 0 | Own Priority 1 | Children: 2 | Depth: 1
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 1 | Index: 0
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 7 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 1
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 2 | Index: 1
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 7 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 2
										Found children || Index 3 | Own Index: 3 | Father Index: 2 | Own Priority 0 | Children: 0 | Depth: 2
										Found children || Index 4 | Own Index: 4 | Father Index: 2 | Own Priority 1 | Children: 2 | Depth: 2
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 3 | Index: 2
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 7 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 3
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 4 | Index: 3
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 7 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 4
										Found children || Index 5 | Own Index: 5 | Father Index: 4 | Own Priority 0 | Children: 0 | Depth: 3
										Found children || Index 6 | Own Index: 6 | Father Index: 4 | Own Priority 1 | Children: 0 | Depth: 3
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Index: 4
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 7 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 5
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 6 | Index: 5
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 7 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 6
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 7 | Index: 6
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 7 | Stack size: 0
							<<-- "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" |
							-->> "bool User::Tree<Payload>::operator==(User::Tree<Payload>&) [with Payload = User::Equation::Token]" |
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef9cc | Begin: 1 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 0 | Stack size: 1
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef99c | Begin: 1 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 0 | Stack size: 1
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef9fc | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 7 | Stack size: 0
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa2c | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 7 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 0
										Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 0 | Depth: 1
										Found children || Index 2 | Own Index: 2 | Father Index: 0 | Own Priority 1 | Children: 2 | Depth: 1
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 1 | Index: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 0
										Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 0 | Depth: 1
										Found children || Index 2 | Own Index: 2 | Father Index: 0 | Own Priority 1 | Children: 2 | Depth: 1
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 1 | Index: 0
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef9fc | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 7 | Stack size: 0
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa2c | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 7 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 1
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 2 | Index: 1
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 1
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 2 | Index: 1
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef9fc | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 7 | Stack size: 0
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa2c | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 7 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 2
										Found children || Index 3 | Own Index: 3 | Father Index: 2 | Own Priority 0 | Children: 0 | Depth: 2
										Found children || Index 4 | Own Index: 4 | Father Index: 2 | Own Priority 1 | Children: 2 | Depth: 2
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 3 | Index: 2
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 2
										Found children || Index 3 | Own Index: 3 | Father Index: 2 | Own Priority 0 | Children: 0 | Depth: 2
										Found children || Index 4 | Own Index: 4 | Father Index: 2 | Own Priority 1 | Children: 2 | Depth: 2
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 3 | Index: 2
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef9fc | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 7 | Stack size: 0
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa2c | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 7 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 3
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 4 | Index: 3
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 3
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 4 | Index: 3
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef9fc | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 7 | Stack size: 0
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa2c | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 7 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 4
										Found children || Index 5 | Own Index: 5 | Father Index: 4 | Own Priority 0 | Children: 0 | Depth: 3
										Found children || Index 6 | Own Index: 6 | Father Index: 4 | Own Priority 1 | Children: 0 | Depth: 3
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Index: 4
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 4
										Found children || Index 5 | Own Index: 5 | Father Index: 4 | Own Priority 0 | Children: 0 | Depth: 3
										Found children || Index 6 | Own Index: 6 | Father Index: 4 | Own Priority 1 | Children: 0 | Depth: 3
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Index: 4
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef9fc | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 7 | Stack size: 0
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa2c | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 7 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 5
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 6 | Index: 5
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 5
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 6 | Index: 5
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef9fc | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 7 | Stack size: 0
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa2c | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 7 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 6
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 7 | Index: 6
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 6
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 7 | Index: 6
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef9fc | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 7 | Stack size: 0
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa2c | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 7 | Stack size: 0
							<<-- "bool User::Tree<Payload>::operator==(User::Tree<Payload>&) [with Payload = User::Equation::Token]" | Same
							-->> "static bool User::Equation::convert_token_tree_to_array(User::Tree<User::Equation::Token>&, std::vector<User::Equation::Token>&)" |
								-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" | Object: 007efd18, Index: 0
								<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" |
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa30 | Begin: 1 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 0 | Stack size: 1
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa60 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 7 | Stack size: 0
								Token:  = | Type: 2 | Priority: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 0
										Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 0 | Depth: 1
										Found children || Index 2 | Own Index: 2 | Father Index: 0 | Own Priority 1 | Children: 2 | Depth: 1
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 1 | Index: 0
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa60 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 7 | Stack size: 0
								Token:  3 | Type: 0 | Priority: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 1
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 2 | Index: 1
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa60 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 7 | Stack size: 0
								Token:  + | Type: 2 | Priority: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 2
										Found children || Index 3 | Own Index: 3 | Father Index: 2 | Own Priority 0 | Children: 0 | Depth: 2
										Found children || Index 4 | Own Index: 4 | Father Index: 2 | Own Priority 1 | Children: 2 | Depth: 2
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 3 | Index: 2
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa60 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 7 | Stack size: 0
								Token:  1 | Type: 0 | Priority: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 3
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 4 | Index: 3
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa60 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 7 | Stack size: 0
								Token:  + | Type: 2 | Priority: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 4
										Found children || Index 5 | Own Index: 5 | Father Index: 4 | Own Priority 0 | Children: 0 | Depth: 3
										Found children || Index 6 | Own Index: 6 | Father Index: 4 | Own Priority 1 | Children: 0 | Depth: 3
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Index: 4
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa60 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 7 | Stack size: 0
								Token:  1 | Type: 0 | Priority: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 5
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 6 | Index: 5
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa60 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 7 | Stack size: 0
								Token:  1 | Type: 0 | Priority: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 6
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 7 | Index: 6
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa60 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 7 | Stack size: 0
							<<-- "static bool User::Equation::convert_token_tree_to_array(User::Tree<User::Equation::Token>&, std::vector<User::Equation::Token>&)" |
							PASS pattern: 14
							-->> "User::Tree<Payload>::~Tree() [with Payload = User::Equation::Token]" | This: 007efc40
							<<-- "User::Tree<Payload>::~Tree() [with Payload = User::Equation::Token]" |
							-->> "User::Tree<Payload>::~Tree() [with Payload = User::Equation::Token]" | This: 007efbf4
							<<-- "User::Tree<Payload>::~Tree() [with Payload = User::Equation::Token]" |
							PATTERN15 >28=1+2+3+4+5+6+7<
							-->> "bool User::Equation::parse(std::__cxx11::string)" | Parse: 28=1+2+3+4+5+6+7 | Size: 16
								-->> "static bool User::Equation::equation_to_token_array(std::__cxx11::string, std::vector<std::__cxx11::basic_string<char> >&, std::vector<User::Equation::Token>&)" | Parse: 28=1+2+3+4+5+6+7 | Size: 16
									SEEK_NEXT_TOKEN | Decode: >>2<<
									TOKEN_NUMBER | Decode: >>8<<
									TOKEN_NUMBER | Decode: >>=<<
									Token fully decoded:  28 | type: 0 | size: 2
									Tokens decoded: 1
									SEEK_NEXT_TOKEN | Decode: >>=<<
									-->> "static bool User::Equation::is_symbol(char)" | Digit: >>=<<
									<<-- "static bool User::Equation::is_symbol(char)" | N
									-->> "static bool User::Equation::is_operator(char)" | Digit: >>=<<
									<<-- "static bool User::Equation::is_operator(char)" | Y
									Operator detected: >>=<< | Token: =
									Token fully decoded:  = | type: 2 | size: 1
									Tokens decoded: 2
									SEEK_NEXT_TOKEN | Decode: >>1<<
									TOKEN_NUMBER | Decode: >>+<<
									Token fully decoded:  1 | type: 0 | size: 1
									Tokens decoded: 3
									SEEK_NEXT_TOKEN | Decode: >>+<<
									-->> "static bool User::Equation::is_symbol(char)" | Digit: >>+<<
									<<-- "static bool User::Equation::is_symbol(char)" | N
									-->> "static bool User::Equation::is_operator(char)" | Digit: >>+<<
									<<-- "static bool User::Equation::is_operator(char)" | Y
									Operator detected: >>+<< | Token: +
									Token fully decoded:  + | type: 2 | size: 1
									Tokens decoded: 4
									SEEK_NEXT_TOKEN | Decode: >>2<<
									TOKEN_NUMBER | Decode: >>+<<
									Token fully decoded:  2 | type: 0 | size: 1
									Tokens decoded: 5
									SEEK_NEXT_TOKEN | Decode: >>+<<
									-->> "static bool User::Equation::is_symbol(char)" | Digit: >>+<<
									<<-- "static bool User::Equation::is_symbol(char)" | N
									-->> "static bool User::Equation::is_operator(char)" | Digit: >>+<<
									<<-- "static bool User::Equation::is_operator(char)" | Y
									Operator detected: >>+<< | Token: +
									Token fully decoded:  + | type: 2 | size: 1
									Tokens decoded: 6
									SEEK_NEXT_TOKEN | Decode: >>3<<
									TOKEN_NUMBER | Decode: >>+<<
									Token fully decoded:  3 | type: 0 | size: 1
									Tokens decoded: 7
									SEEK_NEXT_TOKEN | Decode: >>+<<
									-->> "static bool User::Equation::is_symbol(char)" | Digit: >>+<<
									<<-- "static bool User::Equation::is_symbol(char)" | N
									-->> "static bool User::Equation::is_operator(char)" | Digit: >>+<<
									<<-- "static bool User::Equation::is_operator(char)" | Y
									Operator detected: >>+<< | Token: +
									Token fully decoded:  + | type: 2 | size: 1
									Tokens decoded: 8
									SEEK_NEXT_TOKEN | Decode: >>4<<
									TOKEN_NUMBER | Decode: >>+<<
									Token fully decoded:  4 | type: 0 | size: 1
									Tokens decoded: 9
									SEEK_NEXT_TOKEN | Decode: >>+<<
									-->> "static bool User::Equation::is_symbol(char)" | Digit: >>+<<
									<<-- "static bool User::Equation::is_symbol(char)" | N
									-->> "static bool User::Equation::is_operator(char)" | Digit: >>+<<
									<<-- "static bool User::Equation::is_operator(char)" | Y
									Operator detected: >>+<< | Token: +
									Token fully decoded:  + | type: 2 | size: 1
									Tokens decoded: 10
									SEEK_NEXT_TOKEN | Decode: >>5<<
									TOKEN_NUMBER | Decode: >>+<<
									Token fully decoded:  5 | type: 0 | size: 1
									Tokens decoded: 11
									SEEK_NEXT_TOKEN | Decode: >>+<<
									-->> "static bool User::Equation::is_symbol(char)" | Digit: >>+<<
									<<-- "static bool User::Equation::is_symbol(char)" | N
									-->> "static bool User::Equation::is_operator(char)" | Digit: >>+<<
									<<-- "static bool User::Equation::is_operator(char)" | Y
									Operator detected: >>+<< | Token: +
									Token fully decoded:  + | type: 2 | size: 1
									Tokens decoded: 12
									SEEK_NEXT_TOKEN | Decode: >>6<<
									TOKEN_NUMBER | Decode: >>+<<
									Token fully decoded:  6 | type: 0 | size: 1
									Tokens decoded: 13
									SEEK_NEXT_TOKEN | Decode: >>+<<
									-->> "static bool User::Equation::is_symbol(char)" | Digit: >>+<<
									<<-- "static bool User::Equation::is_symbol(char)" | N
									-->> "static bool User::Equation::is_operator(char)" | Digit: >>+<<
									<<-- "static bool User::Equation::is_operator(char)" | Y
									Operator detected: >>+<< | Token: +
									Token fully decoded:  + | type: 2 | size: 1
									Tokens decoded: 14
									SEEK_NEXT_TOKEN | Decode: >>7<<
									Token fully decoded:  7 | type: 0 | size: 1
									Tokens decoded: 15
									Equations decoded into 15 tokens
									Token: >>28<< | Type: 0 | Size: 2
									Token: >>=<< | Type: 2 | Size: 1
									Token: >>1<< | Type: 0 | Size: 1
									Token: >>+<< | Type: 2 | Size: 1
									Token: >>2<< | Type: 0 | Size: 1
									Token: >>+<< | Type: 2 | Size: 1
									Token: >>3<< | Type: 0 | Size: 1
									Token: >>+<< | Type: 2 | Size: 1
									Token: >>4<< | Type: 0 | Size: 1
									Token: >>+<< | Type: 2 | Size: 1
									Token: >>5<< | Type: 0 | Size: 1
									Token: >>+<< | Type: 2 | Size: 1
									Token: >>6<< | Type: 0 | Size: 1
									Token: >>+<< | Type: 2 | Size: 1
									Token: >>7<< | Type: 0 | Size: 1
								<<-- "static bool User::Equation::equation_to_token_array(std::__cxx11::string, std::vector<std::__cxx11::basic_string<char> >&, std::vector<User::Equation::Token>&)" | Decoded 15 tokens
								Tree wasn't empty: 7 | FLUSH
								-->> "bool User::Tree<Payload>::flush() [with Payload = User::Equation::Token]" | Nodes inside the tree: 7
									-->> "bool User::Tree<Payload>::init_root() [with Payload = User::Equation::Token]" |
									<<-- "bool User::Tree<Payload>::init_root() [with Payload = User::Equation::Token]" |
								<<-- "bool User::Tree<Payload>::flush() [with Payload = User::Equation::Token]" | Nodes inside the tree: 1
								-->> "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | Token Array Size: 15 | Father 0
									-->> "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 15
										Token   0 | >28< | Open Close Priority: 0 | Symbol Priority 5 
										Token   1 | >=< | Open Close Priority: 0 | Symbol Priority 0 
										Token   2 | >1< | Open Close Priority: 0 | Symbol Priority 5 
										Token   3 | >+< | Open Close Priority: 0 | Symbol Priority 3 
										Token   4 | >2< | Open Close Priority: 0 | Symbol Priority 5 
										Token   5 | >+< | Open Close Priority: 0 | Symbol Priority 3 
										Token   6 | >3< | Open Close Priority: 0 | Symbol Priority 5 
										Token   7 | >+< | Open Close Priority: 0 | Symbol Priority 3 
										Token   8 | >4< | Open Close Priority: 0 | Symbol Priority 5 
										Token   9 | >+< | Open Close Priority: 0 | Symbol Priority 3 
										Token  10 | >5< | Open Close Priority: 0 | Symbol Priority 5 
										Token  11 | >+< | Open Close Priority: 0 | Symbol Priority 3 
										Token  12 | >6< | Open Close Priority: 0 | Symbol Priority 5 
										Token  13 | >+< | Open Close Priority: 0 | Symbol Priority 3 
										Token  14 | >7< | Open Close Priority: 0 | Symbol Priority 5 
										Candidate   0 | >28< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Default
										Candidate   1 | >=< | Open Close Priority 0 | Symbol Priority 0 | Min Priority 0
										Ignore   2 | >1< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Best Priority 0
										Ignore   3 | >+< | Open Close Priority 0 | Symbol Priority 3 | Min Priority 0 | Best Priority 0
										Ignore   4 | >2< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Best Priority 0
										Ignore   5 | >+< | Open Close Priority 0 | Symbol Priority 3 | Min Priority 0 | Best Priority 0
										Ignore   6 | >3< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Best Priority 0
										Ignore   7 | >+< | Open Close Priority 0 | Symbol Priority 3 | Min Priority 0 | Best Priority 0
										Ignore   8 | >4< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Best Priority 0
										Ignore   9 | >+< | Open Close Priority 0 | Symbol Priority 3 | Min Priority 0 | Best Priority 0
										Ignore  10 | >5< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Best Priority 0
										Ignore  11 | >+< | Open Close Priority 0 | Symbol Priority 3 | Min Priority 0 | Best Priority 0
										Ignore  12 | >6< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Best Priority 0
										Ignore  13 | >+< | Open Close Priority 0 | Symbol Priority 3 | Min Priority 0 | Best Priority 0
										Ignore  14 | >7< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Best Priority 0
										Token   1 | >=< | Highest priority token
									<<-- "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 15 | Highest Priority Token: <=> | 0 0
									Core Token: >=< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 0
									LHS: >28<
									RHS: >1<
									RHS: >+<
									RHS: >2<
									RHS: >+<
									RHS: >3<
									RHS: >+<
									RHS: >4<
									RHS: >+<
									RHS: >5<
									RHS: >+<
									RHS: >6<
									RHS: >+<
									RHS: >7<
									LHS Tokens: 1 | RHS Tokens: 13
									ROOT: >=<
									-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" | Object: 007efd18, Index: 0
									<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" |
									LHS: >=<
									-->> "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | Token Array Size: 1 | Father 0
										-->> "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1
											Token   0 | >28< | Open Close Priority: 0 | Symbol Priority 5 
											Candidate   0 | >28< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Default
											Token   0 | >28< | Highest priority token
										<<-- "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1 | Highest Priority Token: <28> | 0 5
										Core Token: >28< | Size: 2 | Open/Close Priority: 0 | Symbol Priority: 5
										LHS Tokens: 0 | RHS Tokens: 0
										-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" | Object: 007efd18, Index: 0
										<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" |
										-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
										<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 0 | Own Index: 1 | Nodes under Father: 2
									<<-- "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | PASS
									LHS of size 1 under father 0
									-->> "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | Token Array Size: 13 | Father 0
										-->> "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 13
											Token   0 | >1< | Open Close Priority: 0 | Symbol Priority 5 
											Token   1 | >+< | Open Close Priority: 0 | Symbol Priority 3 
											Token   2 | >2< | Open Close Priority: 0 | Symbol Priority 5 
											Token   3 | >+< | Open Close Priority: 0 | Symbol Priority 3 
											Token   4 | >3< | Open Close Priority: 0 | Symbol Priority 5 
											Token   5 | >+< | Open Close Priority: 0 | Symbol Priority 3 
											Token   6 | >4< | Open Close Priority: 0 | Symbol Priority 5 
											Token   7 | >+< | Open Close Priority: 0 | Symbol Priority 3 
											Token   8 | >5< | Open Close Priority: 0 | Symbol Priority 5 
											Token   9 | >+< | Open Close Priority: 0 | Symbol Priority 3 
											Token  10 | >6< | Open Close Priority: 0 | Symbol Priority 5 
											Token  11 | >+< | Open Close Priority: 0 | Symbol Priority 3 
											Token  12 | >7< | Open Close Priority: 0 | Symbol Priority 5 
											Candidate   0 | >1< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Default
											Candidate   1 | >+< | Open Close Priority 0 | Symbol Priority 3 | Min Priority 0
											Ignore   2 | >2< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Best Priority 3
											Ignore   3 | >+< | Open Close Priority 0 | Symbol Priority 3 | Min Priority 0 | Best Priority 3
											Ignore   4 | >3< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Best Priority 3
											Ignore   5 | >+< | Open Close Priority 0 | Symbol Priority 3 | Min Priority 0 | Best Priority 3
											Ignore   6 | >4< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Best Priority 3
											Ignore   7 | >+< | Open Close Priority 0 | Symbol Priority 3 | Min Priority 0 | Best Priority 3
											Ignore   8 | >5< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Best Priority 3
											Ignore   9 | >+< | Open Close Priority 0 | Symbol Priority 3 | Min Priority 0 | Best Priority 3
											Ignore  10 | >6< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Best Priority 3
											Ignore  11 | >+< | Open Close Priority 0 | Symbol Priority 3 | Min Priority 0 | Best Priority 3
											Ignore  12 | >7< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Best Priority 3
											Token   1 | >+< | Highest priority token
										<<-- "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 13 | Highest Priority Token: <+> | 0 3
										Core Token: >+< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 3
										LHS: >1<
										RHS: >2<
										RHS: >+<
										RHS: >3<
										RHS: >+<
										RHS: >4<
										RHS: >+<
										RHS: >5<
										RHS: >+<
										RHS: >6<
										RHS: >+<
										RHS: >7<
										LHS Tokens: 1 | RHS Tokens: 11
										-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
										<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 0 | Own Index: 2 | Nodes under Father: 3
										-->> "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | Token Array Size: 1 | Father 2
											-->> "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1
												Token   0 | >1< | Open Close Priority: 0 | Symbol Priority 5 
												Candidate   0 | >1< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Default
												Token   0 | >1< | Highest priority token
											<<-- "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1 | Highest Priority Token: <1> | 0 5
											Core Token: >1< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 5
											LHS Tokens: 0 | RHS Tokens: 0
											-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
											<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 2 | Own Index: 3 | Nodes under Father: 2
										<<-- "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | PASS
										LHS of size 1 under father 2
										-->> "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | Token Array Size: 11 | Father 2
											-->> "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 11
												Token   0 | >2< | Open Close Priority: 0 | Symbol Priority 5 
												Token   1 | >+< | Open Close Priority: 0 | Symbol Priority 3 
												Token   2 | >3< | Open Close Priority: 0 | Symbol Priority 5 
												Token   3 | >+< | Open Close Priority: 0 | Symbol Priority 3 
												Token   4 | >4< | Open Close Priority: 0 | Symbol Priority 5 
												Token   5 | >+< | Open Close Priority: 0 | Symbol Priority 3 
												Token   6 | >5< | Open Close Priority: 0 | Symbol Priority 5 
												Token   7 | >+< | Open Close Priority: 0 | Symbol Priority 3 
												Token   8 | >6< | Open Close Priority: 0 | Symbol Priority 5 
												Token   9 | >+< | Open Close Priority: 0 | Symbol Priority 3 
												Token  10 | >7< | Open Close Priority: 0 | Symbol Priority 5 
												Candidate   0 | >2< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Default
												Candidate   1 | >+< | Open Close Priority 0 | Symbol Priority 3 | Min Priority 0
												Ignore   2 | >3< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Best Priority 3
												Ignore   3 | >+< | Open Close Priority 0 | Symbol Priority 3 | Min Priority 0 | Best Priority 3
												Ignore   4 | >4< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Best Priority 3
												Ignore   5 | >+< | Open Close Priority 0 | Symbol Priority 3 | Min Priority 0 | Best Priority 3
												Ignore   6 | >5< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Best Priority 3
												Ignore   7 | >+< | Open Close Priority 0 | Symbol Priority 3 | Min Priority 0 | Best Priority 3
												Ignore   8 | >6< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Best Priority 3
												Ignore   9 | >+< | Open Close Priority 0 | Symbol Priority 3 | Min Priority 0 | Best Priority 3
												Ignore  10 | >7< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Best Priority 3
												Token   1 | >+< | Highest priority token
											<<-- "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 11 | Highest Priority Token: <+> | 0 3
											Core Token: >+< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 3
											LHS: >2<
											RHS: >3<
											RHS: >+<
											RHS: >4<
											RHS: >+<
											RHS: >5<
											RHS: >+<
											RHS: >6<
											RHS: >+<
											RHS: >7<
											LHS Tokens: 1 | RHS Tokens: 9
											-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
											<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 2 | Own Index: 4 | Nodes under Father: 3
											-->> "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | Token Array Size: 1 | Father 4
												-->> "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1
												Token   0 | >2< | Open Close Priority: 0 | Symbol Priority 5 
												Candidate   0 | >2< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Default
												Token   0 | >2< | Highest priority token
											<<-- "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1 | Highest Priority Token: <2> | 0 5
											Core Token: >2< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 5
											LHS Tokens: 0 | RHS Tokens: 0
											-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
											<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 4 | Own Index: 5 | Nodes under Father: 2
										<<-- "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | PASS
										LHS of size 1 under father 4
										-->> "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | Token Array Size: 9 | Father 4
											-->> "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 9
												Token   0 | >3< | Open Close Priority: 0 | Symbol Priority 5 
												Token   1 | >+< | Open Close Priority: 0 | Symbol Priority 3 
												Token   2 | >4< | Open Close Priority: 0 | Symbol Priority 5 
												Token   3 | >+< | Open Close Priority: 0 | Symbol Priority 3 
												Token   4 | >5< | Open Close Priority: 0 | Symbol Priority 5 
												Token   5 | >+< | Open Close Priority: 0 | Symbol Priority 3 
												Token   6 | >6< | Open Close Priority: 0 | Symbol Priority 5 
												Token   7 | >+< | Open Close Priority: 0 | Symbol Priority 3 
												Token   8 | >7< | Open Close Priority: 0 | Symbol Priority 5 
												Candidate   0 | >3< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Default
												Candidate   1 | >+< | Open Close Priority 0 | Symbol Priority 3 | Min Priority 0
												Ignore   2 | >4< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Best Priority 3
												Ignore   3 | >+< | Open Close Priority 0 | Symbol Priority 3 | Min Priority 0 | Best Priority 3
												Ignore   4 | >5< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Best Priority 3
												Ignore   5 | >+< | Open Close Priority 0 | Symbol Priority 3 | Min Priority 0 | Best Priority 3
												Ignore   6 | >6< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Best Priority 3
												Ignore   7 | >+< | Open Close Priority 0 | Symbol Priority 3 | Min Priority 0 | Best Priority 3
												Ignore   8 | >7< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Best Priority 3
												Token   1 | >+< | Highest priority token
											<<-- "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 9 | Highest Priority Token: <+> | 0 3
											Core Token: >+< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 3
											LHS: >3<
											RHS: >4<
											RHS: >+<
											RHS: >5<
											RHS: >+<
											RHS: >6<
											RHS: >+<
											RHS: >7<
											LHS Tokens: 1 | RHS Tokens: 7
											-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
											<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 4 | Own Index: 6 | Nodes under Father: 3
											-->> "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | Token Array Size: 1 | Father 6
												-->> "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1
												Token   0 | >3< | Open Close Priority: 0 | Symbol Priority 5 
												Candidate   0 | >3< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Default
												Token   0 | >3< | Highest priority token
											<<-- "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1 | Highest Priority Token: <3> | 0 5
											Core Token: >3< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 5
											LHS Tokens: 0 | RHS Tokens: 0
											-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
											<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 6 | Own Index: 7 | Nodes under Father: 2
										<<-- "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | PASS
										LHS of size 1 under father 6
										-->> "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | Token Array Size: 7 | Father 6
											-->> "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 7
												Token   0 | >4< | Open Close Priority: 0 | Symbol Priority 5 
												Token   1 | >+< | Open Close Priority: 0 | Symbol Priority 3 
												Token   2 | >5< | Open Close Priority: 0 | Symbol Priority 5 
												Token   3 | >+< | Open Close Priority: 0 | Symbol Priority 3 
												Token   4 | >6< | Open Close Priority: 0 | Symbol Priority 5 
												Token   5 | >+< | Open Close Priority: 0 | Symbol Priority 3 
												Token   6 | >7< | Open Close Priority: 0 | Symbol Priority 5 
												Candidate   0 | >4< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Default
												Candidate   1 | >+< | Open Close Priority 0 | Symbol Priority 3 | Min Priority 0
												Ignore   2 | >5< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Best Priority 3
												Ignore   3 | >+< | Open Close Priority 0 | Symbol Priority 3 | Min Priority 0 | Best Priority 3
												Ignore   4 | >6< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Best Priority 3
												Ignore   5 | >+< | Open Close Priority 0 | Symbol Priority 3 | Min Priority 0 | Best Priority 3
												Ignore   6 | >7< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Best Priority 3
												Token   1 | >+< | Highest priority token
											<<-- "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 7 | Highest Priority Token: <+> | 0 3
											Core Token: >+< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 3
											LHS: >4<
											RHS: >5<
											RHS: >+<
											RHS: >6<
											RHS: >+<
											RHS: >7<
											LHS Tokens: 1 | RHS Tokens: 5
											-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
											<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 6 | Own Index: 8 | Nodes under Father: 3
											-->> "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | Token Array Size: 1 | Father 8
												-->> "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1
												Token   0 | >4< | Open Close Priority: 0 | Symbol Priority 5 
												Candidate   0 | >4< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Default
												Token   0 | >4< | Highest priority token
											<<-- "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1 | Highest Priority Token: <4> | 0 5
											Core Token: >4< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 5
											LHS Tokens: 0 | RHS Tokens: 0
											-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
											<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 8 | Own Index: 9 | Nodes under Father: 2
										<<-- "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | PASS
										LHS of size 1 under father 8
										-->> "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | Token Array Size: 5 | Father 8
											-->> "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 5
												Token   0 | >5< | Open Close Priority: 0 | Symbol Priority 5 
												Token   1 | >+< | Open Close Priority: 0 | Symbol Priority 3 
												Token   2 | >6< | Open Close Priority: 0 | Symbol Priority 5 
												Token   3 | >+< | Open Close Priority: 0 | Symbol Priority 3 
												Token   4 | >7< | Open Close Priority: 0 | Symbol Priority 5 
												Candidate   0 | >5< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Default
												Candidate   1 | >+< | Open Close Priority 0 | Symbol Priority 3 | Min Priority 0
												Ignore   2 | >6< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Best Priority 3
												Ignore   3 | >+< | Open Close Priority 0 | Symbol Priority 3 | Min Priority 0 | Best Priority 3
												Ignore   4 | >7< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Best Priority 3
												Token   1 | >+< | Highest priority token
											<<-- "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 5 | Highest Priority Token: <+> | 0 3
											Core Token: >+< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 3
											LHS: >5<
											RHS: >6<
											RHS: >+<
											RHS: >7<
											LHS Tokens: 1 | RHS Tokens: 3
											-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
											<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 8 | Own Index: 10 | Nodes under Father: 3
											-->> "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | Token Array Size: 1 | Father 10
												-->> "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1
												Token   0 | >5< | Open Close Priority: 0 | Symbol Priority 5 
												Candidate   0 | >5< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Default
												Token   0 | >5< | Highest priority token
											<<-- "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1 | Highest Priority Token: <5> | 0 5
											Core Token: >5< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 5
											LHS Tokens: 0 | RHS Tokens: 0
											-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
											<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 10 | Own Index: 11 | Nodes under Father: 2
										<<-- "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | PASS
										LHS of size 1 under father 10
										-->> "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | Token Array Size: 3 | Father 10
											-->> "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 3
												Token   0 | >6< | Open Close Priority: 0 | Symbol Priority 5 
												Token   1 | >+< | Open Close Priority: 0 | Symbol Priority 3 
												Token   2 | >7< | Open Close Priority: 0 | Symbol Priority 5 
												Candidate   0 | >6< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Default
												Candidate   1 | >+< | Open Close Priority 0 | Symbol Priority 3 | Min Priority 0
												Ignore   2 | >7< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Best Priority 3
												Token   1 | >+< | Highest priority token
											<<-- "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 3 | Highest Priority Token: <+> | 0 3
											Core Token: >+< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 3
											LHS: >6<
											RHS: >7<
											LHS Tokens: 1 | RHS Tokens: 1
											-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
											<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 10 | Own Index: 12 | Nodes under Father: 3
											-->> "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | Token Array Size: 1 | Father 12
												-->> "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1
												Token   0 | >6< | Open Close Priority: 0 | Symbol Priority 5 
												Candidate   0 | >6< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Default
												Token   0 | >6< | Highest priority token
											<<-- "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1 | Highest Priority Token: <6> | 0 5
											Core Token: >6< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 5
											LHS Tokens: 0 | RHS Tokens: 0
											-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
											<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 12 | Own Index: 13 | Nodes under Father: 2
										<<-- "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | PASS
										LHS of size 1 under father 12
										-->> "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | Token Array Size: 1 | Father 12
											-->> "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1
												Token   0 | >7< | Open Close Priority: 0 | Symbol Priority 5 
												Candidate   0 | >7< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Default
												Token   0 | >7< | Highest priority token
											<<-- "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1 | Highest Priority Token: <7> | 0 5
											Core Token: >7< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 5
											LHS Tokens: 0 | RHS Tokens: 0
											-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
											<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 12 | Own Index: 14 | Nodes under Father: 3
										<<-- "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | PASS
										RHS of size 1 under father 12
									<<-- "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | PASS
									RHS of size 3 under father 10
								<<-- "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | PASS
								RHS of size 5 under father 8
							<<-- "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | PASS
							RHS of size 7 under father 6
						<<-- "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | PASS
						RHS of size 9 under father 4
					<<-- "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | PASS
					RHS of size 11 under father 2
				<<-- "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | PASS
				RHS of size 13 under father 0
			<<-- "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | PASS
			-->> "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" | Index: 0
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef904 | Begin: 1 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 0 | Stack size: 1
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef934 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 0
						Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 0 | Depth: 1
						Found children || Index 2 | Own Index: 2 | Father Index: 0 | Own Priority 1 | Children: 2 | Depth: 1
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 1 | Index: 0
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef934 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 1
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 2 | Index: 1
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef934 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 2
						Found children || Index 3 | Own Index: 3 | Father Index: 2 | Own Priority 0 | Children: 0 | Depth: 2
						Found children || Index 4 | Own Index: 4 | Father Index: 2 | Own Priority 1 | Children: 2 | Depth: 2
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 3 | Index: 2
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef934 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 3
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 4 | Index: 3
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef934 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 4
						Found children || Index 5 | Own Index: 5 | Father Index: 4 | Own Priority 0 | Children: 0 | Depth: 3
						Found children || Index 6 | Own Index: 6 | Father Index: 4 | Own Priority 1 | Children: 2 | Depth: 3
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Index: 4
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef934 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 5
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 6 | Index: 5
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef934 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 6
						Found children || Index 7 | Own Index: 7 | Father Index: 6 | Own Priority 0 | Children: 0 | Depth: 4
						Found children || Index 8 | Own Index: 8 | Father Index: 6 | Own Priority 1 | Children: 2 | Depth: 4
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 7 | Index: 6
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef934 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 7
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 8 | Index: 7
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef934 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 8
						Found children || Index 9 | Own Index: 9 | Father Index: 8 | Own Priority 0 | Children: 0 | Depth: 5
						Found children || Index 10 | Own Index: 10 | Father Index: 8 | Own Priority 1 | Children: 2 | Depth: 5
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 9 | Index: 8
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef934 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 9
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 10 | Index: 9
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef934 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 10
						Found children || Index 11 | Own Index: 11 | Father Index: 10 | Own Priority 0 | Children: 0 | Depth: 6
						Found children || Index 12 | Own Index: 12 | Father Index: 10 | Own Priority 1 | Children: 2 | Depth: 6
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 11 | Index: 10
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef934 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 11
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 12 | Index: 11
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef934 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 12
						Found children || Index 13 | Own Index: 13 | Father Index: 12 | Own Priority 0 | Children: 0 | Depth: 7
						Found children || Index 14 | Own Index: 14 | Father Index: 12 | Own Priority 1 | Children: 0 | Depth: 7
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 13 | Index: 12
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef934 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 13
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 14 | Index: 13
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef934 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 14
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Index: 14
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef934 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
			<<-- "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" |
		<<-- "bool User::Equation::parse(std::__cxx11::string)" | Token array size: 15 | Token tree size: 15
		TOKEN0
		TOKEN1
		TOKEN2
		TOKEN3
		TOKEN4
		TOKEN5
		TOKEN6
		TOKEN7
		TOKEN8
		TOKEN9
		TOKEN10
		TOKEN11
		TOKEN12
		TOKEN13
		TOKEN14
		-->> "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" | Index: 0
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa54 | Begin: 1 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 0 | Stack size: 1
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 0
					Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 0 | Depth: 1
					Found children || Index 2 | Own Index: 2 | Father Index: 0 | Own Priority 1 | Children: 2 | Depth: 1
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 1 | Index: 0
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 1
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 2 | Index: 1
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 2
					Found children || Index 3 | Own Index: 3 | Father Index: 2 | Own Priority 0 | Children: 0 | Depth: 2
					Found children || Index 4 | Own Index: 4 | Father Index: 2 | Own Priority 1 | Children: 2 | Depth: 2
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 3 | Index: 2
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 3
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 4 | Index: 3
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 4
					Found children || Index 5 | Own Index: 5 | Father Index: 4 | Own Priority 0 | Children: 0 | Depth: 3
					Found children || Index 6 | Own Index: 6 | Father Index: 4 | Own Priority 1 | Children: 2 | Depth: 3
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Index: 4
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 5
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 6 | Index: 5
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 6
					Found children || Index 7 | Own Index: 7 | Father Index: 6 | Own Priority 0 | Children: 0 | Depth: 4
					Found children || Index 8 | Own Index: 8 | Father Index: 6 | Own Priority 1 | Children: 2 | Depth: 4
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 7 | Index: 6
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 7
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 8 | Index: 7
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 8
					Found children || Index 9 | Own Index: 9 | Father Index: 8 | Own Priority 0 | Children: 0 | Depth: 5
					Found children || Index 10 | Own Index: 10 | Father Index: 8 | Own Priority 1 | Children: 2 | Depth: 5
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 9 | Index: 8
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 9
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 10 | Index: 9
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 10
					Found children || Index 11 | Own Index: 11 | Father Index: 10 | Own Priority 0 | Children: 0 | Depth: 6
					Found children || Index 12 | Own Index: 12 | Father Index: 10 | Own Priority 1 | Children: 2 | Depth: 6
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 11 | Index: 10
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 11
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 12 | Index: 11
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 12
					Found children || Index 13 | Own Index: 13 | Father Index: 12 | Own Priority 0 | Children: 0 | Depth: 7
					Found children || Index 14 | Own Index: 14 | Father Index: 12 | Own Priority 1 | Children: 0 | Depth: 7
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 13 | Index: 12
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 13
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 14 | Index: 13
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 14
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Index: 14
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
		<<-- "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" |
		-->> "User::Tree<Payload>::Tree(std::vector<User::Tree<Payload>::St_minimal_node>) [with Payload = User::Equation::Token]" | This: 007efc40 | Nodes: 15
			-->> "bool User::Tree<Payload>::init_class_vars(Payload) [with Payload = User::Equation::Token]" |
			<<-- "bool User::Tree<Payload>::init_class_vars(Payload) [with Payload = User::Equation::Token]" |
			-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
			<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 0 | Own Index: 1 | Nodes under Father: 2
			-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
			<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 0 | Own Index: 2 | Nodes under Father: 3
			-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
			<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 2 | Own Index: 3 | Nodes under Father: 2
			-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
			<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 2 | Own Index: 4 | Nodes under Father: 3
			-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
			<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 4 | Own Index: 5 | Nodes under Father: 2
			-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
			<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 4 | Own Index: 6 | Nodes under Father: 3
			-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
			<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 6 | Own Index: 7 | Nodes under Father: 2
			-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
			<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 6 | Own Index: 8 | Nodes under Father: 3
			-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
			<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 8 | Own Index: 9 | Nodes under Father: 2
			-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
			<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 8 | Own Index: 10 | Nodes under Father: 3
			-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
			<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 10 | Own Index: 11 | Nodes under Father: 2
			-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
			<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 10 | Own Index: 12 | Nodes under Father: 3
			-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
			<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 12 | Own Index: 13 | Nodes under Father: 2
			-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
			<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 12 | Own Index: 14 | Nodes under Father: 3
			-->> "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" | Index: 0
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa54 | Begin: 1 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 0 | Stack size: 1
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 0
						Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 0 | Depth: 1
						Found children || Index 2 | Own Index: 2 | Father Index: 0 | Own Priority 1 | Children: 2 | Depth: 1
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 1 | Index: 0
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 1
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 2 | Index: 1
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 2
						Found children || Index 3 | Own Index: 3 | Father Index: 2 | Own Priority 0 | Children: 0 | Depth: 2
						Found children || Index 4 | Own Index: 4 | Father Index: 2 | Own Priority 1 | Children: 2 | Depth: 2
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 3 | Index: 2
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 3
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 4 | Index: 3
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 4
						Found children || Index 5 | Own Index: 5 | Father Index: 4 | Own Priority 0 | Children: 0 | Depth: 3
						Found children || Index 6 | Own Index: 6 | Father Index: 4 | Own Priority 1 | Children: 2 | Depth: 3
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Index: 4
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 5
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 6 | Index: 5
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 6
						Found children || Index 7 | Own Index: 7 | Father Index: 6 | Own Priority 0 | Children: 0 | Depth: 4
						Found children || Index 8 | Own Index: 8 | Father Index: 6 | Own Priority 1 | Children: 2 | Depth: 4
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 7 | Index: 6
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 7
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 8 | Index: 7
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 8
						Found children || Index 9 | Own Index: 9 | Father Index: 8 | Own Priority 0 | Children: 0 | Depth: 5
						Found children || Index 10 | Own Index: 10 | Father Index: 8 | Own Priority 1 | Children: 2 | Depth: 5
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 9 | Index: 8
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 9
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 10 | Index: 9
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 10
						Found children || Index 11 | Own Index: 11 | Father Index: 10 | Own Priority 0 | Children: 0 | Depth: 6
						Found children || Index 12 | Own Index: 12 | Father Index: 10 | Own Priority 1 | Children: 2 | Depth: 6
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 11 | Index: 10
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 11
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 12 | Index: 11
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 12
						Found children || Index 13 | Own Index: 13 | Father Index: 12 | Own Priority 0 | Children: 0 | Depth: 7
						Found children || Index 14 | Own Index: 14 | Father Index: 12 | Own Priority 1 | Children: 0 | Depth: 7
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 13 | Index: 12
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 13
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 14 | Index: 13
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 14
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Index: 14
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
			<<-- "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" |
			-->> "bool User::Tree<Payload>::operator==(User::Tree<Payload>&) [with Payload = User::Equation::Token]" |
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef9cc | Begin: 1 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 0 | Stack size: 1
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef99c | Begin: 1 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 0 | Stack size: 1
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef9fc | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa2c | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 0
						Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 0 | Depth: 1
						Found children || Index 2 | Own Index: 2 | Father Index: 0 | Own Priority 1 | Children: 2 | Depth: 1
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 1 | Index: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 0
						Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 0 | Depth: 1
						Found children || Index 2 | Own Index: 2 | Father Index: 0 | Own Priority 1 | Children: 2 | Depth: 1
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 1 | Index: 0
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef9fc | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa2c | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 1
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 2 | Index: 1
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 1
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 2 | Index: 1
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef9fc | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa2c | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 2
						Found children || Index 3 | Own Index: 3 | Father Index: 2 | Own Priority 0 | Children: 0 | Depth: 2
						Found children || Index 4 | Own Index: 4 | Father Index: 2 | Own Priority 1 | Children: 2 | Depth: 2
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 3 | Index: 2
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 2
						Found children || Index 3 | Own Index: 3 | Father Index: 2 | Own Priority 0 | Children: 0 | Depth: 2
						Found children || Index 4 | Own Index: 4 | Father Index: 2 | Own Priority 1 | Children: 2 | Depth: 2
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 3 | Index: 2
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef9fc | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa2c | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 3
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 4 | Index: 3
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 3
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 4 | Index: 3
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef9fc | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa2c | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 4
						Found children || Index 5 | Own Index: 5 | Father Index: 4 | Own Priority 0 | Children: 0 | Depth: 3
						Found children || Index 6 | Own Index: 6 | Father Index: 4 | Own Priority 1 | Children: 2 | Depth: 3
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Index: 4
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 4
						Found children || Index 5 | Own Index: 5 | Father Index: 4 | Own Priority 0 | Children: 0 | Depth: 3
						Found children || Index 6 | Own Index: 6 | Father Index: 4 | Own Priority 1 | Children: 2 | Depth: 3
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Index: 4
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef9fc | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa2c | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 5
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 6 | Index: 5
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 5
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 6 | Index: 5
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef9fc | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa2c | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 6
						Found children || Index 7 | Own Index: 7 | Father Index: 6 | Own Priority 0 | Children: 0 | Depth: 4
						Found children || Index 8 | Own Index: 8 | Father Index: 6 | Own Priority 1 | Children: 2 | Depth: 4
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 7 | Index: 6
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 6
						Found children || Index 7 | Own Index: 7 | Father Index: 6 | Own Priority 0 | Children: 0 | Depth: 4
						Found children || Index 8 | Own Index: 8 | Father Index: 6 | Own Priority 1 | Children: 2 | Depth: 4
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 7 | Index: 6
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef9fc | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa2c | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 7
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 8 | Index: 7
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 7
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 8 | Index: 7
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef9fc | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa2c | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 8
						Found children || Index 9 | Own Index: 9 | Father Index: 8 | Own Priority 0 | Children: 0 | Depth: 5
						Found children || Index 10 | Own Index: 10 | Father Index: 8 | Own Priority 1 | Children: 2 | Depth: 5
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 9 | Index: 8
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 8
						Found children || Index 9 | Own Index: 9 | Father Index: 8 | Own Priority 0 | Children: 0 | Depth: 5
						Found children || Index 10 | Own Index: 10 | Father Index: 8 | Own Priority 1 | Children: 2 | Depth: 5
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 9 | Index: 8
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef9fc | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa2c | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 9
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 10 | Index: 9
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 9
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 10 | Index: 9
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef9fc | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa2c | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 10
						Found children || Index 11 | Own Index: 11 | Father Index: 10 | Own Priority 0 | Children: 0 | Depth: 6
						Found children || Index 12 | Own Index: 12 | Father Index: 10 | Own Priority 1 | Children: 2 | Depth: 6
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 11 | Index: 10
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 10
						Found children || Index 11 | Own Index: 11 | Father Index: 10 | Own Priority 0 | Children: 0 | Depth: 6
						Found children || Index 12 | Own Index: 12 | Father Index: 10 | Own Priority 1 | Children: 2 | Depth: 6
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 11 | Index: 10
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef9fc | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa2c | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 11
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 12 | Index: 11
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 11
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 12 | Index: 11
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef9fc | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa2c | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 12
						Found children || Index 13 | Own Index: 13 | Father Index: 12 | Own Priority 0 | Children: 0 | Depth: 7
						Found children || Index 14 | Own Index: 14 | Father Index: 12 | Own Priority 1 | Children: 0 | Depth: 7
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 13 | Index: 12
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 12
						Found children || Index 13 | Own Index: 13 | Father Index: 12 | Own Priority 0 | Children: 0 | Depth: 7
						Found children || Index 14 | Own Index: 14 | Father Index: 12 | Own Priority 1 | Children: 0 | Depth: 7
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 13 | Index: 12
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef9fc | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa2c | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 13
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 14 | Index: 13
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 13
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 14 | Index: 13
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef9fc | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa2c | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 14
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Index: 14
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 14
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Index: 14
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef9fc | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa2c | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
			<<-- "bool User::Tree<Payload>::operator==(User::Tree<Payload>&) [with Payload = User::Equation::Token]" | Same
			-->> "static bool User::Equation::convert_token_tree_to_array(User::Tree<User::Equation::Token>&, std::vector<User::Equation::Token>&)" |
				-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" | Object: 007efd18, Index: 0
				<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa30 | Begin: 1 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 0 | Stack size: 1
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa60 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				Token:  = | Type: 2 | Priority: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 0
						Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 0 | Depth: 1
						Found children || Index 2 | Own Index: 2 | Father Index: 0 | Own Priority 1 | Children: 2 | Depth: 1
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 1 | Index: 0
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa60 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				Token:  28 | Type: 0 | Priority: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 1
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 2 | Index: 1
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa60 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				Token:  + | Type: 2 | Priority: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 2
						Found children || Index 3 | Own Index: 3 | Father Index: 2 | Own Priority 0 | Children: 0 | Depth: 2
						Found children || Index 4 | Own Index: 4 | Father Index: 2 | Own Priority 1 | Children: 2 | Depth: 2
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 3 | Index: 2
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa60 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				Token:  1 | Type: 0 | Priority: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 3
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 4 | Index: 3
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa60 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				Token:  + | Type: 2 | Priority: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 4
						Found children || Index 5 | Own Index: 5 | Father Index: 4 | Own Priority 0 | Children: 0 | Depth: 3
						Found children || Index 6 | Own Index: 6 | Father Index: 4 | Own Priority 1 | Children: 2 | Depth: 3
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Index: 4
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa60 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				Token:  2 | Type: 0 | Priority: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 5
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 6 | Index: 5
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa60 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				Token:  + | Type: 2 | Priority: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 6
						Found children || Index 7 | Own Index: 7 | Father Index: 6 | Own Priority 0 | Children: 0 | Depth: 4
						Found children || Index 8 | Own Index: 8 | Father Index: 6 | Own Priority 1 | Children: 2 | Depth: 4
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 7 | Index: 6
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa60 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				Token:  3 | Type: 0 | Priority: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 7
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 8 | Index: 7
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa60 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				Token:  + | Type: 2 | Priority: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 8
						Found children || Index 9 | Own Index: 9 | Father Index: 8 | Own Priority 0 | Children: 0 | Depth: 5
						Found children || Index 10 | Own Index: 10 | Father Index: 8 | Own Priority 1 | Children: 2 | Depth: 5
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 9 | Index: 8
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa60 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				Token:  4 | Type: 0 | Priority: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 9
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 10 | Index: 9
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa60 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				Token:  + | Type: 2 | Priority: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 10
						Found children || Index 11 | Own Index: 11 | Father Index: 10 | Own Priority 0 | Children: 0 | Depth: 6
						Found children || Index 12 | Own Index: 12 | Father Index: 10 | Own Priority 1 | Children: 2 | Depth: 6
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 11 | Index: 10
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa60 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				Token:  5 | Type: 0 | Priority: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 11
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 12 | Index: 11
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa60 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				Token:  + | Type: 2 | Priority: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 12
						Found children || Index 13 | Own Index: 13 | Father Index: 12 | Own Priority 0 | Children: 0 | Depth: 7
						Found children || Index 14 | Own Index: 14 | Father Index: 12 | Own Priority 1 | Children: 0 | Depth: 7
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 13 | Index: 12
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa60 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				Token:  6 | Type: 0 | Priority: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 13
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 14 | Index: 13
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa60 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				Token:  7 | Type: 0 | Priority: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 14
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Index: 14
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa60 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
			<<-- "static bool User::Equation::convert_token_tree_to_array(User::Tree<User::Equation::Token>&, std::vector<User::Equation::Token>&)" |
			PASS pattern: 15
			-->> "User::Tree<Payload>::~Tree() [with Payload = User::Equation::Token]" | This: 007efc40
			<<-- "User::Tree<Payload>::~Tree() [with Payload = User::Equation::Token]" |
			-->> "User::Tree<Payload>::~Tree() [with Payload = User::Equation::Token]" | This: 007efbf4
			<<-- "User::Tree<Payload>::~Tree() [with Payload = User::Equation::Token]" |
			PATTERN16 >-28=-1-2-3-4-5-6-7<
			-->> "bool User::Equation::parse(std::__cxx11::string)" | Parse: -28=-1-2-3-4-5-6-7 | Size: 18
				-->> "static bool User::Equation::equation_to_token_array(std::__cxx11::string, std::vector<std::__cxx11::basic_string<char> >&, std::vector<User::Equation::Token>&)" | Parse: -28=-1-2-3-4-5-6-7 | Size: 18
					SEEK_NEXT_TOKEN | Decode: >>-<<
					-->> "static bool User::Equation::is_symbol(char)" | Digit: >>-<<
					<<-- "static bool User::Equation::is_symbol(char)" | N
					-->> "static bool User::Equation::is_operator(char)" | Digit: >>-<<
					<<-- "static bool User::Equation::is_operator(char)" | Y
					Unary - detected
					SEEK_NEXT_TOKEN | Decode: >>2<<
					TOKEN_NUMBER | Decode: >>8<<
					TOKEN_NUMBER | Decode: >>=<<
					Unary Operator: -
					Token fully decoded: -28 | type: 0 | size: 2
					Tokens decoded: 1
					SEEK_NEXT_TOKEN | Decode: >>=<<
					-->> "static bool User::Equation::is_symbol(char)" | Digit: >>=<<
					<<-- "static bool User::Equation::is_symbol(char)" | N
					-->> "static bool User::Equation::is_operator(char)" | Digit: >>=<<
					<<-- "static bool User::Equation::is_operator(char)" | Y
					Operator detected: >>=<< | Token: =
					Token fully decoded:  = | type: 2 | size: 1
					Tokens decoded: 2
					SEEK_NEXT_TOKEN | Decode: >>-<<
					-->> "static bool User::Equation::is_symbol(char)" | Digit: >>-<<
					<<-- "static bool User::Equation::is_symbol(char)" | N
					-->> "static bool User::Equation::is_operator(char)" | Digit: >>-<<
					<<-- "static bool User::Equation::is_operator(char)" | Y
					Unary - detected
					SEEK_NEXT_TOKEN | Decode: >>1<<
					TOKEN_NUMBER | Decode: >>-<<
					Unary Operator: -
					Token fully decoded: -1 | type: 0 | size: 1
					Tokens decoded: 3
					SEEK_NEXT_TOKEN | Decode: >>-<<
					-->> "static bool User::Equation::is_symbol(char)" | Digit: >>-<<
					<<-- "static bool User::Equation::is_symbol(char)" | N
					-->> "static bool User::Equation::is_operator(char)" | Digit: >>-<<
					<<-- "static bool User::Equation::is_operator(char)" | Y
					Operator detected: >>-<< | Token: -
					Token fully decoded:  - | type: 2 | size: 1
					Tokens decoded: 4
					SEEK_NEXT_TOKEN | Decode: >>2<<
					TOKEN_NUMBER | Decode: >>-<<
					Token fully decoded:  2 | type: 0 | size: 1
					Tokens decoded: 5
					SEEK_NEXT_TOKEN | Decode: >>-<<
					-->> "static bool User::Equation::is_symbol(char)" | Digit: >>-<<
					<<-- "static bool User::Equation::is_symbol(char)" | N
					-->> "static bool User::Equation::is_operator(char)" | Digit: >>-<<
					<<-- "static bool User::Equation::is_operator(char)" | Y
					Operator detected: >>-<< | Token: -
					Token fully decoded:  - | type: 2 | size: 1
					Tokens decoded: 6
					SEEK_NEXT_TOKEN | Decode: >>3<<
					TOKEN_NUMBER | Decode: >>-<<
					Token fully decoded:  3 | type: 0 | size: 1
					Tokens decoded: 7
					SEEK_NEXT_TOKEN | Decode: >>-<<
					-->> "static bool User::Equation::is_symbol(char)" | Digit: >>-<<
					<<-- "static bool User::Equation::is_symbol(char)" | N
					-->> "static bool User::Equation::is_operator(char)" | Digit: >>-<<
					<<-- "static bool User::Equation::is_operator(char)" | Y
					Operator detected: >>-<< | Token: -
					Token fully decoded:  - | type: 2 | size: 1
					Tokens decoded: 8
					SEEK_NEXT_TOKEN | Decode: >>4<<
					TOKEN_NUMBER | Decode: >>-<<
					Token fully decoded:  4 | type: 0 | size: 1
					Tokens decoded: 9
					SEEK_NEXT_TOKEN | Decode: >>-<<
					-->> "static bool User::Equation::is_symbol(char)" | Digit: >>-<<
					<<-- "static bool User::Equation::is_symbol(char)" | N
					-->> "static bool User::Equation::is_operator(char)" | Digit: >>-<<
					<<-- "static bool User::Equation::is_operator(char)" | Y
					Operator detected: >>-<< | Token: -
					Token fully decoded:  - | type: 2 | size: 1
					Tokens decoded: 10
					SEEK_NEXT_TOKEN | Decode: >>5<<
					TOKEN_NUMBER | Decode: >>-<<
					Token fully decoded:  5 | type: 0 | size: 1
					Tokens decoded: 11
					SEEK_NEXT_TOKEN | Decode: >>-<<
					-->> "static bool User::Equation::is_symbol(char)" | Digit: >>-<<
					<<-- "static bool User::Equation::is_symbol(char)" | N
					-->> "static bool User::Equation::is_operator(char)" | Digit: >>-<<
					<<-- "static bool User::Equation::is_operator(char)" | Y
					Operator detected: >>-<< | Token: -
					Token fully decoded:  - | type: 2 | size: 1
					Tokens decoded: 12
					SEEK_NEXT_TOKEN | Decode: >>6<<
					TOKEN_NUMBER | Decode: >>-<<
					Token fully decoded:  6 | type: 0 | size: 1
					Tokens decoded: 13
					SEEK_NEXT_TOKEN | Decode: >>-<<
					-->> "static bool User::Equation::is_symbol(char)" | Digit: >>-<<
					<<-- "static bool User::Equation::is_symbol(char)" | N
					-->> "static bool User::Equation::is_operator(char)" | Digit: >>-<<
					<<-- "static bool User::Equation::is_operator(char)" | Y
					Operator detected: >>-<< | Token: -
					Token fully decoded:  - | type: 2 | size: 1
					Tokens decoded: 14
					SEEK_NEXT_TOKEN | Decode: >>7<<
					Token fully decoded:  7 | type: 0 | size: 1
					Tokens decoded: 15
					Equations decoded into 15 tokens
					Token: >>28<< | Type: 0 | Size: 2
					Token: >>=<< | Type: 2 | Size: 1
					Token: >>1<< | Type: 0 | Size: 1
					Token: >>-<< | Type: 2 | Size: 1
					Token: >>2<< | Type: 0 | Size: 1
					Token: >>-<< | Type: 2 | Size: 1
					Token: >>3<< | Type: 0 | Size: 1
					Token: >>-<< | Type: 2 | Size: 1
					Token: >>4<< | Type: 0 | Size: 1
					Token: >>-<< | Type: 2 | Size: 1
					Token: >>5<< | Type: 0 | Size: 1
					Token: >>-<< | Type: 2 | Size: 1
					Token: >>6<< | Type: 0 | Size: 1
					Token: >>-<< | Type: 2 | Size: 1
					Token: >>7<< | Type: 0 | Size: 1
				<<-- "static bool User::Equation::equation_to_token_array(std::__cxx11::string, std::vector<std::__cxx11::basic_string<char> >&, std::vector<User::Equation::Token>&)" | Decoded 15 tokens
				Tree wasn't empty: 15 | FLUSH
				-->> "bool User::Tree<Payload>::flush() [with Payload = User::Equation::Token]" | Nodes inside the tree: 15
					-->> "bool User::Tree<Payload>::init_root() [with Payload = User::Equation::Token]" |
					<<-- "bool User::Tree<Payload>::init_root() [with Payload = User::Equation::Token]" |
				<<-- "bool User::Tree<Payload>::flush() [with Payload = User::Equation::Token]" | Nodes inside the tree: 1
				-->> "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | Token Array Size: 15 | Father 0
					-->> "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 15
						Token   0 | >28< | Open Close Priority: 0 | Symbol Priority 5 
						Token   1 | >=< | Open Close Priority: 0 | Symbol Priority 0 
						Token   2 | >1< | Open Close Priority: 0 | Symbol Priority 5 
						Token   3 | >-< | Open Close Priority: 0 | Symbol Priority 3 
						Token   4 | >2< | Open Close Priority: 0 | Symbol Priority 5 
						Token   5 | >-< | Open Close Priority: 0 | Symbol Priority 3 
						Token   6 | >3< | Open Close Priority: 0 | Symbol Priority 5 
						Token   7 | >-< | Open Close Priority: 0 | Symbol Priority 3 
						Token   8 | >4< | Open Close Priority: 0 | Symbol Priority 5 
						Token   9 | >-< | Open Close Priority: 0 | Symbol Priority 3 
						Token  10 | >5< | Open Close Priority: 0 | Symbol Priority 5 
						Token  11 | >-< | Open Close Priority: 0 | Symbol Priority 3 
						Token  12 | >6< | Open Close Priority: 0 | Symbol Priority 5 
						Token  13 | >-< | Open Close Priority: 0 | Symbol Priority 3 
						Token  14 | >7< | Open Close Priority: 0 | Symbol Priority 5 
						Candidate   0 | >28< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Default
						Candidate   1 | >=< | Open Close Priority 0 | Symbol Priority 0 | Min Priority 0
						Ignore   2 | >1< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Best Priority 0
						Ignore   3 | >-< | Open Close Priority 0 | Symbol Priority 3 | Min Priority 0 | Best Priority 0
						Ignore   4 | >2< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Best Priority 0
						Ignore   5 | >-< | Open Close Priority 0 | Symbol Priority 3 | Min Priority 0 | Best Priority 0
						Ignore   6 | >3< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Best Priority 0
						Ignore   7 | >-< | Open Close Priority 0 | Symbol Priority 3 | Min Priority 0 | Best Priority 0
						Ignore   8 | >4< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Best Priority 0
						Ignore   9 | >-< | Open Close Priority 0 | Symbol Priority 3 | Min Priority 0 | Best Priority 0
						Ignore  10 | >5< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Best Priority 0
						Ignore  11 | >-< | Open Close Priority 0 | Symbol Priority 3 | Min Priority 0 | Best Priority 0
						Ignore  12 | >6< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Best Priority 0
						Ignore  13 | >-< | Open Close Priority 0 | Symbol Priority 3 | Min Priority 0 | Best Priority 0
						Ignore  14 | >7< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Best Priority 0
						Token   1 | >=< | Highest priority token
					<<-- "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 15 | Highest Priority Token: <=> | 0 0
					Core Token: >=< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 0
					LHS: >28<
					RHS: >1<
					RHS: >-<
					RHS: >2<
					RHS: >-<
					RHS: >3<
					RHS: >-<
					RHS: >4<
					RHS: >-<
					RHS: >5<
					RHS: >-<
					RHS: >6<
					RHS: >-<
					RHS: >7<
					LHS Tokens: 1 | RHS Tokens: 13
					ROOT: >=<
					-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" | Object: 007efd18, Index: 0
					<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" |
					LHS: >=<
					-->> "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | Token Array Size: 1 | Father 0
						-->> "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1
							Token   0 | >28< | Open Close Priority: 0 | Symbol Priority 5 
							Candidate   0 | >28< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Default
							Token   0 | >28< | Highest priority token
						<<-- "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1 | Highest Priority Token: <28> | 0 5
						Core Token: >28< | Size: 2 | Open/Close Priority: 0 | Symbol Priority: 5
						LHS Tokens: 0 | RHS Tokens: 0
						-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" | Object: 007efd18, Index: 0
						<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" |
						-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
						<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 0 | Own Index: 1 | Nodes under Father: 2
					<<-- "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | PASS
					LHS of size 1 under father 0
					-->> "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | Token Array Size: 13 | Father 0
						-->> "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 13
							Token   0 | >1< | Open Close Priority: 0 | Symbol Priority 5 
							Token   1 | >-< | Open Close Priority: 0 | Symbol Priority 3 
							Token   2 | >2< | Open Close Priority: 0 | Symbol Priority 5 
							Token   3 | >-< | Open Close Priority: 0 | Symbol Priority 3 
							Token   4 | >3< | Open Close Priority: 0 | Symbol Priority 5 
							Token   5 | >-< | Open Close Priority: 0 | Symbol Priority 3 
							Token   6 | >4< | Open Close Priority: 0 | Symbol Priority 5 
							Token   7 | >-< | Open Close Priority: 0 | Symbol Priority 3 
							Token   8 | >5< | Open Close Priority: 0 | Symbol Priority 5 
							Token   9 | >-< | Open Close Priority: 0 | Symbol Priority 3 
							Token  10 | >6< | Open Close Priority: 0 | Symbol Priority 5 
							Token  11 | >-< | Open Close Priority: 0 | Symbol Priority 3 
							Token  12 | >7< | Open Close Priority: 0 | Symbol Priority 5 
							Candidate   0 | >1< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Default
							Candidate   1 | >-< | Open Close Priority 0 | Symbol Priority 3 | Min Priority 0
							Ignore   2 | >2< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Best Priority 3
							Ignore   3 | >-< | Open Close Priority 0 | Symbol Priority 3 | Min Priority 0 | Best Priority 3
							Ignore   4 | >3< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Best Priority 3
							Ignore   5 | >-< | Open Close Priority 0 | Symbol Priority 3 | Min Priority 0 | Best Priority 3
							Ignore   6 | >4< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Best Priority 3
							Ignore   7 | >-< | Open Close Priority 0 | Symbol Priority 3 | Min Priority 0 | Best Priority 3
							Ignore   8 | >5< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Best Priority 3
							Ignore   9 | >-< | Open Close Priority 0 | Symbol Priority 3 | Min Priority 0 | Best Priority 3
							Ignore  10 | >6< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Best Priority 3
							Ignore  11 | >-< | Open Close Priority 0 | Symbol Priority 3 | Min Priority 0 | Best Priority 3
							Ignore  12 | >7< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Best Priority 3
							Token   1 | >-< | Highest priority token
						<<-- "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 13 | Highest Priority Token: <-> | 0 3
						Core Token: >-< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 3
						LHS: >1<
						RHS: >2<
						RHS: >-<
						RHS: >3<
						RHS: >-<
						RHS: >4<
						RHS: >-<
						RHS: >5<
						RHS: >-<
						RHS: >6<
						RHS: >-<
						RHS: >7<
						LHS Tokens: 1 | RHS Tokens: 11
						-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
						<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 0 | Own Index: 2 | Nodes under Father: 3
						-->> "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | Token Array Size: 1 | Father 2
							-->> "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1
								Token   0 | >1< | Open Close Priority: 0 | Symbol Priority 5 
								Candidate   0 | >1< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Default
								Token   0 | >1< | Highest priority token
							<<-- "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1 | Highest Priority Token: <1> | 0 5
							Core Token: >1< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 5
							LHS Tokens: 0 | RHS Tokens: 0
							-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
							<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 2 | Own Index: 3 | Nodes under Father: 2
						<<-- "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | PASS
						LHS of size 1 under father 2
						-->> "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | Token Array Size: 11 | Father 2
							-->> "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 11
								Token   0 | >2< | Open Close Priority: 0 | Symbol Priority 5 
								Token   1 | >-< | Open Close Priority: 0 | Symbol Priority 3 
								Token   2 | >3< | Open Close Priority: 0 | Symbol Priority 5 
								Token   3 | >-< | Open Close Priority: 0 | Symbol Priority 3 
								Token   4 | >4< | Open Close Priority: 0 | Symbol Priority 5 
								Token   5 | >-< | Open Close Priority: 0 | Symbol Priority 3 
								Token   6 | >5< | Open Close Priority: 0 | Symbol Priority 5 
								Token   7 | >-< | Open Close Priority: 0 | Symbol Priority 3 
								Token   8 | >6< | Open Close Priority: 0 | Symbol Priority 5 
								Token   9 | >-< | Open Close Priority: 0 | Symbol Priority 3 
								Token  10 | >7< | Open Close Priority: 0 | Symbol Priority 5 
								Candidate   0 | >2< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Default
								Candidate   1 | >-< | Open Close Priority 0 | Symbol Priority 3 | Min Priority 0
								Ignore   2 | >3< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Best Priority 3
								Ignore   3 | >-< | Open Close Priority 0 | Symbol Priority 3 | Min Priority 0 | Best Priority 3
								Ignore   4 | >4< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Best Priority 3
								Ignore   5 | >-< | Open Close Priority 0 | Symbol Priority 3 | Min Priority 0 | Best Priority 3
								Ignore   6 | >5< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Best Priority 3
								Ignore   7 | >-< | Open Close Priority 0 | Symbol Priority 3 | Min Priority 0 | Best Priority 3
								Ignore   8 | >6< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Best Priority 3
								Ignore   9 | >-< | Open Close Priority 0 | Symbol Priority 3 | Min Priority 0 | Best Priority 3
								Ignore  10 | >7< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Best Priority 3
								Token   1 | >-< | Highest priority token
							<<-- "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 11 | Highest Priority Token: <-> | 0 3
							Core Token: >-< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 3
							LHS: >2<
							RHS: >3<
							RHS: >-<
							RHS: >4<
							RHS: >-<
							RHS: >5<
							RHS: >-<
							RHS: >6<
							RHS: >-<
							RHS: >7<
							LHS Tokens: 1 | RHS Tokens: 9
							-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
							<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 2 | Own Index: 4 | Nodes under Father: 3
							-->> "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | Token Array Size: 1 | Father 4
								-->> "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1
									Token   0 | >2< | Open Close Priority: 0 | Symbol Priority 5 
									Candidate   0 | >2< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Default
									Token   0 | >2< | Highest priority token
								<<-- "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1 | Highest Priority Token: <2> | 0 5
								Core Token: >2< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 5
								LHS Tokens: 0 | RHS Tokens: 0
								-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
								<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 4 | Own Index: 5 | Nodes under Father: 2
							<<-- "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | PASS
							LHS of size 1 under father 4
							-->> "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | Token Array Size: 9 | Father 4
								-->> "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 9
									Token   0 | >3< | Open Close Priority: 0 | Symbol Priority 5 
									Token   1 | >-< | Open Close Priority: 0 | Symbol Priority 3 
									Token   2 | >4< | Open Close Priority: 0 | Symbol Priority 5 
									Token   3 | >-< | Open Close Priority: 0 | Symbol Priority 3 
									Token   4 | >5< | Open Close Priority: 0 | Symbol Priority 5 
									Token   5 | >-< | Open Close Priority: 0 | Symbol Priority 3 
									Token   6 | >6< | Open Close Priority: 0 | Symbol Priority 5 
									Token   7 | >-< | Open Close Priority: 0 | Symbol Priority 3 
									Token   8 | >7< | Open Close Priority: 0 | Symbol Priority 5 
									Candidate   0 | >3< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Default
									Candidate   1 | >-< | Open Close Priority 0 | Symbol Priority 3 | Min Priority 0
									Ignore   2 | >4< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Best Priority 3
									Ignore   3 | >-< | Open Close Priority 0 | Symbol Priority 3 | Min Priority 0 | Best Priority 3
									Ignore   4 | >5< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Best Priority 3
									Ignore   5 | >-< | Open Close Priority 0 | Symbol Priority 3 | Min Priority 0 | Best Priority 3
									Ignore   6 | >6< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Best Priority 3
									Ignore   7 | >-< | Open Close Priority 0 | Symbol Priority 3 | Min Priority 0 | Best Priority 3
									Ignore   8 | >7< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Best Priority 3
									Token   1 | >-< | Highest priority token
								<<-- "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 9 | Highest Priority Token: <-> | 0 3
								Core Token: >-< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 3
								LHS: >3<
								RHS: >4<
								RHS: >-<
								RHS: >5<
								RHS: >-<
								RHS: >6<
								RHS: >-<
								RHS: >7<
								LHS Tokens: 1 | RHS Tokens: 7
								-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
								<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 4 | Own Index: 6 | Nodes under Father: 3
								-->> "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | Token Array Size: 1 | Father 6
									-->> "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1
										Token   0 | >3< | Open Close Priority: 0 | Symbol Priority 5 
										Candidate   0 | >3< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Default
										Token   0 | >3< | Highest priority token
									<<-- "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1 | Highest Priority Token: <3> | 0 5
									Core Token: >3< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 5
									LHS Tokens: 0 | RHS Tokens: 0
									-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
									<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 6 | Own Index: 7 | Nodes under Father: 2
								<<-- "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | PASS
								LHS of size 1 under father 6
								-->> "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | Token Array Size: 7 | Father 6
									-->> "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 7
										Token   0 | >4< | Open Close Priority: 0 | Symbol Priority 5 
										Token   1 | >-< | Open Close Priority: 0 | Symbol Priority 3 
										Token   2 | >5< | Open Close Priority: 0 | Symbol Priority 5 
										Token   3 | >-< | Open Close Priority: 0 | Symbol Priority 3 
										Token   4 | >6< | Open Close Priority: 0 | Symbol Priority 5 
										Token   5 | >-< | Open Close Priority: 0 | Symbol Priority 3 
										Token   6 | >7< | Open Close Priority: 0 | Symbol Priority 5 
										Candidate   0 | >4< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Default
										Candidate   1 | >-< | Open Close Priority 0 | Symbol Priority 3 | Min Priority 0
										Ignore   2 | >5< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Best Priority 3
										Ignore   3 | >-< | Open Close Priority 0 | Symbol Priority 3 | Min Priority 0 | Best Priority 3
										Ignore   4 | >6< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Best Priority 3
										Ignore   5 | >-< | Open Close Priority 0 | Symbol Priority 3 | Min Priority 0 | Best Priority 3
										Ignore   6 | >7< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Best Priority 3
										Token   1 | >-< | Highest priority token
									<<-- "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 7 | Highest Priority Token: <-> | 0 3
									Core Token: >-< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 3
									LHS: >4<
									RHS: >5<
									RHS: >-<
									RHS: >6<
									RHS: >-<
									RHS: >7<
									LHS Tokens: 1 | RHS Tokens: 5
									-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
									<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 6 | Own Index: 8 | Nodes under Father: 3
									-->> "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | Token Array Size: 1 | Father 8
										-->> "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1
											Token   0 | >4< | Open Close Priority: 0 | Symbol Priority 5 
											Candidate   0 | >4< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Default
											Token   0 | >4< | Highest priority token
										<<-- "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1 | Highest Priority Token: <4> | 0 5
										Core Token: >4< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 5
										LHS Tokens: 0 | RHS Tokens: 0
										-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
										<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 8 | Own Index: 9 | Nodes under Father: 2
									<<-- "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | PASS
									LHS of size 1 under father 8
									-->> "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | Token Array Size: 5 | Father 8
										-->> "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 5
											Token   0 | >5< | Open Close Priority: 0 | Symbol Priority 5 
											Token   1 | >-< | Open Close Priority: 0 | Symbol Priority 3 
											Token   2 | >6< | Open Close Priority: 0 | Symbol Priority 5 
											Token   3 | >-< | Open Close Priority: 0 | Symbol Priority 3 
											Token   4 | >7< | Open Close Priority: 0 | Symbol Priority 5 
											Candidate   0 | >5< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Default
											Candidate   1 | >-< | Open Close Priority 0 | Symbol Priority 3 | Min Priority 0
											Ignore   2 | >6< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Best Priority 3
											Ignore   3 | >-< | Open Close Priority 0 | Symbol Priority 3 | Min Priority 0 | Best Priority 3
											Ignore   4 | >7< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Best Priority 3
											Token   1 | >-< | Highest priority token
										<<-- "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 5 | Highest Priority Token: <-> | 0 3
										Core Token: >-< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 3
										LHS: >5<
										RHS: >6<
										RHS: >-<
										RHS: >7<
										LHS Tokens: 1 | RHS Tokens: 3
										-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
										<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 8 | Own Index: 10 | Nodes under Father: 3
										-->> "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | Token Array Size: 1 | Father 10
											-->> "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1
												Token   0 | >5< | Open Close Priority: 0 | Symbol Priority 5 
												Candidate   0 | >5< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Default
												Token   0 | >5< | Highest priority token
											<<-- "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1 | Highest Priority Token: <5> | 0 5
											Core Token: >5< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 5
											LHS Tokens: 0 | RHS Tokens: 0
											-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
											<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 10 | Own Index: 11 | Nodes under Father: 2
										<<-- "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | PASS
										LHS of size 1 under father 10
										-->> "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | Token Array Size: 3 | Father 10
											-->> "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 3
												Token   0 | >6< | Open Close Priority: 0 | Symbol Priority 5 
												Token   1 | >-< | Open Close Priority: 0 | Symbol Priority 3 
												Token   2 | >7< | Open Close Priority: 0 | Symbol Priority 5 
												Candidate   0 | >6< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Default
												Candidate   1 | >-< | Open Close Priority 0 | Symbol Priority 3 | Min Priority 0
												Ignore   2 | >7< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Best Priority 3
												Token   1 | >-< | Highest priority token
											<<-- "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 3 | Highest Priority Token: <-> | 0 3
											Core Token: >-< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 3
											LHS: >6<
											RHS: >7<
											LHS Tokens: 1 | RHS Tokens: 1
											-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
											<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 10 | Own Index: 12 | Nodes under Father: 3
											-->> "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | Token Array Size: 1 | Father 12
												-->> "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1
												Token   0 | >6< | Open Close Priority: 0 | Symbol Priority 5 
												Candidate   0 | >6< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Default
												Token   0 | >6< | Highest priority token
											<<-- "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1 | Highest Priority Token: <6> | 0 5
											Core Token: >6< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 5
											LHS Tokens: 0 | RHS Tokens: 0
											-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
											<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 12 | Own Index: 13 | Nodes under Father: 2
										<<-- "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | PASS
										LHS of size 1 under father 12
										-->> "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | Token Array Size: 1 | Father 12
											-->> "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1
												Token   0 | >7< | Open Close Priority: 0 | Symbol Priority 5 
												Candidate   0 | >7< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Default
												Token   0 | >7< | Highest priority token
											<<-- "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1 | Highest Priority Token: <7> | 0 5
											Core Token: >7< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 5
											LHS Tokens: 0 | RHS Tokens: 0
											-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
											<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 12 | Own Index: 14 | Nodes under Father: 3
										<<-- "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | PASS
										RHS of size 1 under father 12
									<<-- "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | PASS
									RHS of size 3 under father 10
								<<-- "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | PASS
								RHS of size 5 under father 8
							<<-- "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | PASS
							RHS of size 7 under father 6
						<<-- "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | PASS
						RHS of size 9 under father 4
					<<-- "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | PASS
					RHS of size 11 under father 2
				<<-- "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | PASS
				RHS of size 13 under father 0
			<<-- "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | PASS
			-->> "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" | Index: 0
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef904 | Begin: 1 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 0 | Stack size: 1
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef934 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 0
						Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 0 | Depth: 1
						Found children || Index 2 | Own Index: 2 | Father Index: 0 | Own Priority 1 | Children: 2 | Depth: 1
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 1 | Index: 0
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef934 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 1
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 2 | Index: 1
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef934 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 2
						Found children || Index 3 | Own Index: 3 | Father Index: 2 | Own Priority 0 | Children: 0 | Depth: 2
						Found children || Index 4 | Own Index: 4 | Father Index: 2 | Own Priority 1 | Children: 2 | Depth: 2
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 3 | Index: 2
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef934 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 3
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 4 | Index: 3
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef934 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 4
						Found children || Index 5 | Own Index: 5 | Father Index: 4 | Own Priority 0 | Children: 0 | Depth: 3
						Found children || Index 6 | Own Index: 6 | Father Index: 4 | Own Priority 1 | Children: 2 | Depth: 3
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Index: 4
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef934 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 5
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 6 | Index: 5
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef934 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 6
						Found children || Index 7 | Own Index: 7 | Father Index: 6 | Own Priority 0 | Children: 0 | Depth: 4
						Found children || Index 8 | Own Index: 8 | Father Index: 6 | Own Priority 1 | Children: 2 | Depth: 4
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 7 | Index: 6
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef934 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 7
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 8 | Index: 7
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef934 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 8
						Found children || Index 9 | Own Index: 9 | Father Index: 8 | Own Priority 0 | Children: 0 | Depth: 5
						Found children || Index 10 | Own Index: 10 | Father Index: 8 | Own Priority 1 | Children: 2 | Depth: 5
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 9 | Index: 8
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef934 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 9
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 10 | Index: 9
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef934 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 10
						Found children || Index 11 | Own Index: 11 | Father Index: 10 | Own Priority 0 | Children: 0 | Depth: 6
						Found children || Index 12 | Own Index: 12 | Father Index: 10 | Own Priority 1 | Children: 2 | Depth: 6
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 11 | Index: 10
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef934 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 11
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 12 | Index: 11
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef934 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 12
						Found children || Index 13 | Own Index: 13 | Father Index: 12 | Own Priority 0 | Children: 0 | Depth: 7
						Found children || Index 14 | Own Index: 14 | Father Index: 12 | Own Priority 1 | Children: 0 | Depth: 7
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 13 | Index: 12
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef934 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 13
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 14 | Index: 13
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef934 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 14
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Index: 14
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef934 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
			<<-- "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" |
		<<-- "bool User::Equation::parse(std::__cxx11::string)" | Token array size: 15 | Token tree size: 15
		TOKEN0
		TOKEN1
		TOKEN2
		TOKEN3
		TOKEN4
		TOKEN5
		TOKEN6
		TOKEN7
		TOKEN8
		TOKEN9
		TOKEN10
		TOKEN11
		TOKEN12
		TOKEN13
		TOKEN14
		-->> "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" | Index: 0
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa54 | Begin: 1 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 0 | Stack size: 1
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 0
					Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 0 | Depth: 1
					Found children || Index 2 | Own Index: 2 | Father Index: 0 | Own Priority 1 | Children: 2 | Depth: 1
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 1 | Index: 0
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 1
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 2 | Index: 1
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 2
					Found children || Index 3 | Own Index: 3 | Father Index: 2 | Own Priority 0 | Children: 0 | Depth: 2
					Found children || Index 4 | Own Index: 4 | Father Index: 2 | Own Priority 1 | Children: 2 | Depth: 2
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 3 | Index: 2
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 3
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 4 | Index: 3
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 4
					Found children || Index 5 | Own Index: 5 | Father Index: 4 | Own Priority 0 | Children: 0 | Depth: 3
					Found children || Index 6 | Own Index: 6 | Father Index: 4 | Own Priority 1 | Children: 2 | Depth: 3
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Index: 4
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 5
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 6 | Index: 5
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 6
					Found children || Index 7 | Own Index: 7 | Father Index: 6 | Own Priority 0 | Children: 0 | Depth: 4
					Found children || Index 8 | Own Index: 8 | Father Index: 6 | Own Priority 1 | Children: 2 | Depth: 4
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 7 | Index: 6
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 7
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 8 | Index: 7
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 8
					Found children || Index 9 | Own Index: 9 | Father Index: 8 | Own Priority 0 | Children: 0 | Depth: 5
					Found children || Index 10 | Own Index: 10 | Father Index: 8 | Own Priority 1 | Children: 2 | Depth: 5
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 9 | Index: 8
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 9
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 10 | Index: 9
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 10
					Found children || Index 11 | Own Index: 11 | Father Index: 10 | Own Priority 0 | Children: 0 | Depth: 6
					Found children || Index 12 | Own Index: 12 | Father Index: 10 | Own Priority 1 | Children: 2 | Depth: 6
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 11 | Index: 10
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 11
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 12 | Index: 11
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 12
					Found children || Index 13 | Own Index: 13 | Father Index: 12 | Own Priority 0 | Children: 0 | Depth: 7
					Found children || Index 14 | Own Index: 14 | Father Index: 12 | Own Priority 1 | Children: 0 | Depth: 7
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 13 | Index: 12
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 13
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 14 | Index: 13
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 14
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Index: 14
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
		<<-- "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" |
		-->> "User::Tree<Payload>::Tree(std::vector<User::Tree<Payload>::St_minimal_node>) [with Payload = User::Equation::Token]" | This: 007efc40 | Nodes: 15
			-->> "bool User::Tree<Payload>::init_class_vars(Payload) [with Payload = User::Equation::Token]" |
			<<-- "bool User::Tree<Payload>::init_class_vars(Payload) [with Payload = User::Equation::Token]" |
			-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
			<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 0 | Own Index: 1 | Nodes under Father: 2
			-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
			<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 0 | Own Index: 2 | Nodes under Father: 3
			-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
			<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 2 | Own Index: 3 | Nodes under Father: 2
			-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
			<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 2 | Own Index: 4 | Nodes under Father: 3
			-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
			<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 4 | Own Index: 5 | Nodes under Father: 2
			-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
			<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 4 | Own Index: 6 | Nodes under Father: 3
			-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
			<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 6 | Own Index: 7 | Nodes under Father: 2
			-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
			<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 6 | Own Index: 8 | Nodes under Father: 3
			-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
			<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 8 | Own Index: 9 | Nodes under Father: 2
			-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
			<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 8 | Own Index: 10 | Nodes under Father: 3
			-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
			<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 10 | Own Index: 11 | Nodes under Father: 2
			-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
			<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 10 | Own Index: 12 | Nodes under Father: 3
			-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
			<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 12 | Own Index: 13 | Nodes under Father: 2
			-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
			<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 12 | Own Index: 14 | Nodes under Father: 3
			-->> "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" | Index: 0
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa54 | Begin: 1 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 0 | Stack size: 1
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 0
						Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 0 | Depth: 1
						Found children || Index 2 | Own Index: 2 | Father Index: 0 | Own Priority 1 | Children: 2 | Depth: 1
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 1 | Index: 0
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 1
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 2 | Index: 1
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 2
						Found children || Index 3 | Own Index: 3 | Father Index: 2 | Own Priority 0 | Children: 0 | Depth: 2
						Found children || Index 4 | Own Index: 4 | Father Index: 2 | Own Priority 1 | Children: 2 | Depth: 2
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 3 | Index: 2
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 3
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 4 | Index: 3
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 4
						Found children || Index 5 | Own Index: 5 | Father Index: 4 | Own Priority 0 | Children: 0 | Depth: 3
						Found children || Index 6 | Own Index: 6 | Father Index: 4 | Own Priority 1 | Children: 2 | Depth: 3
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Index: 4
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 5
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 6 | Index: 5
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 6
						Found children || Index 7 | Own Index: 7 | Father Index: 6 | Own Priority 0 | Children: 0 | Depth: 4
						Found children || Index 8 | Own Index: 8 | Father Index: 6 | Own Priority 1 | Children: 2 | Depth: 4
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 7 | Index: 6
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 7
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 8 | Index: 7
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 8
						Found children || Index 9 | Own Index: 9 | Father Index: 8 | Own Priority 0 | Children: 0 | Depth: 5
						Found children || Index 10 | Own Index: 10 | Father Index: 8 | Own Priority 1 | Children: 2 | Depth: 5
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 9 | Index: 8
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 9
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 10 | Index: 9
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 10
						Found children || Index 11 | Own Index: 11 | Father Index: 10 | Own Priority 0 | Children: 0 | Depth: 6
						Found children || Index 12 | Own Index: 12 | Father Index: 10 | Own Priority 1 | Children: 2 | Depth: 6
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 11 | Index: 10
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 11
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 12 | Index: 11
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 12
						Found children || Index 13 | Own Index: 13 | Father Index: 12 | Own Priority 0 | Children: 0 | Depth: 7
						Found children || Index 14 | Own Index: 14 | Father Index: 12 | Own Priority 1 | Children: 0 | Depth: 7
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 13 | Index: 12
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 13
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 14 | Index: 13
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 14
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Index: 14
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
			<<-- "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" |
			-->> "bool User::Tree<Payload>::operator==(User::Tree<Payload>&) [with Payload = User::Equation::Token]" |
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef9cc | Begin: 1 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 0 | Stack size: 1
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef99c | Begin: 1 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 0 | Stack size: 1
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef9fc | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa2c | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 0
						Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 0 | Depth: 1
						Found children || Index 2 | Own Index: 2 | Father Index: 0 | Own Priority 1 | Children: 2 | Depth: 1
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 1 | Index: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 0
						Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 0 | Depth: 1
						Found children || Index 2 | Own Index: 2 | Father Index: 0 | Own Priority 1 | Children: 2 | Depth: 1
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 1 | Index: 0
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef9fc | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa2c | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 1
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 2 | Index: 1
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 1
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 2 | Index: 1
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef9fc | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa2c | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 2
						Found children || Index 3 | Own Index: 3 | Father Index: 2 | Own Priority 0 | Children: 0 | Depth: 2
						Found children || Index 4 | Own Index: 4 | Father Index: 2 | Own Priority 1 | Children: 2 | Depth: 2
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 3 | Index: 2
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 2
						Found children || Index 3 | Own Index: 3 | Father Index: 2 | Own Priority 0 | Children: 0 | Depth: 2
						Found children || Index 4 | Own Index: 4 | Father Index: 2 | Own Priority 1 | Children: 2 | Depth: 2
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 3 | Index: 2
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef9fc | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa2c | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 3
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 4 | Index: 3
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 3
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 4 | Index: 3
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef9fc | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa2c | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 4
						Found children || Index 5 | Own Index: 5 | Father Index: 4 | Own Priority 0 | Children: 0 | Depth: 3
						Found children || Index 6 | Own Index: 6 | Father Index: 4 | Own Priority 1 | Children: 2 | Depth: 3
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Index: 4
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 4
						Found children || Index 5 | Own Index: 5 | Father Index: 4 | Own Priority 0 | Children: 0 | Depth: 3
						Found children || Index 6 | Own Index: 6 | Father Index: 4 | Own Priority 1 | Children: 2 | Depth: 3
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Index: 4
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef9fc | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa2c | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 5
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 6 | Index: 5
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 5
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 6 | Index: 5
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef9fc | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa2c | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 6
						Found children || Index 7 | Own Index: 7 | Father Index: 6 | Own Priority 0 | Children: 0 | Depth: 4
						Found children || Index 8 | Own Index: 8 | Father Index: 6 | Own Priority 1 | Children: 2 | Depth: 4
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 7 | Index: 6
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 6
						Found children || Index 7 | Own Index: 7 | Father Index: 6 | Own Priority 0 | Children: 0 | Depth: 4
						Found children || Index 8 | Own Index: 8 | Father Index: 6 | Own Priority 1 | Children: 2 | Depth: 4
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 7 | Index: 6
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef9fc | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa2c | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 7
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 8 | Index: 7
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 7
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 8 | Index: 7
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef9fc | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa2c | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 8
						Found children || Index 9 | Own Index: 9 | Father Index: 8 | Own Priority 0 | Children: 0 | Depth: 5
						Found children || Index 10 | Own Index: 10 | Father Index: 8 | Own Priority 1 | Children: 2 | Depth: 5
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 9 | Index: 8
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 8
						Found children || Index 9 | Own Index: 9 | Father Index: 8 | Own Priority 0 | Children: 0 | Depth: 5
						Found children || Index 10 | Own Index: 10 | Father Index: 8 | Own Priority 1 | Children: 2 | Depth: 5
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 9 | Index: 8
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef9fc | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa2c | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 9
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 10 | Index: 9
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 9
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 10 | Index: 9
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef9fc | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa2c | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 10
						Found children || Index 11 | Own Index: 11 | Father Index: 10 | Own Priority 0 | Children: 0 | Depth: 6
						Found children || Index 12 | Own Index: 12 | Father Index: 10 | Own Priority 1 | Children: 2 | Depth: 6
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 11 | Index: 10
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 10
						Found children || Index 11 | Own Index: 11 | Father Index: 10 | Own Priority 0 | Children: 0 | Depth: 6
						Found children || Index 12 | Own Index: 12 | Father Index: 10 | Own Priority 1 | Children: 2 | Depth: 6
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 11 | Index: 10
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef9fc | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa2c | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 11
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 12 | Index: 11
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 11
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 12 | Index: 11
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef9fc | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa2c | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 12
						Found children || Index 13 | Own Index: 13 | Father Index: 12 | Own Priority 0 | Children: 0 | Depth: 7
						Found children || Index 14 | Own Index: 14 | Father Index: 12 | Own Priority 1 | Children: 0 | Depth: 7
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 13 | Index: 12
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 12
						Found children || Index 13 | Own Index: 13 | Father Index: 12 | Own Priority 0 | Children: 0 | Depth: 7
						Found children || Index 14 | Own Index: 14 | Father Index: 12 | Own Priority 1 | Children: 0 | Depth: 7
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 13 | Index: 12
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef9fc | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa2c | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 13
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 14 | Index: 13
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 13
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 14 | Index: 13
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef9fc | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa2c | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 14
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Index: 14
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 14
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Index: 14
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef9fc | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa2c | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
			<<-- "bool User::Tree<Payload>::operator==(User::Tree<Payload>&) [with Payload = User::Equation::Token]" | Same
			-->> "static bool User::Equation::convert_token_tree_to_array(User::Tree<User::Equation::Token>&, std::vector<User::Equation::Token>&)" |
				-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" | Object: 007efd18, Index: 0
				<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa30 | Begin: 1 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 0 | Stack size: 1
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa60 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				Token:  = | Type: 2 | Priority: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 0
						Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 0 | Depth: 1
						Found children || Index 2 | Own Index: 2 | Father Index: 0 | Own Priority 1 | Children: 2 | Depth: 1
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 1 | Index: 0
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa60 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				Token: -28 | Type: 0 | Priority: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 1
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 2 | Index: 1
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa60 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				Token:  - | Type: 2 | Priority: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 2
						Found children || Index 3 | Own Index: 3 | Father Index: 2 | Own Priority 0 | Children: 0 | Depth: 2
						Found children || Index 4 | Own Index: 4 | Father Index: 2 | Own Priority 1 | Children: 2 | Depth: 2
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 3 | Index: 2
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa60 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				Token: -1 | Type: 0 | Priority: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 3
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 4 | Index: 3
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa60 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				Token:  - | Type: 2 | Priority: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 4
						Found children || Index 5 | Own Index: 5 | Father Index: 4 | Own Priority 0 | Children: 0 | Depth: 3
						Found children || Index 6 | Own Index: 6 | Father Index: 4 | Own Priority 1 | Children: 2 | Depth: 3
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Index: 4
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa60 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				Token:  2 | Type: 0 | Priority: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 5
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 6 | Index: 5
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa60 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				Token:  - | Type: 2 | Priority: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 6
						Found children || Index 7 | Own Index: 7 | Father Index: 6 | Own Priority 0 | Children: 0 | Depth: 4
						Found children || Index 8 | Own Index: 8 | Father Index: 6 | Own Priority 1 | Children: 2 | Depth: 4
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 7 | Index: 6
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa60 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				Token:  3 | Type: 0 | Priority: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 7
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 8 | Index: 7
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa60 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				Token:  - | Type: 2 | Priority: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 8
						Found children || Index 9 | Own Index: 9 | Father Index: 8 | Own Priority 0 | Children: 0 | Depth: 5
						Found children || Index 10 | Own Index: 10 | Father Index: 8 | Own Priority 1 | Children: 2 | Depth: 5
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 9 | Index: 8
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa60 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				Token:  4 | Type: 0 | Priority: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 9
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 10 | Index: 9
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa60 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				Token:  - | Type: 2 | Priority: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 10
						Found children || Index 11 | Own Index: 11 | Father Index: 10 | Own Priority 0 | Children: 0 | Depth: 6
						Found children || Index 12 | Own Index: 12 | Father Index: 10 | Own Priority 1 | Children: 2 | Depth: 6
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 11 | Index: 10
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa60 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				Token:  5 | Type: 0 | Priority: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 11
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 12 | Index: 11
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa60 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				Token:  - | Type: 2 | Priority: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 12
						Found children || Index 13 | Own Index: 13 | Father Index: 12 | Own Priority 0 | Children: 0 | Depth: 7
						Found children || Index 14 | Own Index: 14 | Father Index: 12 | Own Priority 1 | Children: 0 | Depth: 7
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 13 | Index: 12
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa60 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				Token:  6 | Type: 0 | Priority: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 13
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 14 | Index: 13
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa60 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				Token:  7 | Type: 0 | Priority: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 14
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Index: 14
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa60 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
			<<-- "static bool User::Equation::convert_token_tree_to_array(User::Tree<User::Equation::Token>&, std::vector<User::Equation::Token>&)" |
			PASS pattern: 16
			-->> "User::Tree<Payload>::~Tree() [with Payload = User::Equation::Token]" | This: 007efc40
			<<-- "User::Tree<Payload>::~Tree() [with Payload = User::Equation::Token]" |
			-->> "User::Tree<Payload>::~Tree() [with Payload = User::Equation::Token]" | This: 007efbf4
			<<-- "User::Tree<Payload>::~Tree() [with Payload = User::Equation::Token]" |
			PATTERN17 >4=1-2+3-4+5-6+7<
			-->> "bool User::Equation::parse(std::__cxx11::string)" | Parse: 4=1-2+3-4+5-6+7 | Size: 15
				-->> "static bool User::Equation::equation_to_token_array(std::__cxx11::string, std::vector<std::__cxx11::basic_string<char> >&, std::vector<User::Equation::Token>&)" | Parse: 4=1-2+3-4+5-6+7 | Size: 15
					SEEK_NEXT_TOKEN | Decode: >>4<<
					TOKEN_NUMBER | Decode: >>=<<
					Token fully decoded:  4 | type: 0 | size: 1
					Tokens decoded: 1
					SEEK_NEXT_TOKEN | Decode: >>=<<
					-->> "static bool User::Equation::is_symbol(char)" | Digit: >>=<<
					<<-- "static bool User::Equation::is_symbol(char)" | N
					-->> "static bool User::Equation::is_operator(char)" | Digit: >>=<<
					<<-- "static bool User::Equation::is_operator(char)" | Y
					Operator detected: >>=<< | Token: =
					Token fully decoded:  = | type: 2 | size: 1
					Tokens decoded: 2
					SEEK_NEXT_TOKEN | Decode: >>1<<
					TOKEN_NUMBER | Decode: >>-<<
					Token fully decoded:  1 | type: 0 | size: 1
					Tokens decoded: 3
					SEEK_NEXT_TOKEN | Decode: >>-<<
					-->> "static bool User::Equation::is_symbol(char)" | Digit: >>-<<
					<<-- "static bool User::Equation::is_symbol(char)" | N
					-->> "static bool User::Equation::is_operator(char)" | Digit: >>-<<
					<<-- "static bool User::Equation::is_operator(char)" | Y
					Operator detected: >>-<< | Token: -
					Token fully decoded:  - | type: 2 | size: 1
					Tokens decoded: 4
					SEEK_NEXT_TOKEN | Decode: >>2<<
					TOKEN_NUMBER | Decode: >>+<<
					Token fully decoded:  2 | type: 0 | size: 1
					Tokens decoded: 5
					SEEK_NEXT_TOKEN | Decode: >>+<<
					-->> "static bool User::Equation::is_symbol(char)" | Digit: >>+<<
					<<-- "static bool User::Equation::is_symbol(char)" | N
					-->> "static bool User::Equation::is_operator(char)" | Digit: >>+<<
					<<-- "static bool User::Equation::is_operator(char)" | Y
					Operator detected: >>+<< | Token: +
					Token fully decoded:  + | type: 2 | size: 1
					Tokens decoded: 6
					SEEK_NEXT_TOKEN | Decode: >>3<<
					TOKEN_NUMBER | Decode: >>-<<
					Token fully decoded:  3 | type: 0 | size: 1
					Tokens decoded: 7
					SEEK_NEXT_TOKEN | Decode: >>-<<
					-->> "static bool User::Equation::is_symbol(char)" | Digit: >>-<<
					<<-- "static bool User::Equation::is_symbol(char)" | N
					-->> "static bool User::Equation::is_operator(char)" | Digit: >>-<<
					<<-- "static bool User::Equation::is_operator(char)" | Y
					Operator detected: >>-<< | Token: -
					Token fully decoded:  - | type: 2 | size: 1
					Tokens decoded: 8
					SEEK_NEXT_TOKEN | Decode: >>4<<
					TOKEN_NUMBER | Decode: >>+<<
					Token fully decoded:  4 | type: 0 | size: 1
					Tokens decoded: 9
					SEEK_NEXT_TOKEN | Decode: >>+<<
					-->> "static bool User::Equation::is_symbol(char)" | Digit: >>+<<
					<<-- "static bool User::Equation::is_symbol(char)" | N
					-->> "static bool User::Equation::is_operator(char)" | Digit: >>+<<
					<<-- "static bool User::Equation::is_operator(char)" | Y
					Operator detected: >>+<< | Token: +
					Token fully decoded:  + | type: 2 | size: 1
					Tokens decoded: 10
					SEEK_NEXT_TOKEN | Decode: >>5<<
					TOKEN_NUMBER | Decode: >>-<<
					Token fully decoded:  5 | type: 0 | size: 1
					Tokens decoded: 11
					SEEK_NEXT_TOKEN | Decode: >>-<<
					-->> "static bool User::Equation::is_symbol(char)" | Digit: >>-<<
					<<-- "static bool User::Equation::is_symbol(char)" | N
					-->> "static bool User::Equation::is_operator(char)" | Digit: >>-<<
					<<-- "static bool User::Equation::is_operator(char)" | Y
					Operator detected: >>-<< | Token: -
					Token fully decoded:  - | type: 2 | size: 1
					Tokens decoded: 12
					SEEK_NEXT_TOKEN | Decode: >>6<<
					TOKEN_NUMBER | Decode: >>+<<
					Token fully decoded:  6 | type: 0 | size: 1
					Tokens decoded: 13
					SEEK_NEXT_TOKEN | Decode: >>+<<
					-->> "static bool User::Equation::is_symbol(char)" | Digit: >>+<<
					<<-- "static bool User::Equation::is_symbol(char)" | N
					-->> "static bool User::Equation::is_operator(char)" | Digit: >>+<<
					<<-- "static bool User::Equation::is_operator(char)" | Y
					Operator detected: >>+<< | Token: +
					Token fully decoded:  + | type: 2 | size: 1
					Tokens decoded: 14
					SEEK_NEXT_TOKEN | Decode: >>7<<
					Token fully decoded:  7 | type: 0 | size: 1
					Tokens decoded: 15
					Equations decoded into 15 tokens
					Token: >>4<< | Type: 0 | Size: 1
					Token: >>=<< | Type: 2 | Size: 1
					Token: >>1<< | Type: 0 | Size: 1
					Token: >>-<< | Type: 2 | Size: 1
					Token: >>2<< | Type: 0 | Size: 1
					Token: >>+<< | Type: 2 | Size: 1
					Token: >>3<< | Type: 0 | Size: 1
					Token: >>-<< | Type: 2 | Size: 1
					Token: >>4<< | Type: 0 | Size: 1
					Token: >>+<< | Type: 2 | Size: 1
					Token: >>5<< | Type: 0 | Size: 1
					Token: >>-<< | Type: 2 | Size: 1
					Token: >>6<< | Type: 0 | Size: 1
					Token: >>+<< | Type: 2 | Size: 1
					Token: >>7<< | Type: 0 | Size: 1
				<<-- "static bool User::Equation::equation_to_token_array(std::__cxx11::string, std::vector<std::__cxx11::basic_string<char> >&, std::vector<User::Equation::Token>&)" | Decoded 15 tokens
				Tree wasn't empty: 15 | FLUSH
				-->> "bool User::Tree<Payload>::flush() [with Payload = User::Equation::Token]" | Nodes inside the tree: 15
					-->> "bool User::Tree<Payload>::init_root() [with Payload = User::Equation::Token]" |
					<<-- "bool User::Tree<Payload>::init_root() [with Payload = User::Equation::Token]" |
				<<-- "bool User::Tree<Payload>::flush() [with Payload = User::Equation::Token]" | Nodes inside the tree: 1
				-->> "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | Token Array Size: 15 | Father 0
					-->> "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 15
						Token   0 | >4< | Open Close Priority: 0 | Symbol Priority 5 
						Token   1 | >=< | Open Close Priority: 0 | Symbol Priority 0 
						Token   2 | >1< | Open Close Priority: 0 | Symbol Priority 5 
						Token   3 | >-< | Open Close Priority: 0 | Symbol Priority 3 
						Token   4 | >2< | Open Close Priority: 0 | Symbol Priority 5 
						Token   5 | >+< | Open Close Priority: 0 | Symbol Priority 3 
						Token   6 | >3< | Open Close Priority: 0 | Symbol Priority 5 
						Token   7 | >-< | Open Close Priority: 0 | Symbol Priority 3 
						Token   8 | >4< | Open Close Priority: 0 | Symbol Priority 5 
						Token   9 | >+< | Open Close Priority: 0 | Symbol Priority 3 
						Token  10 | >5< | Open Close Priority: 0 | Symbol Priority 5 
						Token  11 | >-< | Open Close Priority: 0 | Symbol Priority 3 
						Token  12 | >6< | Open Close Priority: 0 | Symbol Priority 5 
						Token  13 | >+< | Open Close Priority: 0 | Symbol Priority 3 
						Token  14 | >7< | Open Close Priority: 0 | Symbol Priority 5 
						Candidate   0 | >4< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Default
						Candidate   1 | >=< | Open Close Priority 0 | Symbol Priority 0 | Min Priority 0
						Ignore   2 | >1< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Best Priority 0
						Ignore   3 | >-< | Open Close Priority 0 | Symbol Priority 3 | Min Priority 0 | Best Priority 0
						Ignore   4 | >2< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Best Priority 0
						Ignore   5 | >+< | Open Close Priority 0 | Symbol Priority 3 | Min Priority 0 | Best Priority 0
						Ignore   6 | >3< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Best Priority 0
						Ignore   7 | >-< | Open Close Priority 0 | Symbol Priority 3 | Min Priority 0 | Best Priority 0
						Ignore   8 | >4< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Best Priority 0
						Ignore   9 | >+< | Open Close Priority 0 | Symbol Priority 3 | Min Priority 0 | Best Priority 0
						Ignore  10 | >5< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Best Priority 0
						Ignore  11 | >-< | Open Close Priority 0 | Symbol Priority 3 | Min Priority 0 | Best Priority 0
						Ignore  12 | >6< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Best Priority 0
						Ignore  13 | >+< | Open Close Priority 0 | Symbol Priority 3 | Min Priority 0 | Best Priority 0
						Ignore  14 | >7< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Best Priority 0
						Token   1 | >=< | Highest priority token
					<<-- "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 15 | Highest Priority Token: <=> | 0 0
					Core Token: >=< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 0
					LHS: >4<
					RHS: >1<
					RHS: >-<
					RHS: >2<
					RHS: >+<
					RHS: >3<
					RHS: >-<
					RHS: >4<
					RHS: >+<
					RHS: >5<
					RHS: >-<
					RHS: >6<
					RHS: >+<
					RHS: >7<
					LHS Tokens: 1 | RHS Tokens: 13
					ROOT: >=<
					-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" | Object: 007efd18, Index: 0
					<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" |
					LHS: >=<
					-->> "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | Token Array Size: 1 | Father 0
						-->> "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1
							Token   0 | >4< | Open Close Priority: 0 | Symbol Priority 5 
							Candidate   0 | >4< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Default
							Token   0 | >4< | Highest priority token
						<<-- "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1 | Highest Priority Token: <4> | 0 5
						Core Token: >4< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 5
						LHS Tokens: 0 | RHS Tokens: 0
						-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" | Object: 007efd18, Index: 0
						<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" |
						-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
						<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 0 | Own Index: 1 | Nodes under Father: 2
					<<-- "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | PASS
					LHS of size 1 under father 0
					-->> "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | Token Array Size: 13 | Father 0
						-->> "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 13
							Token   0 | >1< | Open Close Priority: 0 | Symbol Priority 5 
							Token   1 | >-< | Open Close Priority: 0 | Symbol Priority 3 
							Token   2 | >2< | Open Close Priority: 0 | Symbol Priority 5 
							Token   3 | >+< | Open Close Priority: 0 | Symbol Priority 3 
							Token   4 | >3< | Open Close Priority: 0 | Symbol Priority 5 
							Token   5 | >-< | Open Close Priority: 0 | Symbol Priority 3 
							Token   6 | >4< | Open Close Priority: 0 | Symbol Priority 5 
							Token   7 | >+< | Open Close Priority: 0 | Symbol Priority 3 
							Token   8 | >5< | Open Close Priority: 0 | Symbol Priority 5 
							Token   9 | >-< | Open Close Priority: 0 | Symbol Priority 3 
							Token  10 | >6< | Open Close Priority: 0 | Symbol Priority 5 
							Token  11 | >+< | Open Close Priority: 0 | Symbol Priority 3 
							Token  12 | >7< | Open Close Priority: 0 | Symbol Priority 5 
							Candidate   0 | >1< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Default
							Candidate   1 | >-< | Open Close Priority 0 | Symbol Priority 3 | Min Priority 0
							Ignore   2 | >2< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Best Priority 3
							Ignore   3 | >+< | Open Close Priority 0 | Symbol Priority 3 | Min Priority 0 | Best Priority 3
							Ignore   4 | >3< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Best Priority 3
							Ignore   5 | >-< | Open Close Priority 0 | Symbol Priority 3 | Min Priority 0 | Best Priority 3
							Ignore   6 | >4< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Best Priority 3
							Ignore   7 | >+< | Open Close Priority 0 | Symbol Priority 3 | Min Priority 0 | Best Priority 3
							Ignore   8 | >5< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Best Priority 3
							Ignore   9 | >-< | Open Close Priority 0 | Symbol Priority 3 | Min Priority 0 | Best Priority 3
							Ignore  10 | >6< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Best Priority 3
							Ignore  11 | >+< | Open Close Priority 0 | Symbol Priority 3 | Min Priority 0 | Best Priority 3
							Ignore  12 | >7< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Best Priority 3
							Token   1 | >-< | Highest priority token
						<<-- "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 13 | Highest Priority Token: <-> | 0 3
						Core Token: >-< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 3
						LHS: >1<
						RHS: >2<
						RHS: >+<
						RHS: >3<
						RHS: >-<
						RHS: >4<
						RHS: >+<
						RHS: >5<
						RHS: >-<
						RHS: >6<
						RHS: >+<
						RHS: >7<
						LHS Tokens: 1 | RHS Tokens: 11
						-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
						<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 0 | Own Index: 2 | Nodes under Father: 3
						-->> "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | Token Array Size: 1 | Father 2
							-->> "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1
								Token   0 | >1< | Open Close Priority: 0 | Symbol Priority 5 
								Candidate   0 | >1< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Default
								Token   0 | >1< | Highest priority token
							<<-- "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1 | Highest Priority Token: <1> | 0 5
							Core Token: >1< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 5
							LHS Tokens: 0 | RHS Tokens: 0
							-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
							<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 2 | Own Index: 3 | Nodes under Father: 2
						<<-- "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | PASS
						LHS of size 1 under father 2
						-->> "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | Token Array Size: 11 | Father 2
							-->> "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 11
								Token   0 | >2< | Open Close Priority: 0 | Symbol Priority 5 
								Token   1 | >+< | Open Close Priority: 0 | Symbol Priority 3 
								Token   2 | >3< | Open Close Priority: 0 | Symbol Priority 5 
								Token   3 | >-< | Open Close Priority: 0 | Symbol Priority 3 
								Token   4 | >4< | Open Close Priority: 0 | Symbol Priority 5 
								Token   5 | >+< | Open Close Priority: 0 | Symbol Priority 3 
								Token   6 | >5< | Open Close Priority: 0 | Symbol Priority 5 
								Token   7 | >-< | Open Close Priority: 0 | Symbol Priority 3 
								Token   8 | >6< | Open Close Priority: 0 | Symbol Priority 5 
								Token   9 | >+< | Open Close Priority: 0 | Symbol Priority 3 
								Token  10 | >7< | Open Close Priority: 0 | Symbol Priority 5 
								Candidate   0 | >2< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Default
								Candidate   1 | >+< | Open Close Priority 0 | Symbol Priority 3 | Min Priority 0
								Ignore   2 | >3< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Best Priority 3
								Ignore   3 | >-< | Open Close Priority 0 | Symbol Priority 3 | Min Priority 0 | Best Priority 3
								Ignore   4 | >4< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Best Priority 3
								Ignore   5 | >+< | Open Close Priority 0 | Symbol Priority 3 | Min Priority 0 | Best Priority 3
								Ignore   6 | >5< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Best Priority 3
								Ignore   7 | >-< | Open Close Priority 0 | Symbol Priority 3 | Min Priority 0 | Best Priority 3
								Ignore   8 | >6< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Best Priority 3
								Ignore   9 | >+< | Open Close Priority 0 | Symbol Priority 3 | Min Priority 0 | Best Priority 3
								Ignore  10 | >7< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Best Priority 3
								Token   1 | >+< | Highest priority token
							<<-- "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 11 | Highest Priority Token: <+> | 0 3
							Core Token: >+< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 3
							LHS: >2<
							RHS: >3<
							RHS: >-<
							RHS: >4<
							RHS: >+<
							RHS: >5<
							RHS: >-<
							RHS: >6<
							RHS: >+<
							RHS: >7<
							LHS Tokens: 1 | RHS Tokens: 9
							-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
							<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 2 | Own Index: 4 | Nodes under Father: 3
							-->> "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | Token Array Size: 1 | Father 4
								-->> "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1
									Token   0 | >2< | Open Close Priority: 0 | Symbol Priority 5 
									Candidate   0 | >2< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Default
									Token   0 | >2< | Highest priority token
								<<-- "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1 | Highest Priority Token: <2> | 0 5
								Core Token: >2< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 5
								LHS Tokens: 0 | RHS Tokens: 0
								-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
								<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 4 | Own Index: 5 | Nodes under Father: 2
							<<-- "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | PASS
							LHS of size 1 under father 4
							-->> "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | Token Array Size: 9 | Father 4
								-->> "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 9
									Token   0 | >3< | Open Close Priority: 0 | Symbol Priority 5 
									Token   1 | >-< | Open Close Priority: 0 | Symbol Priority 3 
									Token   2 | >4< | Open Close Priority: 0 | Symbol Priority 5 
									Token   3 | >+< | Open Close Priority: 0 | Symbol Priority 3 
									Token   4 | >5< | Open Close Priority: 0 | Symbol Priority 5 
									Token   5 | >-< | Open Close Priority: 0 | Symbol Priority 3 
									Token   6 | >6< | Open Close Priority: 0 | Symbol Priority 5 
									Token   7 | >+< | Open Close Priority: 0 | Symbol Priority 3 
									Token   8 | >7< | Open Close Priority: 0 | Symbol Priority 5 
									Candidate   0 | >3< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Default
									Candidate   1 | >-< | Open Close Priority 0 | Symbol Priority 3 | Min Priority 0
									Ignore   2 | >4< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Best Priority 3
									Ignore   3 | >+< | Open Close Priority 0 | Symbol Priority 3 | Min Priority 0 | Best Priority 3
									Ignore   4 | >5< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Best Priority 3
									Ignore   5 | >-< | Open Close Priority 0 | Symbol Priority 3 | Min Priority 0 | Best Priority 3
									Ignore   6 | >6< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Best Priority 3
									Ignore   7 | >+< | Open Close Priority 0 | Symbol Priority 3 | Min Priority 0 | Best Priority 3
									Ignore   8 | >7< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Best Priority 3
									Token   1 | >-< | Highest priority token
								<<-- "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 9 | Highest Priority Token: <-> | 0 3
								Core Token: >-< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 3
								LHS: >3<
								RHS: >4<
								RHS: >+<
								RHS: >5<
								RHS: >-<
								RHS: >6<
								RHS: >+<
								RHS: >7<
								LHS Tokens: 1 | RHS Tokens: 7
								-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
								<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 4 | Own Index: 6 | Nodes under Father: 3
								-->> "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | Token Array Size: 1 | Father 6
									-->> "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1
										Token   0 | >3< | Open Close Priority: 0 | Symbol Priority 5 
										Candidate   0 | >3< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Default
										Token   0 | >3< | Highest priority token
									<<-- "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1 | Highest Priority Token: <3> | 0 5
									Core Token: >3< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 5
									LHS Tokens: 0 | RHS Tokens: 0
									-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
									<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 6 | Own Index: 7 | Nodes under Father: 2
								<<-- "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | PASS
								LHS of size 1 under father 6
								-->> "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | Token Array Size: 7 | Father 6
									-->> "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 7
										Token   0 | >4< | Open Close Priority: 0 | Symbol Priority 5 
										Token   1 | >+< | Open Close Priority: 0 | Symbol Priority 3 
										Token   2 | >5< | Open Close Priority: 0 | Symbol Priority 5 
										Token   3 | >-< | Open Close Priority: 0 | Symbol Priority 3 
										Token   4 | >6< | Open Close Priority: 0 | Symbol Priority 5 
										Token   5 | >+< | Open Close Priority: 0 | Symbol Priority 3 
										Token   6 | >7< | Open Close Priority: 0 | Symbol Priority 5 
										Candidate   0 | >4< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Default
										Candidate   1 | >+< | Open Close Priority 0 | Symbol Priority 3 | Min Priority 0
										Ignore   2 | >5< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Best Priority 3
										Ignore   3 | >-< | Open Close Priority 0 | Symbol Priority 3 | Min Priority 0 | Best Priority 3
										Ignore   4 | >6< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Best Priority 3
										Ignore   5 | >+< | Open Close Priority 0 | Symbol Priority 3 | Min Priority 0 | Best Priority 3
										Ignore   6 | >7< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Best Priority 3
										Token   1 | >+< | Highest priority token
									<<-- "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 7 | Highest Priority Token: <+> | 0 3
									Core Token: >+< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 3
									LHS: >4<
									RHS: >5<
									RHS: >-<
									RHS: >6<
									RHS: >+<
									RHS: >7<
									LHS Tokens: 1 | RHS Tokens: 5
									-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
									<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 6 | Own Index: 8 | Nodes under Father: 3
									-->> "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | Token Array Size: 1 | Father 8
										-->> "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1
											Token   0 | >4< | Open Close Priority: 0 | Symbol Priority 5 
											Candidate   0 | >4< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Default
											Token   0 | >4< | Highest priority token
										<<-- "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1 | Highest Priority Token: <4> | 0 5
										Core Token: >4< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 5
										LHS Tokens: 0 | RHS Tokens: 0
										-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
										<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 8 | Own Index: 9 | Nodes under Father: 2
									<<-- "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | PASS
									LHS of size 1 under father 8
									-->> "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | Token Array Size: 5 | Father 8
										-->> "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 5
											Token   0 | >5< | Open Close Priority: 0 | Symbol Priority 5 
											Token   1 | >-< | Open Close Priority: 0 | Symbol Priority 3 
											Token   2 | >6< | Open Close Priority: 0 | Symbol Priority 5 
											Token   3 | >+< | Open Close Priority: 0 | Symbol Priority 3 
											Token   4 | >7< | Open Close Priority: 0 | Symbol Priority 5 
											Candidate   0 | >5< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Default
											Candidate   1 | >-< | Open Close Priority 0 | Symbol Priority 3 | Min Priority 0
											Ignore   2 | >6< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Best Priority 3
											Ignore   3 | >+< | Open Close Priority 0 | Symbol Priority 3 | Min Priority 0 | Best Priority 3
											Ignore   4 | >7< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Best Priority 3
											Token   1 | >-< | Highest priority token
										<<-- "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 5 | Highest Priority Token: <-> | 0 3
										Core Token: >-< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 3
										LHS: >5<
										RHS: >6<
										RHS: >+<
										RHS: >7<
										LHS Tokens: 1 | RHS Tokens: 3
										-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
										<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 8 | Own Index: 10 | Nodes under Father: 3
										-->> "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | Token Array Size: 1 | Father 10
											-->> "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1
												Token   0 | >5< | Open Close Priority: 0 | Symbol Priority 5 
												Candidate   0 | >5< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Default
												Token   0 | >5< | Highest priority token
											<<-- "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1 | Highest Priority Token: <5> | 0 5
											Core Token: >5< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 5
											LHS Tokens: 0 | RHS Tokens: 0
											-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
											<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 10 | Own Index: 11 | Nodes under Father: 2
										<<-- "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | PASS
										LHS of size 1 under father 10
										-->> "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | Token Array Size: 3 | Father 10
											-->> "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 3
												Token   0 | >6< | Open Close Priority: 0 | Symbol Priority 5 
												Token   1 | >+< | Open Close Priority: 0 | Symbol Priority 3 
												Token   2 | >7< | Open Close Priority: 0 | Symbol Priority 5 
												Candidate   0 | >6< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Default
												Candidate   1 | >+< | Open Close Priority 0 | Symbol Priority 3 | Min Priority 0
												Ignore   2 | >7< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Best Priority 3
												Token   1 | >+< | Highest priority token
											<<-- "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 3 | Highest Priority Token: <+> | 0 3
											Core Token: >+< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 3
											LHS: >6<
											RHS: >7<
											LHS Tokens: 1 | RHS Tokens: 1
											-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
											<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 10 | Own Index: 12 | Nodes under Father: 3
											-->> "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | Token Array Size: 1 | Father 12
												-->> "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1
												Token   0 | >6< | Open Close Priority: 0 | Symbol Priority 5 
												Candidate   0 | >6< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Default
												Token   0 | >6< | Highest priority token
											<<-- "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1 | Highest Priority Token: <6> | 0 5
											Core Token: >6< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 5
											LHS Tokens: 0 | RHS Tokens: 0
											-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
											<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 12 | Own Index: 13 | Nodes under Father: 2
										<<-- "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | PASS
										LHS of size 1 under father 12
										-->> "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | Token Array Size: 1 | Father 12
											-->> "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1
												Token   0 | >7< | Open Close Priority: 0 | Symbol Priority 5 
												Candidate   0 | >7< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Default
												Token   0 | >7< | Highest priority token
											<<-- "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1 | Highest Priority Token: <7> | 0 5
											Core Token: >7< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 5
											LHS Tokens: 0 | RHS Tokens: 0
											-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
											<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 12 | Own Index: 14 | Nodes under Father: 3
										<<-- "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | PASS
										RHS of size 1 under father 12
									<<-- "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | PASS
									RHS of size 3 under father 10
								<<-- "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | PASS
								RHS of size 5 under father 8
							<<-- "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | PASS
							RHS of size 7 under father 6
						<<-- "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | PASS
						RHS of size 9 under father 4
					<<-- "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | PASS
					RHS of size 11 under father 2
				<<-- "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | PASS
				RHS of size 13 under father 0
			<<-- "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | PASS
			-->> "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" | Index: 0
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef904 | Begin: 1 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 0 | Stack size: 1
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef934 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 0
						Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 0 | Depth: 1
						Found children || Index 2 | Own Index: 2 | Father Index: 0 | Own Priority 1 | Children: 2 | Depth: 1
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 1 | Index: 0
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef934 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 1
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 2 | Index: 1
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef934 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 2
						Found children || Index 3 | Own Index: 3 | Father Index: 2 | Own Priority 0 | Children: 0 | Depth: 2
						Found children || Index 4 | Own Index: 4 | Father Index: 2 | Own Priority 1 | Children: 2 | Depth: 2
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 3 | Index: 2
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef934 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 3
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 4 | Index: 3
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef934 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 4
						Found children || Index 5 | Own Index: 5 | Father Index: 4 | Own Priority 0 | Children: 0 | Depth: 3
						Found children || Index 6 | Own Index: 6 | Father Index: 4 | Own Priority 1 | Children: 2 | Depth: 3
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Index: 4
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef934 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 5
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 6 | Index: 5
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef934 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 6
						Found children || Index 7 | Own Index: 7 | Father Index: 6 | Own Priority 0 | Children: 0 | Depth: 4
						Found children || Index 8 | Own Index: 8 | Father Index: 6 | Own Priority 1 | Children: 2 | Depth: 4
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 7 | Index: 6
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef934 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 7
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 8 | Index: 7
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef934 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 8
						Found children || Index 9 | Own Index: 9 | Father Index: 8 | Own Priority 0 | Children: 0 | Depth: 5
						Found children || Index 10 | Own Index: 10 | Father Index: 8 | Own Priority 1 | Children: 2 | Depth: 5
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 9 | Index: 8
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef934 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 9
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 10 | Index: 9
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef934 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 10
						Found children || Index 11 | Own Index: 11 | Father Index: 10 | Own Priority 0 | Children: 0 | Depth: 6
						Found children || Index 12 | Own Index: 12 | Father Index: 10 | Own Priority 1 | Children: 2 | Depth: 6
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 11 | Index: 10
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef934 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 11
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 12 | Index: 11
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef934 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 12
						Found children || Index 13 | Own Index: 13 | Father Index: 12 | Own Priority 0 | Children: 0 | Depth: 7
						Found children || Index 14 | Own Index: 14 | Father Index: 12 | Own Priority 1 | Children: 0 | Depth: 7
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 13 | Index: 12
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef934 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 13
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 14 | Index: 13
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef934 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 14
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Index: 14
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef934 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
			<<-- "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" |
		<<-- "bool User::Equation::parse(std::__cxx11::string)" | Token array size: 15 | Token tree size: 15
		TOKEN0
		TOKEN1
		TOKEN2
		TOKEN3
		TOKEN4
		TOKEN5
		TOKEN6
		TOKEN7
		TOKEN8
		TOKEN9
		TOKEN10
		TOKEN11
		TOKEN12
		TOKEN13
		TOKEN14
		-->> "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" | Index: 0
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa54 | Begin: 1 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 0 | Stack size: 1
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 0
					Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 0 | Depth: 1
					Found children || Index 2 | Own Index: 2 | Father Index: 0 | Own Priority 1 | Children: 2 | Depth: 1
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 1 | Index: 0
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 1
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 2 | Index: 1
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 2
					Found children || Index 3 | Own Index: 3 | Father Index: 2 | Own Priority 0 | Children: 0 | Depth: 2
					Found children || Index 4 | Own Index: 4 | Father Index: 2 | Own Priority 1 | Children: 2 | Depth: 2
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 3 | Index: 2
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 3
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 4 | Index: 3
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 4
					Found children || Index 5 | Own Index: 5 | Father Index: 4 | Own Priority 0 | Children: 0 | Depth: 3
					Found children || Index 6 | Own Index: 6 | Father Index: 4 | Own Priority 1 | Children: 2 | Depth: 3
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Index: 4
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 5
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 6 | Index: 5
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 6
					Found children || Index 7 | Own Index: 7 | Father Index: 6 | Own Priority 0 | Children: 0 | Depth: 4
					Found children || Index 8 | Own Index: 8 | Father Index: 6 | Own Priority 1 | Children: 2 | Depth: 4
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 7 | Index: 6
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 7
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 8 | Index: 7
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 8
					Found children || Index 9 | Own Index: 9 | Father Index: 8 | Own Priority 0 | Children: 0 | Depth: 5
					Found children || Index 10 | Own Index: 10 | Father Index: 8 | Own Priority 1 | Children: 2 | Depth: 5
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 9 | Index: 8
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 9
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 10 | Index: 9
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 10
					Found children || Index 11 | Own Index: 11 | Father Index: 10 | Own Priority 0 | Children: 0 | Depth: 6
					Found children || Index 12 | Own Index: 12 | Father Index: 10 | Own Priority 1 | Children: 2 | Depth: 6
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 11 | Index: 10
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 11
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 12 | Index: 11
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 12
					Found children || Index 13 | Own Index: 13 | Father Index: 12 | Own Priority 0 | Children: 0 | Depth: 7
					Found children || Index 14 | Own Index: 14 | Father Index: 12 | Own Priority 1 | Children: 0 | Depth: 7
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 13 | Index: 12
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 13
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 14 | Index: 13
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 14
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Index: 14
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
		<<-- "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" |
		-->> "User::Tree<Payload>::Tree(std::vector<User::Tree<Payload>::St_minimal_node>) [with Payload = User::Equation::Token]" | This: 007efc40 | Nodes: 15
			-->> "bool User::Tree<Payload>::init_class_vars(Payload) [with Payload = User::Equation::Token]" |
			<<-- "bool User::Tree<Payload>::init_class_vars(Payload) [with Payload = User::Equation::Token]" |
			-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
			<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 0 | Own Index: 1 | Nodes under Father: 2
			-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
			<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 0 | Own Index: 2 | Nodes under Father: 3
			-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
			<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 2 | Own Index: 3 | Nodes under Father: 2
			-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
			<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 2 | Own Index: 4 | Nodes under Father: 3
			-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
			<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 4 | Own Index: 5 | Nodes under Father: 2
			-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
			<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 4 | Own Index: 6 | Nodes under Father: 3
			-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
			<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 6 | Own Index: 7 | Nodes under Father: 2
			-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
			<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 6 | Own Index: 8 | Nodes under Father: 3
			-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
			<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 8 | Own Index: 9 | Nodes under Father: 2
			-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
			<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 8 | Own Index: 10 | Nodes under Father: 3
			-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
			<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 10 | Own Index: 11 | Nodes under Father: 2
			-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
			<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 10 | Own Index: 12 | Nodes under Father: 3
			-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
			<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 12 | Own Index: 13 | Nodes under Father: 2
			-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
			<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 12 | Own Index: 14 | Nodes under Father: 3
			-->> "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" | Index: 0
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa54 | Begin: 1 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 0 | Stack size: 1
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 0
						Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 0 | Depth: 1
						Found children || Index 2 | Own Index: 2 | Father Index: 0 | Own Priority 1 | Children: 2 | Depth: 1
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 1 | Index: 0
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 1
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 2 | Index: 1
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 2
						Found children || Index 3 | Own Index: 3 | Father Index: 2 | Own Priority 0 | Children: 0 | Depth: 2
						Found children || Index 4 | Own Index: 4 | Father Index: 2 | Own Priority 1 | Children: 2 | Depth: 2
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 3 | Index: 2
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 3
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 4 | Index: 3
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 4
						Found children || Index 5 | Own Index: 5 | Father Index: 4 | Own Priority 0 | Children: 0 | Depth: 3
						Found children || Index 6 | Own Index: 6 | Father Index: 4 | Own Priority 1 | Children: 2 | Depth: 3
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Index: 4
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 5
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 6 | Index: 5
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 6
						Found children || Index 7 | Own Index: 7 | Father Index: 6 | Own Priority 0 | Children: 0 | Depth: 4
						Found children || Index 8 | Own Index: 8 | Father Index: 6 | Own Priority 1 | Children: 2 | Depth: 4
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 7 | Index: 6
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 7
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 8 | Index: 7
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 8
						Found children || Index 9 | Own Index: 9 | Father Index: 8 | Own Priority 0 | Children: 0 | Depth: 5
						Found children || Index 10 | Own Index: 10 | Father Index: 8 | Own Priority 1 | Children: 2 | Depth: 5
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 9 | Index: 8
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 9
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 10 | Index: 9
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 10
						Found children || Index 11 | Own Index: 11 | Father Index: 10 | Own Priority 0 | Children: 0 | Depth: 6
						Found children || Index 12 | Own Index: 12 | Father Index: 10 | Own Priority 1 | Children: 2 | Depth: 6
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 11 | Index: 10
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 11
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 12 | Index: 11
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 12
						Found children || Index 13 | Own Index: 13 | Father Index: 12 | Own Priority 0 | Children: 0 | Depth: 7
						Found children || Index 14 | Own Index: 14 | Father Index: 12 | Own Priority 1 | Children: 0 | Depth: 7
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 13 | Index: 12
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 13
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 14 | Index: 13
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 14
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Index: 14
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
			<<-- "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" |
			-->> "bool User::Tree<Payload>::operator==(User::Tree<Payload>&) [with Payload = User::Equation::Token]" |
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef9cc | Begin: 1 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 0 | Stack size: 1
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef99c | Begin: 1 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 0 | Stack size: 1
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef9fc | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa2c | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 0
						Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 0 | Depth: 1
						Found children || Index 2 | Own Index: 2 | Father Index: 0 | Own Priority 1 | Children: 2 | Depth: 1
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 1 | Index: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 0
						Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 0 | Depth: 1
						Found children || Index 2 | Own Index: 2 | Father Index: 0 | Own Priority 1 | Children: 2 | Depth: 1
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 1 | Index: 0
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef9fc | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa2c | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 1
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 2 | Index: 1
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 1
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 2 | Index: 1
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef9fc | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa2c | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 2
						Found children || Index 3 | Own Index: 3 | Father Index: 2 | Own Priority 0 | Children: 0 | Depth: 2
						Found children || Index 4 | Own Index: 4 | Father Index: 2 | Own Priority 1 | Children: 2 | Depth: 2
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 3 | Index: 2
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 2
						Found children || Index 3 | Own Index: 3 | Father Index: 2 | Own Priority 0 | Children: 0 | Depth: 2
						Found children || Index 4 | Own Index: 4 | Father Index: 2 | Own Priority 1 | Children: 2 | Depth: 2
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 3 | Index: 2
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef9fc | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa2c | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 3
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 4 | Index: 3
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 3
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 4 | Index: 3
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef9fc | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa2c | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 4
						Found children || Index 5 | Own Index: 5 | Father Index: 4 | Own Priority 0 | Children: 0 | Depth: 3
						Found children || Index 6 | Own Index: 6 | Father Index: 4 | Own Priority 1 | Children: 2 | Depth: 3
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Index: 4
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 4
						Found children || Index 5 | Own Index: 5 | Father Index: 4 | Own Priority 0 | Children: 0 | Depth: 3
						Found children || Index 6 | Own Index: 6 | Father Index: 4 | Own Priority 1 | Children: 2 | Depth: 3
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Index: 4
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef9fc | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa2c | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 5
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 6 | Index: 5
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 5
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 6 | Index: 5
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef9fc | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa2c | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 6
						Found children || Index 7 | Own Index: 7 | Father Index: 6 | Own Priority 0 | Children: 0 | Depth: 4
						Found children || Index 8 | Own Index: 8 | Father Index: 6 | Own Priority 1 | Children: 2 | Depth: 4
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 7 | Index: 6
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 6
						Found children || Index 7 | Own Index: 7 | Father Index: 6 | Own Priority 0 | Children: 0 | Depth: 4
						Found children || Index 8 | Own Index: 8 | Father Index: 6 | Own Priority 1 | Children: 2 | Depth: 4
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 7 | Index: 6
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef9fc | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa2c | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 7
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 8 | Index: 7
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 7
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 8 | Index: 7
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef9fc | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa2c | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 8
						Found children || Index 9 | Own Index: 9 | Father Index: 8 | Own Priority 0 | Children: 0 | Depth: 5
						Found children || Index 10 | Own Index: 10 | Father Index: 8 | Own Priority 1 | Children: 2 | Depth: 5
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 9 | Index: 8
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 8
						Found children || Index 9 | Own Index: 9 | Father Index: 8 | Own Priority 0 | Children: 0 | Depth: 5
						Found children || Index 10 | Own Index: 10 | Father Index: 8 | Own Priority 1 | Children: 2 | Depth: 5
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 9 | Index: 8
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef9fc | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa2c | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 9
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 10 | Index: 9
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 9
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 10 | Index: 9
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef9fc | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa2c | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 10
						Found children || Index 11 | Own Index: 11 | Father Index: 10 | Own Priority 0 | Children: 0 | Depth: 6
						Found children || Index 12 | Own Index: 12 | Father Index: 10 | Own Priority 1 | Children: 2 | Depth: 6
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 11 | Index: 10
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 10
						Found children || Index 11 | Own Index: 11 | Father Index: 10 | Own Priority 0 | Children: 0 | Depth: 6
						Found children || Index 12 | Own Index: 12 | Father Index: 10 | Own Priority 1 | Children: 2 | Depth: 6
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 11 | Index: 10
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef9fc | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa2c | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 11
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 12 | Index: 11
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 11
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 12 | Index: 11
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef9fc | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa2c | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 12
						Found children || Index 13 | Own Index: 13 | Father Index: 12 | Own Priority 0 | Children: 0 | Depth: 7
						Found children || Index 14 | Own Index: 14 | Father Index: 12 | Own Priority 1 | Children: 0 | Depth: 7
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 13 | Index: 12
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 12
						Found children || Index 13 | Own Index: 13 | Father Index: 12 | Own Priority 0 | Children: 0 | Depth: 7
						Found children || Index 14 | Own Index: 14 | Father Index: 12 | Own Priority 1 | Children: 0 | Depth: 7
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 13 | Index: 12
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef9fc | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa2c | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 13
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 14 | Index: 13
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 13
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 14 | Index: 13
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef9fc | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa2c | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 14
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Index: 14
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 14
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Index: 14
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef9fc | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa2c | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
			<<-- "bool User::Tree<Payload>::operator==(User::Tree<Payload>&) [with Payload = User::Equation::Token]" | Same
			-->> "static bool User::Equation::convert_token_tree_to_array(User::Tree<User::Equation::Token>&, std::vector<User::Equation::Token>&)" |
				-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" | Object: 007efd18, Index: 0
				<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa30 | Begin: 1 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 0 | Stack size: 1
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa60 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				Token:  = | Type: 2 | Priority: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 0
						Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 0 | Depth: 1
						Found children || Index 2 | Own Index: 2 | Father Index: 0 | Own Priority 1 | Children: 2 | Depth: 1
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 1 | Index: 0
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa60 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				Token:  4 | Type: 0 | Priority: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 1
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 2 | Index: 1
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa60 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				Token:  - | Type: 2 | Priority: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 2
						Found children || Index 3 | Own Index: 3 | Father Index: 2 | Own Priority 0 | Children: 0 | Depth: 2
						Found children || Index 4 | Own Index: 4 | Father Index: 2 | Own Priority 1 | Children: 2 | Depth: 2
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 3 | Index: 2
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa60 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				Token:  1 | Type: 0 | Priority: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 3
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 4 | Index: 3
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa60 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				Token:  + | Type: 2 | Priority: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 4
						Found children || Index 5 | Own Index: 5 | Father Index: 4 | Own Priority 0 | Children: 0 | Depth: 3
						Found children || Index 6 | Own Index: 6 | Father Index: 4 | Own Priority 1 | Children: 2 | Depth: 3
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Index: 4
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa60 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				Token:  2 | Type: 0 | Priority: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 5
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 6 | Index: 5
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa60 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				Token:  - | Type: 2 | Priority: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 6
						Found children || Index 7 | Own Index: 7 | Father Index: 6 | Own Priority 0 | Children: 0 | Depth: 4
						Found children || Index 8 | Own Index: 8 | Father Index: 6 | Own Priority 1 | Children: 2 | Depth: 4
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 7 | Index: 6
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa60 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				Token:  3 | Type: 0 | Priority: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 7
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 8 | Index: 7
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa60 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				Token:  + | Type: 2 | Priority: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 8
						Found children || Index 9 | Own Index: 9 | Father Index: 8 | Own Priority 0 | Children: 0 | Depth: 5
						Found children || Index 10 | Own Index: 10 | Father Index: 8 | Own Priority 1 | Children: 2 | Depth: 5
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 9 | Index: 8
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa60 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				Token:  4 | Type: 0 | Priority: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 9
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 10 | Index: 9
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa60 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				Token:  - | Type: 2 | Priority: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 10
						Found children || Index 11 | Own Index: 11 | Father Index: 10 | Own Priority 0 | Children: 0 | Depth: 6
						Found children || Index 12 | Own Index: 12 | Father Index: 10 | Own Priority 1 | Children: 2 | Depth: 6
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 11 | Index: 10
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa60 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				Token:  5 | Type: 0 | Priority: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 11
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 12 | Index: 11
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa60 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				Token:  + | Type: 2 | Priority: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 12
						Found children || Index 13 | Own Index: 13 | Father Index: 12 | Own Priority 0 | Children: 0 | Depth: 7
						Found children || Index 14 | Own Index: 14 | Father Index: 12 | Own Priority 1 | Children: 0 | Depth: 7
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 13 | Index: 12
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa60 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				Token:  6 | Type: 0 | Priority: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 13
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 14 | Index: 13
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa60 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				Token:  7 | Type: 0 | Priority: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 14
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Index: 14
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa60 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
			<<-- "static bool User::Equation::convert_token_tree_to_array(User::Tree<User::Equation::Token>&, std::vector<User::Equation::Token>&)" |
			PASS pattern: 17
			-->> "User::Tree<Payload>::~Tree() [with Payload = User::Equation::Token]" | This: 007efc40
			<<-- "User::Tree<Payload>::~Tree() [with Payload = User::Equation::Token]" |
			-->> "User::Tree<Payload>::~Tree() [with Payload = User::Equation::Token]" | This: 007efbf4
			<<-- "User::Tree<Payload>::~Tree() [with Payload = User::Equation::Token]" |
			PATTERN18 >4=((((((+1-2)+3)-4)+5)-6)+7)<
			-->> "bool User::Equation::parse(std::__cxx11::string)" | Parse: 4=((((((+1-2)+3)-4)+5)-6)+7) | Size: 28
				-->> "static bool User::Equation::equation_to_token_array(std::__cxx11::string, std::vector<std::__cxx11::basic_string<char> >&, std::vector<User::Equation::Token>&)" | Parse: 4=((((((+1-2)+3)-4)+5)-6)+7) | Size: 28
					SEEK_NEXT_TOKEN | Decode: >>4<<
					TOKEN_NUMBER | Decode: >>=<<
					Token fully decoded:  4 | type: 0 | size: 1
					Tokens decoded: 1
					SEEK_NEXT_TOKEN | Decode: >>=<<
					-->> "static bool User::Equation::is_symbol(char)" | Digit: >>=<<
					<<-- "static bool User::Equation::is_symbol(char)" | N
					-->> "static bool User::Equation::is_operator(char)" | Digit: >>=<<
					<<-- "static bool User::Equation::is_operator(char)" | Y
					Operator detected: >>=<< | Token: =
					Token fully decoded:  = | type: 2 | size: 1
					Tokens decoded: 2
					SEEK_NEXT_TOKEN | Decode: >>(<<
					-->> "static bool User::Equation::is_symbol(char)" | Digit: >>(<<
					<<-- "static bool User::Equation::is_symbol(char)" | N
					-->> "static bool User::Equation::is_operator(char)" | Digit: >>(<<
					<<-- "static bool User::Equation::is_operator(char)" | N
					Open detected: >>(<< | Token: (
					Token fully decoded:  ( | type: 3 | size: 1
					Tokens decoded: 3
					SEEK_NEXT_TOKEN | Decode: >>(<<
					-->> "static bool User::Equation::is_symbol(char)" | Digit: >>(<<
					<<-- "static bool User::Equation::is_symbol(char)" | N
					-->> "static bool User::Equation::is_operator(char)" | Digit: >>(<<
					<<-- "static bool User::Equation::is_operator(char)" | N
					Open detected: >>(<< | Token: (
					Token fully decoded:  ( | type: 3 | size: 1
					Tokens decoded: 4
					SEEK_NEXT_TOKEN | Decode: >>(<<
					-->> "static bool User::Equation::is_symbol(char)" | Digit: >>(<<
					<<-- "static bool User::Equation::is_symbol(char)" | N
					-->> "static bool User::Equation::is_operator(char)" | Digit: >>(<<
					<<-- "static bool User::Equation::is_operator(char)" | N
					Open detected: >>(<< | Token: (
					Token fully decoded:  ( | type: 3 | size: 1
					Tokens decoded: 5
					SEEK_NEXT_TOKEN | Decode: >>(<<
					-->> "static bool User::Equation::is_symbol(char)" | Digit: >>(<<
					<<-- "static bool User::Equation::is_symbol(char)" | N
					-->> "static bool User::Equation::is_operator(char)" | Digit: >>(<<
					<<-- "static bool User::Equation::is_operator(char)" | N
					Open detected: >>(<< | Token: (
					Token fully decoded:  ( | type: 3 | size: 1
					Tokens decoded: 6
					SEEK_NEXT_TOKEN | Decode: >>(<<
					-->> "static bool User::Equation::is_symbol(char)" | Digit: >>(<<
					<<-- "static bool User::Equation::is_symbol(char)" | N
					-->> "static bool User::Equation::is_operator(char)" | Digit: >>(<<
					<<-- "static bool User::Equation::is_operator(char)" | N
					Open detected: >>(<< | Token: (
					Token fully decoded:  ( | type: 3 | size: 1
					Tokens decoded: 7
					SEEK_NEXT_TOKEN | Decode: >>(<<
					-->> "static bool User::Equation::is_symbol(char)" | Digit: >>(<<
					<<-- "static bool User::Equation::is_symbol(char)" | N
					-->> "static bool User::Equation::is_operator(char)" | Digit: >>(<<
					<<-- "static bool User::Equation::is_operator(char)" | N
					Open detected: >>(<< | Token: (
					Token fully decoded:  ( | type: 3 | size: 1
					Tokens decoded: 8
					SEEK_NEXT_TOKEN | Decode: >>+<<
					-->> "static bool User::Equation::is_symbol(char)" | Digit: >>+<<
					<<-- "static bool User::Equation::is_symbol(char)" | N
					-->> "static bool User::Equation::is_operator(char)" | Digit: >>+<<
					<<-- "static bool User::Equation::is_operator(char)" | Y
					Unary + detected
					SEEK_NEXT_TOKEN | Decode: >>1<<
					TOKEN_NUMBER | Decode: >>-<<
					Unary Operator: +
					Token fully decoded:  1 | type: 0 | size: 1
					Tokens decoded: 9
					SEEK_NEXT_TOKEN | Decode: >>-<<
					-->> "static bool User::Equation::is_symbol(char)" | Digit: >>-<<
					<<-- "static bool User::Equation::is_symbol(char)" | N
					-->> "static bool User::Equation::is_operator(char)" | Digit: >>-<<
					<<-- "static bool User::Equation::is_operator(char)" | Y
					Operator detected: >>-<< | Token: -
					Token fully decoded:  - | type: 2 | size: 1
					Tokens decoded: 10
					SEEK_NEXT_TOKEN | Decode: >>2<<
					TOKEN_NUMBER | Decode: >>)<<
					Token fully decoded:  2 | type: 0 | size: 1
					Tokens decoded: 11
					SEEK_NEXT_TOKEN | Decode: >>)<<
					-->> "static bool User::Equation::is_symbol(char)" | Digit: >>)<<
					<<-- "static bool User::Equation::is_symbol(char)" | N
					-->> "static bool User::Equation::is_operator(char)" | Digit: >>)<<
					<<-- "static bool User::Equation::is_operator(char)" | N
					Close detected: >>)<< | Token: )
					Token fully decoded:  ) | type: 4 | size: 1
					Tokens decoded: 12
					SEEK_NEXT_TOKEN | Decode: >>+<<
					-->> "static bool User::Equation::is_symbol(char)" | Digit: >>+<<
					<<-- "static bool User::Equation::is_symbol(char)" | N
					-->> "static bool User::Equation::is_operator(char)" | Digit: >>+<<
					<<-- "static bool User::Equation::is_operator(char)" | Y
					Operator detected: >>+<< | Token: +
					Token fully decoded:  + | type: 2 | size: 1
					Tokens decoded: 13
					SEEK_NEXT_TOKEN | Decode: >>3<<
					TOKEN_NUMBER | Decode: >>)<<
					Token fully decoded:  3 | type: 0 | size: 1
					Tokens decoded: 14
					SEEK_NEXT_TOKEN | Decode: >>)<<
					-->> "static bool User::Equation::is_symbol(char)" | Digit: >>)<<
					<<-- "static bool User::Equation::is_symbol(char)" | N
					-->> "static bool User::Equation::is_operator(char)" | Digit: >>)<<
					<<-- "static bool User::Equation::is_operator(char)" | N
					Close detected: >>)<< | Token: )
					Token fully decoded:  ) | type: 4 | size: 1
					Tokens decoded: 15
					SEEK_NEXT_TOKEN | Decode: >>-<<
					-->> "static bool User::Equation::is_symbol(char)" | Digit: >>-<<
					<<-- "static bool User::Equation::is_symbol(char)" | N
					-->> "static bool User::Equation::is_operator(char)" | Digit: >>-<<
					<<-- "static bool User::Equation::is_operator(char)" | Y
					Operator detected: >>-<< | Token: -
					Token fully decoded:  - | type: 2 | size: 1
					Tokens decoded: 16
					SEEK_NEXT_TOKEN | Decode: >>4<<
					TOKEN_NUMBER | Decode: >>)<<
					Token fully decoded:  4 | type: 0 | size: 1
					Tokens decoded: 17
					SEEK_NEXT_TOKEN | Decode: >>)<<
					-->> "static bool User::Equation::is_symbol(char)" | Digit: >>)<<
					<<-- "static bool User::Equation::is_symbol(char)" | N
					-->> "static bool User::Equation::is_operator(char)" | Digit: >>)<<
					<<-- "static bool User::Equation::is_operator(char)" | N
					Close detected: >>)<< | Token: )
					Token fully decoded:  ) | type: 4 | size: 1
					Tokens decoded: 18
					SEEK_NEXT_TOKEN | Decode: >>+<<
					-->> "static bool User::Equation::is_symbol(char)" | Digit: >>+<<
					<<-- "static bool User::Equation::is_symbol(char)" | N
					-->> "static bool User::Equation::is_operator(char)" | Digit: >>+<<
					<<-- "static bool User::Equation::is_operator(char)" | Y
					Operator detected: >>+<< | Token: +
					Token fully decoded:  + | type: 2 | size: 1
					Tokens decoded: 19
					SEEK_NEXT_TOKEN | Decode: >>5<<
					TOKEN_NUMBER | Decode: >>)<<
					Token fully decoded:  5 | type: 0 | size: 1
					Tokens decoded: 20
					SEEK_NEXT_TOKEN | Decode: >>)<<
					-->> "static bool User::Equation::is_symbol(char)" | Digit: >>)<<
					<<-- "static bool User::Equation::is_symbol(char)" | N
					-->> "static bool User::Equation::is_operator(char)" | Digit: >>)<<
					<<-- "static bool User::Equation::is_operator(char)" | N
					Close detected: >>)<< | Token: )
					Token fully decoded:  ) | type: 4 | size: 1
					Tokens decoded: 21
					SEEK_NEXT_TOKEN | Decode: >>-<<
					-->> "static bool User::Equation::is_symbol(char)" | Digit: >>-<<
					<<-- "static bool User::Equation::is_symbol(char)" | N
					-->> "static bool User::Equation::is_operator(char)" | Digit: >>-<<
					<<-- "static bool User::Equation::is_operator(char)" | Y
					Operator detected: >>-<< | Token: -
					Token fully decoded:  - | type: 2 | size: 1
					Tokens decoded: 22
					SEEK_NEXT_TOKEN | Decode: >>6<<
					TOKEN_NUMBER | Decode: >>)<<
					Token fully decoded:  6 | type: 0 | size: 1
					Tokens decoded: 23
					SEEK_NEXT_TOKEN | Decode: >>)<<
					-->> "static bool User::Equation::is_symbol(char)" | Digit: >>)<<
					<<-- "static bool User::Equation::is_symbol(char)" | N
					-->> "static bool User::Equation::is_operator(char)" | Digit: >>)<<
					<<-- "static bool User::Equation::is_operator(char)" | N
					Close detected: >>)<< | Token: )
					Token fully decoded:  ) | type: 4 | size: 1
					Tokens decoded: 24
					SEEK_NEXT_TOKEN | Decode: >>+<<
					-->> "static bool User::Equation::is_symbol(char)" | Digit: >>+<<
					<<-- "static bool User::Equation::is_symbol(char)" | N
					-->> "static bool User::Equation::is_operator(char)" | Digit: >>+<<
					<<-- "static bool User::Equation::is_operator(char)" | Y
					Operator detected: >>+<< | Token: +
					Token fully decoded:  + | type: 2 | size: 1
					Tokens decoded: 25
					SEEK_NEXT_TOKEN | Decode: >>7<<
					TOKEN_NUMBER | Decode: >>)<<
					Token fully decoded:  7 | type: 0 | size: 1
					Tokens decoded: 26
					SEEK_NEXT_TOKEN | Decode: >>)<<
					-->> "static bool User::Equation::is_symbol(char)" | Digit: >>)<<
					<<-- "static bool User::Equation::is_symbol(char)" | N
					-->> "static bool User::Equation::is_operator(char)" | Digit: >>)<<
					<<-- "static bool User::Equation::is_operator(char)" | N
					Close detected: >>)<< | Token: )
					Token fully decoded:  ) | type: 4 | size: 1
					Tokens decoded: 27
					-->> "static bool User::Equation::is_symbol(char)" | Digit: >> <<
					<<-- "static bool User::Equation::is_symbol(char)" | N
					-->> "static bool User::Equation::is_operator(char)" | Digit: >> <<
					<<-- "static bool User::Equation::is_operator(char)" | N
					ERR1244: Invalid Digit >> <<
					Equations decoded into 27 tokens
					Token: >>4<< | Type: 0 | Size: 1
					Token: >>=<< | Type: 2 | Size: 1
					Token: >>(<< | Type: 3 | Size: 1
					Token: >>(<< | Type: 3 | Size: 1
					Token: >>(<< | Type: 3 | Size: 1
					Token: >>(<< | Type: 3 | Size: 1
					Token: >>(<< | Type: 3 | Size: 1
					Token: >>(<< | Type: 3 | Size: 1
					Token: >>1<< | Type: 0 | Size: 1
					Token: >>-<< | Type: 2 | Size: 1
					Token: >>2<< | Type: 0 | Size: 1
					Token: >>)<< | Type: 4 | Size: 1
					Token: >>+<< | Type: 2 | Size: 1
					Token: >>3<< | Type: 0 | Size: 1
					Token: >>)<< | Type: 4 | Size: 1
					Token: >>-<< | Type: 2 | Size: 1
					Token: >>4<< | Type: 0 | Size: 1
					Token: >>)<< | Type: 4 | Size: 1
					Token: >>+<< | Type: 2 | Size: 1
					Token: >>5<< | Type: 0 | Size: 1
					Token: >>)<< | Type: 4 | Size: 1
					Token: >>-<< | Type: 2 | Size: 1
					Token: >>6<< | Type: 0 | Size: 1
					Token: >>)<< | Type: 4 | Size: 1
					Token: >>+<< | Type: 2 | Size: 1
					Token: >>7<< | Type: 0 | Size: 1
					Token: >>)<< | Type: 4 | Size: 1
				<<-- "static bool User::Equation::equation_to_token_array(std::__cxx11::string, std::vector<std::__cxx11::basic_string<char> >&, std::vector<User::Equation::Token>&)" | Decoded 27 tokens
				Tree wasn't empty: 15 | FLUSH
				-->> "bool User::Tree<Payload>::flush() [with Payload = User::Equation::Token]" | Nodes inside the tree: 15
					-->> "bool User::Tree<Payload>::init_root() [with Payload = User::Equation::Token]" |
					<<-- "bool User::Tree<Payload>::init_root() [with Payload = User::Equation::Token]" |
				<<-- "bool User::Tree<Payload>::flush() [with Payload = User::Equation::Token]" | Nodes inside the tree: 1
				-->> "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | Token Array Size: 27 | Father 0
					-->> "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 27
						Token   0 | >4< | Open Close Priority: 0 | Symbol Priority 5 
						Token   1 | >=< | Open Close Priority: 0 | Symbol Priority 0 
						Token   2 | Open | Priority: 1
						Token   3 | Open | Priority: 2
						Token   4 | Open | Priority: 3
						Token   5 | Open | Priority: 4
						Token   6 | Open | Priority: 5
						Token   7 | Open | Priority: 6
						Token   8 | >1< | Open Close Priority: 6 | Symbol Priority 5 
						Token   9 | >-< | Open Close Priority: 6 | Symbol Priority 3 
						Token  10 | >2< | Open Close Priority: 6 | Symbol Priority 5 
						Token  11 | Close| Priority: 6
						Token  12 | >+< | Open Close Priority: 5 | Symbol Priority 3 
						Token  13 | >3< | Open Close Priority: 5 | Symbol Priority 5 
						Token  14 | Close| Priority: 5
						Token  15 | >-< | Open Close Priority: 4 | Symbol Priority 3 
						Token  16 | >4< | Open Close Priority: 4 | Symbol Priority 5 
						Token  17 | Close| Priority: 4
						Token  18 | >+< | Open Close Priority: 3 | Symbol Priority 3 
						Token  19 | >5< | Open Close Priority: 3 | Symbol Priority 5 
						Token  20 | Close| Priority: 3
						Token  21 | >-< | Open Close Priority: 2 | Symbol Priority 3 
						Token  22 | >6< | Open Close Priority: 2 | Symbol Priority 5 
						Token  23 | Close| Priority: 2
						Token  24 | >+< | Open Close Priority: 1 | Symbol Priority 3 
						Token  25 | >7< | Open Close Priority: 1 | Symbol Priority 5 
						Token  26 | Close| Priority: 1
						Candidate   0 | >4< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Default
						Candidate   1 | >=< | Open Close Priority 0 | Symbol Priority 0 | Min Priority 0
						Token   1 | >=< | Highest priority token
					<<-- "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 27 | Highest Priority Token: <=> | 0 0
					Core Token: >=< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 0
					LHS: >4<
					RHS: >(<
					RHS: >(<
					RHS: >(<
					RHS: >(<
					RHS: >(<
					RHS: >(<
					RHS: >1<
					RHS: >-<
					RHS: >2<
					RHS: >)<
					RHS: >+<
					RHS: >3<
					RHS: >)<
					RHS: >-<
					RHS: >4<
					RHS: >)<
					RHS: >+<
					RHS: >5<
					RHS: >)<
					RHS: >-<
					RHS: >6<
					RHS: >)<
					RHS: >+<
					RHS: >7<
					RHS: >)<
					LHS Tokens: 1 | RHS Tokens: 25
					ROOT: >=<
					-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" | Object: 007efd18, Index: 0
					<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" |
					LHS: >=<
					-->> "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | Token Array Size: 1 | Father 0
						-->> "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1
							Token   0 | >4< | Open Close Priority: 0 | Symbol Priority 5 
							Candidate   0 | >4< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Default
							Token   0 | >4< | Highest priority token
						<<-- "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1 | Highest Priority Token: <4> | 0 5
						Core Token: >4< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 5
						LHS Tokens: 0 | RHS Tokens: 0
						-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" | Object: 007efd18, Index: 0
						<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" |
						-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
						<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 0 | Own Index: 1 | Nodes under Father: 2
					<<-- "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | PASS
					LHS of size 1 under father 0
					-->> "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | Token Array Size: 25 | Father 0
						-->> "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 25
							Token   0 | Open | Priority: 1
							Token   1 | Open | Priority: 2
							Token   2 | Open | Priority: 3
							Token   3 | Open | Priority: 4
							Token   4 | Open | Priority: 5
							Token   5 | Open | Priority: 6
							Token   6 | >1< | Open Close Priority: 6 | Symbol Priority 5 
							Token   7 | >-< | Open Close Priority: 6 | Symbol Priority 3 
							Token   8 | >2< | Open Close Priority: 6 | Symbol Priority 5 
							Token   9 | Close| Priority: 6
							Token  10 | >+< | Open Close Priority: 5 | Symbol Priority 3 
							Token  11 | >3< | Open Close Priority: 5 | Symbol Priority 5 
							Token  12 | Close| Priority: 5
							Token  13 | >-< | Open Close Priority: 4 | Symbol Priority 3 
							Token  14 | >4< | Open Close Priority: 4 | Symbol Priority 5 
							Token  15 | Close| Priority: 4
							Token  16 | >+< | Open Close Priority: 3 | Symbol Priority 3 
							Token  17 | >5< | Open Close Priority: 3 | Symbol Priority 5 
							Token  18 | Close| Priority: 3
							Token  19 | >-< | Open Close Priority: 2 | Symbol Priority 3 
							Token  20 | >6< | Open Close Priority: 2 | Symbol Priority 5 
							Token  21 | Close| Priority: 2
							Token  22 | >+< | Open Close Priority: 1 | Symbol Priority 3 
							Token  23 | >7< | Open Close Priority: 1 | Symbol Priority 5 
							Token  24 | Close| Priority: 1
							Delete Open 0 | Priority: 1 | Min Priority: 1 
							Delete Close 23 | Priority: 1 | Min Priority: 1 
							Deleted redundant priority tokens | Tokens: 23 | Min Open Close Priority: 0
							Token   0 | >(< | Open Close Priority: 1 | Symbol Priority 10 
							Token   1 | >(< | Open Close Priority: 2 | Symbol Priority 10 
							Token   2 | >(< | Open Close Priority: 3 | Symbol Priority 10 
							Token   3 | >(< | Open Close Priority: 4 | Symbol Priority 10 
							Token   4 | >(< | Open Close Priority: 5 | Symbol Priority 10 
							Token   5 | >1< | Open Close Priority: 5 | Symbol Priority 5 
							Token   6 | >-< | Open Close Priority: 5 | Symbol Priority 3 
							Token   7 | >2< | Open Close Priority: 5 | Symbol Priority 5 
							Token   8 | >)< | Open Close Priority: 5 | Symbol Priority 10 
							Token   9 | >+< | Open Close Priority: 4 | Symbol Priority 3 
							Token  10 | >3< | Open Close Priority: 4 | Symbol Priority 5 
							Token  11 | >)< | Open Close Priority: 4 | Symbol Priority 10 
							Token  12 | >-< | Open Close Priority: 3 | Symbol Priority 3 
							Token  13 | >4< | Open Close Priority: 3 | Symbol Priority 5 
							Token  14 | >)< | Open Close Priority: 3 | Symbol Priority 10 
							Token  15 | >+< | Open Close Priority: 2 | Symbol Priority 3 
							Token  16 | >5< | Open Close Priority: 2 | Symbol Priority 5 
							Token  17 | >)< | Open Close Priority: 2 | Symbol Priority 10 
							Token  18 | >-< | Open Close Priority: 1 | Symbol Priority 3 
							Token  19 | >6< | Open Close Priority: 1 | Symbol Priority 5 
							Token  20 | >)< | Open Close Priority: 1 | Symbol Priority 10 
							Token  21 | >+< | Open Close Priority: 0 | Symbol Priority 3 
							Token  22 | >7< | Open Close Priority: 0 | Symbol Priority 5 
							Candidate  21 | >+< | Open Close Priority 0 | Symbol Priority 3 | Min Priority 0 | Default
							Ignore  22 | >7< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Best Priority 3
							Token  21 | >+< | Highest priority token
						<<-- "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 23 | Highest Priority Token: <+> | 0 3
						Core Token: >+< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 3
						LHS: >(<
						LHS: >(<
						LHS: >(<
						LHS: >(<
						LHS: >(<
						LHS: >1<
						LHS: >-<
						LHS: >2<
						LHS: >)<
						LHS: >+<
						LHS: >3<
						LHS: >)<
						LHS: >-<
						LHS: >4<
						LHS: >)<
						LHS: >+<
						LHS: >5<
						LHS: >)<
						LHS: >-<
						LHS: >6<
						LHS: >)<
						RHS: >7<
						LHS Tokens: 21 | RHS Tokens: 1
						-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
						<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 0 | Own Index: 2 | Nodes under Father: 3
						-->> "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | Token Array Size: 21 | Father 2
							-->> "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 21
								Token   0 | Open | Priority: 1
								Token   1 | Open | Priority: 2
								Token   2 | Open | Priority: 3
								Token   3 | Open | Priority: 4
								Token   4 | Open | Priority: 5
								Token   5 | >1< | Open Close Priority: 5 | Symbol Priority 5 
								Token   6 | >-< | Open Close Priority: 5 | Symbol Priority 3 
								Token   7 | >2< | Open Close Priority: 5 | Symbol Priority 5 
								Token   8 | Close| Priority: 5
								Token   9 | >+< | Open Close Priority: 4 | Symbol Priority 3 
								Token  10 | >3< | Open Close Priority: 4 | Symbol Priority 5 
								Token  11 | Close| Priority: 4
								Token  12 | >-< | Open Close Priority: 3 | Symbol Priority 3 
								Token  13 | >4< | Open Close Priority: 3 | Symbol Priority 5 
								Token  14 | Close| Priority: 3
								Token  15 | >+< | Open Close Priority: 2 | Symbol Priority 3 
								Token  16 | >5< | Open Close Priority: 2 | Symbol Priority 5 
								Token  17 | Close| Priority: 2
								Token  18 | >-< | Open Close Priority: 1 | Symbol Priority 3 
								Token  19 | >6< | Open Close Priority: 1 | Symbol Priority 5 
								Token  20 | Close| Priority: 1
								Delete Open 0 | Priority: 1 | Min Priority: 1 
								Delete Close 19 | Priority: 1 | Min Priority: 1 
								Deleted redundant priority tokens | Tokens: 19 | Min Open Close Priority: 0
								Token   0 | >(< | Open Close Priority: 1 | Symbol Priority 10 
								Token   1 | >(< | Open Close Priority: 2 | Symbol Priority 10 
								Token   2 | >(< | Open Close Priority: 3 | Symbol Priority 10 
								Token   3 | >(< | Open Close Priority: 4 | Symbol Priority 10 
								Token   4 | >1< | Open Close Priority: 4 | Symbol Priority 5 
								Token   5 | >-< | Open Close Priority: 4 | Symbol Priority 3 
								Token   6 | >2< | Open Close Priority: 4 | Symbol Priority 5 
								Token   7 | >)< | Open Close Priority: 4 | Symbol Priority 10 
								Token   8 | >+< | Open Close Priority: 3 | Symbol Priority 3 
								Token   9 | >3< | Open Close Priority: 3 | Symbol Priority 5 
								Token  10 | >)< | Open Close Priority: 3 | Symbol Priority 10 
								Token  11 | >-< | Open Close Priority: 2 | Symbol Priority 3 
								Token  12 | >4< | Open Close Priority: 2 | Symbol Priority 5 
								Token  13 | >)< | Open Close Priority: 2 | Symbol Priority 10 
								Token  14 | >+< | Open Close Priority: 1 | Symbol Priority 3 
								Token  15 | >5< | Open Close Priority: 1 | Symbol Priority 5 
								Token  16 | >)< | Open Close Priority: 1 | Symbol Priority 10 
								Token  17 | >-< | Open Close Priority: 0 | Symbol Priority 3 
								Token  18 | >6< | Open Close Priority: 0 | Symbol Priority 5 
								Candidate  17 | >-< | Open Close Priority 0 | Symbol Priority 3 | Min Priority 0 | Default
								Ignore  18 | >6< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Best Priority 3
								Token  17 | >-< | Highest priority token
							<<-- "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 19 | Highest Priority Token: <-> | 0 3
							Core Token: >-< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 3
							LHS: >(<
							LHS: >(<
							LHS: >(<
							LHS: >(<
							LHS: >1<
							LHS: >-<
							LHS: >2<
							LHS: >)<
							LHS: >+<
							LHS: >3<
							LHS: >)<
							LHS: >-<
							LHS: >4<
							LHS: >)<
							LHS: >+<
							LHS: >5<
							LHS: >)<
							RHS: >6<
							LHS Tokens: 17 | RHS Tokens: 1
							-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
							<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 2 | Own Index: 3 | Nodes under Father: 2
							-->> "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | Token Array Size: 17 | Father 3
								-->> "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 17
									Token   0 | Open | Priority: 1
									Token   1 | Open | Priority: 2
									Token   2 | Open | Priority: 3
									Token   3 | Open | Priority: 4
									Token   4 | >1< | Open Close Priority: 4 | Symbol Priority 5 
									Token   5 | >-< | Open Close Priority: 4 | Symbol Priority 3 
									Token   6 | >2< | Open Close Priority: 4 | Symbol Priority 5 
									Token   7 | Close| Priority: 4
									Token   8 | >+< | Open Close Priority: 3 | Symbol Priority 3 
									Token   9 | >3< | Open Close Priority: 3 | Symbol Priority 5 
									Token  10 | Close| Priority: 3
									Token  11 | >-< | Open Close Priority: 2 | Symbol Priority 3 
									Token  12 | >4< | Open Close Priority: 2 | Symbol Priority 5 
									Token  13 | Close| Priority: 2
									Token  14 | >+< | Open Close Priority: 1 | Symbol Priority 3 
									Token  15 | >5< | Open Close Priority: 1 | Symbol Priority 5 
									Token  16 | Close| Priority: 1
									Delete Open 0 | Priority: 1 | Min Priority: 1 
									Delete Close 15 | Priority: 1 | Min Priority: 1 
									Deleted redundant priority tokens | Tokens: 15 | Min Open Close Priority: 0
									Token   0 | >(< | Open Close Priority: 1 | Symbol Priority 10 
									Token   1 | >(< | Open Close Priority: 2 | Symbol Priority 10 
									Token   2 | >(< | Open Close Priority: 3 | Symbol Priority 10 
									Token   3 | >1< | Open Close Priority: 3 | Symbol Priority 5 
									Token   4 | >-< | Open Close Priority: 3 | Symbol Priority 3 
									Token   5 | >2< | Open Close Priority: 3 | Symbol Priority 5 
									Token   6 | >)< | Open Close Priority: 3 | Symbol Priority 10 
									Token   7 | >+< | Open Close Priority: 2 | Symbol Priority 3 
									Token   8 | >3< | Open Close Priority: 2 | Symbol Priority 5 
									Token   9 | >)< | Open Close Priority: 2 | Symbol Priority 10 
									Token  10 | >-< | Open Close Priority: 1 | Symbol Priority 3 
									Token  11 | >4< | Open Close Priority: 1 | Symbol Priority 5 
									Token  12 | >)< | Open Close Priority: 1 | Symbol Priority 10 
									Token  13 | >+< | Open Close Priority: 0 | Symbol Priority 3 
									Token  14 | >5< | Open Close Priority: 0 | Symbol Priority 5 
									Candidate  13 | >+< | Open Close Priority 0 | Symbol Priority 3 | Min Priority 0 | Default
									Ignore  14 | >5< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Best Priority 3
									Token  13 | >+< | Highest priority token
								<<-- "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 15 | Highest Priority Token: <+> | 0 3
								Core Token: >+< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 3
								LHS: >(<
								LHS: >(<
								LHS: >(<
								LHS: >1<
								LHS: >-<
								LHS: >2<
								LHS: >)<
								LHS: >+<
								LHS: >3<
								LHS: >)<
								LHS: >-<
								LHS: >4<
								LHS: >)<
								RHS: >5<
								LHS Tokens: 13 | RHS Tokens: 1
								-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
								<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 3 | Own Index: 4 | Nodes under Father: 2
								-->> "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | Token Array Size: 13 | Father 4
									-->> "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 13
										Token   0 | Open | Priority: 1
										Token   1 | Open | Priority: 2
										Token   2 | Open | Priority: 3
										Token   3 | >1< | Open Close Priority: 3 | Symbol Priority 5 
										Token   4 | >-< | Open Close Priority: 3 | Symbol Priority 3 
										Token   5 | >2< | Open Close Priority: 3 | Symbol Priority 5 
										Token   6 | Close| Priority: 3
										Token   7 | >+< | Open Close Priority: 2 | Symbol Priority 3 
										Token   8 | >3< | Open Close Priority: 2 | Symbol Priority 5 
										Token   9 | Close| Priority: 2
										Token  10 | >-< | Open Close Priority: 1 | Symbol Priority 3 
										Token  11 | >4< | Open Close Priority: 1 | Symbol Priority 5 
										Token  12 | Close| Priority: 1
										Delete Open 0 | Priority: 1 | Min Priority: 1 
										Delete Close 11 | Priority: 1 | Min Priority: 1 
										Deleted redundant priority tokens | Tokens: 11 | Min Open Close Priority: 0
										Token   0 | >(< | Open Close Priority: 1 | Symbol Priority 10 
										Token   1 | >(< | Open Close Priority: 2 | Symbol Priority 10 
										Token   2 | >1< | Open Close Priority: 2 | Symbol Priority 5 
										Token   3 | >-< | Open Close Priority: 2 | Symbol Priority 3 
										Token   4 | >2< | Open Close Priority: 2 | Symbol Priority 5 
										Token   5 | >)< | Open Close Priority: 2 | Symbol Priority 10 
										Token   6 | >+< | Open Close Priority: 1 | Symbol Priority 3 
										Token   7 | >3< | Open Close Priority: 1 | Symbol Priority 5 
										Token   8 | >)< | Open Close Priority: 1 | Symbol Priority 10 
										Token   9 | >-< | Open Close Priority: 0 | Symbol Priority 3 
										Token  10 | >4< | Open Close Priority: 0 | Symbol Priority 5 
										Candidate   9 | >-< | Open Close Priority 0 | Symbol Priority 3 | Min Priority 0 | Default
										Ignore  10 | >4< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Best Priority 3
										Token   9 | >-< | Highest priority token
									<<-- "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 11 | Highest Priority Token: <-> | 0 3
									Core Token: >-< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 3
									LHS: >(<
									LHS: >(<
									LHS: >1<
									LHS: >-<
									LHS: >2<
									LHS: >)<
									LHS: >+<
									LHS: >3<
									LHS: >)<
									RHS: >4<
									LHS Tokens: 9 | RHS Tokens: 1
									-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
									<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 4 | Own Index: 5 | Nodes under Father: 2
									-->> "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | Token Array Size: 9 | Father 5
										-->> "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 9
											Token   0 | Open | Priority: 1
											Token   1 | Open | Priority: 2
											Token   2 | >1< | Open Close Priority: 2 | Symbol Priority 5 
											Token   3 | >-< | Open Close Priority: 2 | Symbol Priority 3 
											Token   4 | >2< | Open Close Priority: 2 | Symbol Priority 5 
											Token   5 | Close| Priority: 2
											Token   6 | >+< | Open Close Priority: 1 | Symbol Priority 3 
											Token   7 | >3< | Open Close Priority: 1 | Symbol Priority 5 
											Token   8 | Close| Priority: 1
											Delete Open 0 | Priority: 1 | Min Priority: 1 
											Delete Close 7 | Priority: 1 | Min Priority: 1 
											Deleted redundant priority tokens | Tokens: 7 | Min Open Close Priority: 0
											Token   0 | >(< | Open Close Priority: 1 | Symbol Priority 10 
											Token   1 | >1< | Open Close Priority: 1 | Symbol Priority 5 
											Token   2 | >-< | Open Close Priority: 1 | Symbol Priority 3 
											Token   3 | >2< | Open Close Priority: 1 | Symbol Priority 5 
											Token   4 | >)< | Open Close Priority: 1 | Symbol Priority 10 
											Token   5 | >+< | Open Close Priority: 0 | Symbol Priority 3 
											Token   6 | >3< | Open Close Priority: 0 | Symbol Priority 5 
											Candidate   5 | >+< | Open Close Priority 0 | Symbol Priority 3 | Min Priority 0 | Default
											Ignore   6 | >3< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Best Priority 3
											Token   5 | >+< | Highest priority token
										<<-- "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 7 | Highest Priority Token: <+> | 0 3
										Core Token: >+< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 3
										LHS: >(<
										LHS: >1<
										LHS: >-<
										LHS: >2<
										LHS: >)<
										RHS: >3<
										LHS Tokens: 5 | RHS Tokens: 1
										-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
										<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 5 | Own Index: 6 | Nodes under Father: 2
										-->> "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | Token Array Size: 5 | Father 6
											-->> "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 5
												Token   0 | Open | Priority: 1
												Token   1 | >1< | Open Close Priority: 1 | Symbol Priority 5 
												Token   2 | >-< | Open Close Priority: 1 | Symbol Priority 3 
												Token   3 | >2< | Open Close Priority: 1 | Symbol Priority 5 
												Token   4 | Close| Priority: 1
												Delete Open 0 | Priority: 1 | Min Priority: 1 
												Delete Close 3 | Priority: 1 | Min Priority: 1 
												Deleted redundant priority tokens | Tokens: 3 | Min Open Close Priority: 0
												Token   0 | >1< | Open Close Priority: 0 | Symbol Priority 5 
												Token   1 | >-< | Open Close Priority: 0 | Symbol Priority 3 
												Token   2 | >2< | Open Close Priority: 0 | Symbol Priority 5 
												Candidate   0 | >1< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Default
												Candidate   1 | >-< | Open Close Priority 0 | Symbol Priority 3 | Min Priority 0
												Ignore   2 | >2< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Best Priority 3
												Token   1 | >-< | Highest priority token
											<<-- "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 3 | Highest Priority Token: <-> | 0 3
											Core Token: >-< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 3
											LHS: >1<
											RHS: >2<
											LHS Tokens: 1 | RHS Tokens: 1
											-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
											<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 6 | Own Index: 7 | Nodes under Father: 2
											-->> "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | Token Array Size: 1 | Father 7
												-->> "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1
												Token   0 | >1< | Open Close Priority: 0 | Symbol Priority 5 
												Candidate   0 | >1< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Default
												Token   0 | >1< | Highest priority token
											<<-- "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1 | Highest Priority Token: <1> | 0 5
											Core Token: >1< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 5
											LHS Tokens: 0 | RHS Tokens: 0
											-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
											<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 7 | Own Index: 8 | Nodes under Father: 2
										<<-- "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | PASS
										LHS of size 1 under father 7
										-->> "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | Token Array Size: 1 | Father 7
											-->> "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1
												Token   0 | >2< | Open Close Priority: 0 | Symbol Priority 5 
												Candidate   0 | >2< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Default
												Token   0 | >2< | Highest priority token
											<<-- "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1 | Highest Priority Token: <2> | 0 5
											Core Token: >2< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 5
											LHS Tokens: 0 | RHS Tokens: 0
											-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
											<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 7 | Own Index: 9 | Nodes under Father: 3
										<<-- "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | PASS
										RHS of size 1 under father 7
									<<-- "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | PASS
									LHS of size 3 under father 6
									-->> "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | Token Array Size: 1 | Father 6
										-->> "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1
											Token   0 | >3< | Open Close Priority: 0 | Symbol Priority 5 
											Candidate   0 | >3< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Default
											Token   0 | >3< | Highest priority token
										<<-- "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1 | Highest Priority Token: <3> | 0 5
										Core Token: >3< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 5
										LHS Tokens: 0 | RHS Tokens: 0
										-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
										<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 6 | Own Index: 10 | Nodes under Father: 3
									<<-- "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | PASS
									RHS of size 1 under father 6
								<<-- "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | PASS
								LHS of size 7 under father 5
								-->> "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | Token Array Size: 1 | Father 5
									-->> "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1
										Token   0 | >4< | Open Close Priority: 0 | Symbol Priority 5 
										Candidate   0 | >4< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Default
										Token   0 | >4< | Highest priority token
									<<-- "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1 | Highest Priority Token: <4> | 0 5
									Core Token: >4< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 5
									LHS Tokens: 0 | RHS Tokens: 0
									-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
									<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 5 | Own Index: 11 | Nodes under Father: 3
								<<-- "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | PASS
								RHS of size 1 under father 5
							<<-- "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | PASS
							LHS of size 11 under father 4
							-->> "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | Token Array Size: 1 | Father 4
								-->> "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1
									Token   0 | >5< | Open Close Priority: 0 | Symbol Priority 5 
									Candidate   0 | >5< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Default
									Token   0 | >5< | Highest priority token
								<<-- "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1 | Highest Priority Token: <5> | 0 5
								Core Token: >5< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 5
								LHS Tokens: 0 | RHS Tokens: 0
								-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
								<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 4 | Own Index: 12 | Nodes under Father: 3
							<<-- "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | PASS
							RHS of size 1 under father 4
						<<-- "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | PASS
						LHS of size 15 under father 3
						-->> "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | Token Array Size: 1 | Father 3
							-->> "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1
								Token   0 | >6< | Open Close Priority: 0 | Symbol Priority 5 
								Candidate   0 | >6< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Default
								Token   0 | >6< | Highest priority token
							<<-- "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1 | Highest Priority Token: <6> | 0 5
							Core Token: >6< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 5
							LHS Tokens: 0 | RHS Tokens: 0
							-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
							<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 3 | Own Index: 13 | Nodes under Father: 3
						<<-- "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | PASS
						RHS of size 1 under father 3
					<<-- "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | PASS
					LHS of size 19 under father 2
					-->> "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | Token Array Size: 1 | Father 2
						-->> "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1
							Token   0 | >7< | Open Close Priority: 0 | Symbol Priority 5 
							Candidate   0 | >7< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Default
							Token   0 | >7< | Highest priority token
						<<-- "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1 | Highest Priority Token: <7> | 0 5
						Core Token: >7< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 5
						LHS Tokens: 0 | RHS Tokens: 0
						-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
						<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 2 | Own Index: 14 | Nodes under Father: 3
					<<-- "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | PASS
					RHS of size 1 under father 2
				<<-- "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | PASS
				RHS of size 23 under father 0
			<<-- "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | PASS
			-->> "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" | Index: 0
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef904 | Begin: 1 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 0 | Stack size: 1
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef934 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 0
						Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 0 | Depth: 1
						Found children || Index 2 | Own Index: 2 | Father Index: 0 | Own Priority 1 | Children: 2 | Depth: 1
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 1 | Index: 0
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef934 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 1
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 2 | Index: 1
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef934 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 2
						Found children || Index 3 | Own Index: 3 | Father Index: 2 | Own Priority 0 | Children: 2 | Depth: 2
						Found children || Index 14 | Own Index: 14 | Father Index: 2 | Own Priority 1 | Children: 0 | Depth: 2
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 3 | Index: 2
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef934 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 3
						Found children || Index 4 | Own Index: 4 | Father Index: 3 | Own Priority 0 | Children: 2 | Depth: 3
						Found children || Index 13 | Own Index: 13 | Father Index: 3 | Own Priority 1 | Children: 0 | Depth: 3
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 4 | Index: 3
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef934 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 4
						Found children || Index 5 | Own Index: 5 | Father Index: 4 | Own Priority 0 | Children: 2 | Depth: 4
						Found children || Index 12 | Own Index: 12 | Father Index: 4 | Own Priority 1 | Children: 0 | Depth: 4
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Index: 4
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef934 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 5
						Found children || Index 6 | Own Index: 6 | Father Index: 5 | Own Priority 0 | Children: 2 | Depth: 5
						Found children || Index 11 | Own Index: 11 | Father Index: 5 | Own Priority 1 | Children: 0 | Depth: 5
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 6 | Index: 5
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef934 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 6
						Found children || Index 7 | Own Index: 7 | Father Index: 6 | Own Priority 0 | Children: 2 | Depth: 6
						Found children || Index 10 | Own Index: 10 | Father Index: 6 | Own Priority 1 | Children: 0 | Depth: 6
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 7 | Index: 6
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef934 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 7
						Found children || Index 8 | Own Index: 8 | Father Index: 7 | Own Priority 0 | Children: 0 | Depth: 7
						Found children || Index 9 | Own Index: 9 | Father Index: 7 | Own Priority 1 | Children: 0 | Depth: 7
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 8 | Index: 7
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef934 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 8
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 9 | Index: 8
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef934 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 9
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 10 | Index: 9
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef934 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 10
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 11 | Index: 10
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef934 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 11
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 12 | Index: 11
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef934 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 12
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 13 | Index: 12
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef934 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 13
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 14 | Index: 13
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef934 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 14
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Index: 14
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef934 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
			<<-- "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" |
		<<-- "bool User::Equation::parse(std::__cxx11::string)" | Token array size: 27 | Token tree size: 15
		TOKEN0
		TOKEN1
		TOKEN2
		TOKEN3
		TOKEN4
		TOKEN5
		TOKEN6
		TOKEN7
		TOKEN8
		TOKEN9
		TOKEN10
		TOKEN11
		TOKEN12
		TOKEN13
		TOKEN14
		TOKEN15
		TOKEN16
		TOKEN17
		TOKEN18
		TOKEN19
		TOKEN20
		TOKEN21
		TOKEN22
		TOKEN23
		TOKEN24
		TOKEN25
		TOKEN26
		-->> "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" | Index: 0
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa54 | Begin: 1 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 0 | Stack size: 1
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 0
					Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 0 | Depth: 1
					Found children || Index 2 | Own Index: 2 | Father Index: 0 | Own Priority 1 | Children: 2 | Depth: 1
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 1 | Index: 0
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 1
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 2 | Index: 1
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 2
					Found children || Index 3 | Own Index: 3 | Father Index: 2 | Own Priority 0 | Children: 2 | Depth: 2
					Found children || Index 14 | Own Index: 14 | Father Index: 2 | Own Priority 1 | Children: 0 | Depth: 2
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 3 | Index: 2
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 3
					Found children || Index 4 | Own Index: 4 | Father Index: 3 | Own Priority 0 | Children: 2 | Depth: 3
					Found children || Index 13 | Own Index: 13 | Father Index: 3 | Own Priority 1 | Children: 0 | Depth: 3
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 4 | Index: 3
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 4
					Found children || Index 5 | Own Index: 5 | Father Index: 4 | Own Priority 0 | Children: 2 | Depth: 4
					Found children || Index 12 | Own Index: 12 | Father Index: 4 | Own Priority 1 | Children: 0 | Depth: 4
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Index: 4
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 5
					Found children || Index 6 | Own Index: 6 | Father Index: 5 | Own Priority 0 | Children: 2 | Depth: 5
					Found children || Index 11 | Own Index: 11 | Father Index: 5 | Own Priority 1 | Children: 0 | Depth: 5
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 6 | Index: 5
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 6
					Found children || Index 7 | Own Index: 7 | Father Index: 6 | Own Priority 0 | Children: 2 | Depth: 6
					Found children || Index 10 | Own Index: 10 | Father Index: 6 | Own Priority 1 | Children: 0 | Depth: 6
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 7 | Index: 6
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 7
					Found children || Index 8 | Own Index: 8 | Father Index: 7 | Own Priority 0 | Children: 0 | Depth: 7
					Found children || Index 9 | Own Index: 9 | Father Index: 7 | Own Priority 1 | Children: 0 | Depth: 7
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 8 | Index: 7
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 8
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 9 | Index: 8
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 9
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 10 | Index: 9
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 10
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 11 | Index: 10
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 11
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 12 | Index: 11
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 12
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 13 | Index: 12
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 13
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 14 | Index: 13
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 14
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Index: 14
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
		<<-- "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" |
		-->> "User::Tree<Payload>::Tree(std::vector<User::Tree<Payload>::St_minimal_node>) [with Payload = User::Equation::Token]" | This: 007efc40 | Nodes: 15
			-->> "bool User::Tree<Payload>::init_class_vars(Payload) [with Payload = User::Equation::Token]" |
			<<-- "bool User::Tree<Payload>::init_class_vars(Payload) [with Payload = User::Equation::Token]" |
			-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
			<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 0 | Own Index: 1 | Nodes under Father: 2
			-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
			<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 0 | Own Index: 2 | Nodes under Father: 3
			-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
			<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 2 | Own Index: 3 | Nodes under Father: 2
			-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
			<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 2 | Own Index: 4 | Nodes under Father: 3
			-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
			<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 3 | Own Index: 5 | Nodes under Father: 2
			-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
			<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 3 | Own Index: 6 | Nodes under Father: 3
			-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
			<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 5 | Own Index: 7 | Nodes under Father: 2
			-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
			<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 5 | Own Index: 8 | Nodes under Father: 3
			-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
			<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 7 | Own Index: 9 | Nodes under Father: 2
			-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
			<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 7 | Own Index: 10 | Nodes under Father: 3
			-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
			<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 9 | Own Index: 11 | Nodes under Father: 2
			-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
			<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 9 | Own Index: 12 | Nodes under Father: 3
			-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
			<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 11 | Own Index: 13 | Nodes under Father: 2
			-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
			<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 11 | Own Index: 14 | Nodes under Father: 3
			-->> "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" | Index: 0
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa54 | Begin: 1 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 0 | Stack size: 1
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 0
						Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 0 | Depth: 1
						Found children || Index 2 | Own Index: 2 | Father Index: 0 | Own Priority 1 | Children: 2 | Depth: 1
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 1 | Index: 0
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 1
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 2 | Index: 1
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 2
						Found children || Index 3 | Own Index: 3 | Father Index: 2 | Own Priority 0 | Children: 2 | Depth: 2
						Found children || Index 4 | Own Index: 4 | Father Index: 2 | Own Priority 1 | Children: 0 | Depth: 2
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 3 | Index: 2
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 3
						Found children || Index 5 | Own Index: 5 | Father Index: 3 | Own Priority 0 | Children: 2 | Depth: 3
						Found children || Index 6 | Own Index: 6 | Father Index: 3 | Own Priority 1 | Children: 0 | Depth: 3
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 4 | Index: 3
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 5
						Found children || Index 7 | Own Index: 7 | Father Index: 5 | Own Priority 0 | Children: 2 | Depth: 4
						Found children || Index 8 | Own Index: 8 | Father Index: 5 | Own Priority 1 | Children: 0 | Depth: 4
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Index: 5
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 7
						Found children || Index 9 | Own Index: 9 | Father Index: 7 | Own Priority 0 | Children: 2 | Depth: 5
						Found children || Index 10 | Own Index: 10 | Father Index: 7 | Own Priority 1 | Children: 0 | Depth: 5
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 6 | Index: 7
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 9
						Found children || Index 11 | Own Index: 11 | Father Index: 9 | Own Priority 0 | Children: 2 | Depth: 6
						Found children || Index 12 | Own Index: 12 | Father Index: 9 | Own Priority 1 | Children: 0 | Depth: 6
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 7 | Index: 9
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 11
						Found children || Index 13 | Own Index: 13 | Father Index: 11 | Own Priority 0 | Children: 0 | Depth: 7
						Found children || Index 14 | Own Index: 14 | Father Index: 11 | Own Priority 1 | Children: 0 | Depth: 7
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 8 | Index: 11
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 13
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 9 | Index: 13
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 14
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 10 | Index: 14
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 12
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 11 | Index: 12
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 10
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 12 | Index: 10
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 8
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 13 | Index: 8
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 6
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 14 | Index: 6
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 4
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Index: 4
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
			<<-- "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" |
			-->> "bool User::Tree<Payload>::operator==(User::Tree<Payload>&) [with Payload = User::Equation::Token]" |
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef9cc | Begin: 1 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 0 | Stack size: 1
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef99c | Begin: 1 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 0 | Stack size: 1
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef9fc | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa2c | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 0
						Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 0 | Depth: 1
						Found children || Index 2 | Own Index: 2 | Father Index: 0 | Own Priority 1 | Children: 2 | Depth: 1
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 1 | Index: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 0
						Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 0 | Depth: 1
						Found children || Index 2 | Own Index: 2 | Father Index: 0 | Own Priority 1 | Children: 2 | Depth: 1
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 1 | Index: 0
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef9fc | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa2c | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 1
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 2 | Index: 1
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 1
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 2 | Index: 1
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef9fc | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa2c | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 2
						Found children || Index 3 | Own Index: 3 | Father Index: 2 | Own Priority 0 | Children: 2 | Depth: 2
						Found children || Index 14 | Own Index: 14 | Father Index: 2 | Own Priority 1 | Children: 0 | Depth: 2
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 3 | Index: 2
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 2
						Found children || Index 3 | Own Index: 3 | Father Index: 2 | Own Priority 0 | Children: 2 | Depth: 2
						Found children || Index 4 | Own Index: 4 | Father Index: 2 | Own Priority 1 | Children: 0 | Depth: 2
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 3 | Index: 2
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef9fc | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa2c | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 3
						Found children || Index 4 | Own Index: 4 | Father Index: 3 | Own Priority 0 | Children: 2 | Depth: 3
						Found children || Index 13 | Own Index: 13 | Father Index: 3 | Own Priority 1 | Children: 0 | Depth: 3
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 4 | Index: 3
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 3
						Found children || Index 5 | Own Index: 5 | Father Index: 3 | Own Priority 0 | Children: 2 | Depth: 3
						Found children || Index 6 | Own Index: 6 | Father Index: 3 | Own Priority 1 | Children: 0 | Depth: 3
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 4 | Index: 3
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef9fc | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa2c | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 4
						Found children || Index 5 | Own Index: 5 | Father Index: 4 | Own Priority 0 | Children: 2 | Depth: 4
						Found children || Index 12 | Own Index: 12 | Father Index: 4 | Own Priority 1 | Children: 0 | Depth: 4
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Index: 4
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 5
						Found children || Index 7 | Own Index: 7 | Father Index: 5 | Own Priority 0 | Children: 2 | Depth: 4
						Found children || Index 8 | Own Index: 8 | Father Index: 5 | Own Priority 1 | Children: 0 | Depth: 4
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Index: 5
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef9fc | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa2c | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 5
						Found children || Index 6 | Own Index: 6 | Father Index: 5 | Own Priority 0 | Children: 2 | Depth: 5
						Found children || Index 11 | Own Index: 11 | Father Index: 5 | Own Priority 1 | Children: 0 | Depth: 5
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 6 | Index: 5
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 7
						Found children || Index 9 | Own Index: 9 | Father Index: 7 | Own Priority 0 | Children: 2 | Depth: 5
						Found children || Index 10 | Own Index: 10 | Father Index: 7 | Own Priority 1 | Children: 0 | Depth: 5
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 6 | Index: 7
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef9fc | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa2c | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 6
						Found children || Index 7 | Own Index: 7 | Father Index: 6 | Own Priority 0 | Children: 2 | Depth: 6
						Found children || Index 10 | Own Index: 10 | Father Index: 6 | Own Priority 1 | Children: 0 | Depth: 6
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 7 | Index: 6
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 9
						Found children || Index 11 | Own Index: 11 | Father Index: 9 | Own Priority 0 | Children: 2 | Depth: 6
						Found children || Index 12 | Own Index: 12 | Father Index: 9 | Own Priority 1 | Children: 0 | Depth: 6
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 7 | Index: 9
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef9fc | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa2c | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 7
						Found children || Index 8 | Own Index: 8 | Father Index: 7 | Own Priority 0 | Children: 0 | Depth: 7
						Found children || Index 9 | Own Index: 9 | Father Index: 7 | Own Priority 1 | Children: 0 | Depth: 7
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 8 | Index: 7
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 11
						Found children || Index 13 | Own Index: 13 | Father Index: 11 | Own Priority 0 | Children: 0 | Depth: 7
						Found children || Index 14 | Own Index: 14 | Father Index: 11 | Own Priority 1 | Children: 0 | Depth: 7
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 8 | Index: 11
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef9fc | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa2c | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 8
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 9 | Index: 8
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 13
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 9 | Index: 13
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef9fc | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa2c | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 9
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 10 | Index: 9
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 14
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 10 | Index: 14
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef9fc | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa2c | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 10
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 11 | Index: 10
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 12
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 11 | Index: 12
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef9fc | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa2c | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 11
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 12 | Index: 11
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 10
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 12 | Index: 10
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef9fc | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa2c | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 12
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 13 | Index: 12
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 8
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 13 | Index: 8
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef9fc | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa2c | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 13
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 14 | Index: 13
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 6
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 14 | Index: 6
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef9fc | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa2c | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 14
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Index: 14
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 4
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Index: 4
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef9fc | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa2c | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
			<<-- "bool User::Tree<Payload>::operator==(User::Tree<Payload>&) [with Payload = User::Equation::Token]" | Same
			-->> "static bool User::Equation::convert_token_tree_to_array(User::Tree<User::Equation::Token>&, std::vector<User::Equation::Token>&)" |
				-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" | Object: 007efd18, Index: 0
				<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa30 | Begin: 1 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 0 | Stack size: 1
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa60 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				Token:  = | Type: 2 | Priority: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 0
						Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 0 | Depth: 1
						Found children || Index 2 | Own Index: 2 | Father Index: 0 | Own Priority 1 | Children: 2 | Depth: 1
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 1 | Index: 0
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa60 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				Token:  4 | Type: 0 | Priority: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 1
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 2 | Index: 1
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa60 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				Token:  + | Type: 2 | Priority: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 2
						Found children || Index 3 | Own Index: 3 | Father Index: 2 | Own Priority 0 | Children: 2 | Depth: 2
						Found children || Index 14 | Own Index: 14 | Father Index: 2 | Own Priority 1 | Children: 0 | Depth: 2
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 3 | Index: 2
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa60 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				Token:  - | Type: 2 | Priority: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 3
						Found children || Index 4 | Own Index: 4 | Father Index: 3 | Own Priority 0 | Children: 2 | Depth: 3
						Found children || Index 13 | Own Index: 13 | Father Index: 3 | Own Priority 1 | Children: 0 | Depth: 3
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 4 | Index: 3
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa60 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				Token:  + | Type: 2 | Priority: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 4
						Found children || Index 5 | Own Index: 5 | Father Index: 4 | Own Priority 0 | Children: 2 | Depth: 4
						Found children || Index 12 | Own Index: 12 | Father Index: 4 | Own Priority 1 | Children: 0 | Depth: 4
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Index: 4
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa60 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				Token:  - | Type: 2 | Priority: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 5
						Found children || Index 6 | Own Index: 6 | Father Index: 5 | Own Priority 0 | Children: 2 | Depth: 5
						Found children || Index 11 | Own Index: 11 | Father Index: 5 | Own Priority 1 | Children: 0 | Depth: 5
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 6 | Index: 5
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa60 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				Token:  + | Type: 2 | Priority: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 6
						Found children || Index 7 | Own Index: 7 | Father Index: 6 | Own Priority 0 | Children: 2 | Depth: 6
						Found children || Index 10 | Own Index: 10 | Father Index: 6 | Own Priority 1 | Children: 0 | Depth: 6
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 7 | Index: 6
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa60 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				Token:  - | Type: 2 | Priority: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 7
						Found children || Index 8 | Own Index: 8 | Father Index: 7 | Own Priority 0 | Children: 0 | Depth: 7
						Found children || Index 9 | Own Index: 9 | Father Index: 7 | Own Priority 1 | Children: 0 | Depth: 7
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 8 | Index: 7
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa60 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				Token:  1 | Type: 0 | Priority: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 8
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 9 | Index: 8
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa60 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				Token:  2 | Type: 0 | Priority: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 9
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 10 | Index: 9
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa60 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				Token:  3 | Type: 0 | Priority: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 10
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 11 | Index: 10
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa60 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				Token:  4 | Type: 0 | Priority: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 11
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 12 | Index: 11
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa60 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				Token:  5 | Type: 0 | Priority: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 12
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 13 | Index: 12
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa60 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				Token:  6 | Type: 0 | Priority: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 13
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 14 | Index: 13
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa60 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				Token:  7 | Type: 0 | Priority: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 14
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Index: 14
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa60 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
			<<-- "static bool User::Equation::convert_token_tree_to_array(User::Tree<User::Equation::Token>&, std::vector<User::Equation::Token>&)" |
			PASS pattern: 18
			-->> "User::Tree<Payload>::~Tree() [with Payload = User::Equation::Token]" | This: 007efc40
			<<-- "User::Tree<Payload>::~Tree() [with Payload = User::Equation::Token]" |
			-->> "User::Tree<Payload>::~Tree() [with Payload = User::Equation::Token]" | This: 007efbf4
			<<-- "User::Tree<Payload>::~Tree() [with Payload = User::Equation::Token]" |
			PATTERN19 >4=(+1-(2+(3-(4+(5-(6+(7)))))))<
			-->> "bool User::Equation::parse(std::__cxx11::string)" | Parse: 4=(+1-(2+(3-(4+(5-(6+(7))))))) | Size: 30
				-->> "static bool User::Equation::equation_to_token_array(std::__cxx11::string, std::vector<std::__cxx11::basic_string<char> >&, std::vector<User::Equation::Token>&)" | Parse: 4=(+1-(2+(3-(4+(5-(6+(7))))))) | Size: 30
					SEEK_NEXT_TOKEN | Decode: >>4<<
					TOKEN_NUMBER | Decode: >>=<<
					Token fully decoded:  4 | type: 0 | size: 1
					Tokens decoded: 1
					SEEK_NEXT_TOKEN | Decode: >>=<<
					-->> "static bool User::Equation::is_symbol(char)" | Digit: >>=<<
					<<-- "static bool User::Equation::is_symbol(char)" | N
					-->> "static bool User::Equation::is_operator(char)" | Digit: >>=<<
					<<-- "static bool User::Equation::is_operator(char)" | Y
					Operator detected: >>=<< | Token: =
					Token fully decoded:  = | type: 2 | size: 1
					Tokens decoded: 2
					SEEK_NEXT_TOKEN | Decode: >>(<<
					-->> "static bool User::Equation::is_symbol(char)" | Digit: >>(<<
					<<-- "static bool User::Equation::is_symbol(char)" | N
					-->> "static bool User::Equation::is_operator(char)" | Digit: >>(<<
					<<-- "static bool User::Equation::is_operator(char)" | N
					Open detected: >>(<< | Token: (
					Token fully decoded:  ( | type: 3 | size: 1
					Tokens decoded: 3
					SEEK_NEXT_TOKEN | Decode: >>+<<
					-->> "static bool User::Equation::is_symbol(char)" | Digit: >>+<<
					<<-- "static bool User::Equation::is_symbol(char)" | N
					-->> "static bool User::Equation::is_operator(char)" | Digit: >>+<<
					<<-- "static bool User::Equation::is_operator(char)" | Y
					Unary + detected
					SEEK_NEXT_TOKEN | Decode: >>1<<
					TOKEN_NUMBER | Decode: >>-<<
					Unary Operator: +
					Token fully decoded:  1 | type: 0 | size: 1
					Tokens decoded: 4
					SEEK_NEXT_TOKEN | Decode: >>-<<
					-->> "static bool User::Equation::is_symbol(char)" | Digit: >>-<<
					<<-- "static bool User::Equation::is_symbol(char)" | N
					-->> "static bool User::Equation::is_operator(char)" | Digit: >>-<<
					<<-- "static bool User::Equation::is_operator(char)" | Y
					Operator detected: >>-<< | Token: -
					Token fully decoded:  - | type: 2 | size: 1
					Tokens decoded: 5
					SEEK_NEXT_TOKEN | Decode: >>(<<
					-->> "static bool User::Equation::is_symbol(char)" | Digit: >>(<<
					<<-- "static bool User::Equation::is_symbol(char)" | N
					-->> "static bool User::Equation::is_operator(char)" | Digit: >>(<<
					<<-- "static bool User::Equation::is_operator(char)" | N
					Open detected: >>(<< | Token: (
					Token fully decoded:  ( | type: 3 | size: 1
					Tokens decoded: 6
					SEEK_NEXT_TOKEN | Decode: >>2<<
					TOKEN_NUMBER | Decode: >>+<<
					Token fully decoded:  2 | type: 0 | size: 1
					Tokens decoded: 7
					SEEK_NEXT_TOKEN | Decode: >>+<<
					-->> "static bool User::Equation::is_symbol(char)" | Digit: >>+<<
					<<-- "static bool User::Equation::is_symbol(char)" | N
					-->> "static bool User::Equation::is_operator(char)" | Digit: >>+<<
					<<-- "static bool User::Equation::is_operator(char)" | Y
					Operator detected: >>+<< | Token: +
					Token fully decoded:  + | type: 2 | size: 1
					Tokens decoded: 8
					SEEK_NEXT_TOKEN | Decode: >>(<<
					-->> "static bool User::Equation::is_symbol(char)" | Digit: >>(<<
					<<-- "static bool User::Equation::is_symbol(char)" | N
					-->> "static bool User::Equation::is_operator(char)" | Digit: >>(<<
					<<-- "static bool User::Equation::is_operator(char)" | N
					Open detected: >>(<< | Token: (
					Token fully decoded:  ( | type: 3 | size: 1
					Tokens decoded: 9
					SEEK_NEXT_TOKEN | Decode: >>3<<
					TOKEN_NUMBER | Decode: >>-<<
					Token fully decoded:  3 | type: 0 | size: 1
					Tokens decoded: 10
					SEEK_NEXT_TOKEN | Decode: >>-<<
					-->> "static bool User::Equation::is_symbol(char)" | Digit: >>-<<
					<<-- "static bool User::Equation::is_symbol(char)" | N
					-->> "static bool User::Equation::is_operator(char)" | Digit: >>-<<
					<<-- "static bool User::Equation::is_operator(char)" | Y
					Operator detected: >>-<< | Token: -
					Token fully decoded:  - | type: 2 | size: 1
					Tokens decoded: 11
					SEEK_NEXT_TOKEN | Decode: >>(<<
					-->> "static bool User::Equation::is_symbol(char)" | Digit: >>(<<
					<<-- "static bool User::Equation::is_symbol(char)" | N
					-->> "static bool User::Equation::is_operator(char)" | Digit: >>(<<
					<<-- "static bool User::Equation::is_operator(char)" | N
					Open detected: >>(<< | Token: (
					Token fully decoded:  ( | type: 3 | size: 1
					Tokens decoded: 12
					SEEK_NEXT_TOKEN | Decode: >>4<<
					TOKEN_NUMBER | Decode: >>+<<
					Token fully decoded:  4 | type: 0 | size: 1
					Tokens decoded: 13
					SEEK_NEXT_TOKEN | Decode: >>+<<
					-->> "static bool User::Equation::is_symbol(char)" | Digit: >>+<<
					<<-- "static bool User::Equation::is_symbol(char)" | N
					-->> "static bool User::Equation::is_operator(char)" | Digit: >>+<<
					<<-- "static bool User::Equation::is_operator(char)" | Y
					Operator detected: >>+<< | Token: +
					Token fully decoded:  + | type: 2 | size: 1
					Tokens decoded: 14
					SEEK_NEXT_TOKEN | Decode: >>(<<
					-->> "static bool User::Equation::is_symbol(char)" | Digit: >>(<<
					<<-- "static bool User::Equation::is_symbol(char)" | N
					-->> "static bool User::Equation::is_operator(char)" | Digit: >>(<<
					<<-- "static bool User::Equation::is_operator(char)" | N
					Open detected: >>(<< | Token: (
					Token fully decoded:  ( | type: 3 | size: 1
					Tokens decoded: 15
					SEEK_NEXT_TOKEN | Decode: >>5<<
					TOKEN_NUMBER | Decode: >>-<<
					Token fully decoded:  5 | type: 0 | size: 1
					Tokens decoded: 16
					SEEK_NEXT_TOKEN | Decode: >>-<<
					-->> "static bool User::Equation::is_symbol(char)" | Digit: >>-<<
					<<-- "static bool User::Equation::is_symbol(char)" | N
					-->> "static bool User::Equation::is_operator(char)" | Digit: >>-<<
					<<-- "static bool User::Equation::is_operator(char)" | Y
					Operator detected: >>-<< | Token: -
					Token fully decoded:  - | type: 2 | size: 1
					Tokens decoded: 17
					SEEK_NEXT_TOKEN | Decode: >>(<<
					-->> "static bool User::Equation::is_symbol(char)" | Digit: >>(<<
					<<-- "static bool User::Equation::is_symbol(char)" | N
					-->> "static bool User::Equation::is_operator(char)" | Digit: >>(<<
					<<-- "static bool User::Equation::is_operator(char)" | N
					Open detected: >>(<< | Token: (
					Token fully decoded:  ( | type: 3 | size: 1
					Tokens decoded: 18
					SEEK_NEXT_TOKEN | Decode: >>6<<
					TOKEN_NUMBER | Decode: >>+<<
					Token fully decoded:  6 | type: 0 | size: 1
					Tokens decoded: 19
					SEEK_NEXT_TOKEN | Decode: >>+<<
					-->> "static bool User::Equation::is_symbol(char)" | Digit: >>+<<
					<<-- "static bool User::Equation::is_symbol(char)" | N
					-->> "static bool User::Equation::is_operator(char)" | Digit: >>+<<
					<<-- "static bool User::Equation::is_operator(char)" | Y
					Operator detected: >>+<< | Token: +
					Token fully decoded:  + | type: 2 | size: 1
					Tokens decoded: 20
					SEEK_NEXT_TOKEN | Decode: >>(<<
					-->> "static bool User::Equation::is_symbol(char)" | Digit: >>(<<
					<<-- "static bool User::Equation::is_symbol(char)" | N
					-->> "static bool User::Equation::is_operator(char)" | Digit: >>(<<
					<<-- "static bool User::Equation::is_operator(char)" | N
					Open detected: >>(<< | Token: (
					Token fully decoded:  ( | type: 3 | size: 1
					Tokens decoded: 21
					SEEK_NEXT_TOKEN | Decode: >>7<<
					TOKEN_NUMBER | Decode: >>)<<
					Token fully decoded:  7 | type: 0 | size: 1
					Tokens decoded: 22
					SEEK_NEXT_TOKEN | Decode: >>)<<
					-->> "static bool User::Equation::is_symbol(char)" | Digit: >>)<<
					<<-- "static bool User::Equation::is_symbol(char)" | N
					-->> "static bool User::Equation::is_operator(char)" | Digit: >>)<<
					<<-- "static bool User::Equation::is_operator(char)" | N
					Close detected: >>)<< | Token: )
					Token fully decoded:  ) | type: 4 | size: 1
					Tokens decoded: 23
					SEEK_NEXT_TOKEN | Decode: >>)<<
					-->> "static bool User::Equation::is_symbol(char)" | Digit: >>)<<
					<<-- "static bool User::Equation::is_symbol(char)" | N
					-->> "static bool User::Equation::is_operator(char)" | Digit: >>)<<
					<<-- "static bool User::Equation::is_operator(char)" | N
					Close detected: >>)<< | Token: )
					Token fully decoded:  ) | type: 4 | size: 1
					Tokens decoded: 24
					SEEK_NEXT_TOKEN | Decode: >>)<<
					-->> "static bool User::Equation::is_symbol(char)" | Digit: >>)<<
					<<-- "static bool User::Equation::is_symbol(char)" | N
					-->> "static bool User::Equation::is_operator(char)" | Digit: >>)<<
					<<-- "static bool User::Equation::is_operator(char)" | N
					Close detected: >>)<< | Token: )
					Token fully decoded:  ) | type: 4 | size: 1
					Tokens decoded: 25
					SEEK_NEXT_TOKEN | Decode: >>)<<
					-->> "static bool User::Equation::is_symbol(char)" | Digit: >>)<<
					<<-- "static bool User::Equation::is_symbol(char)" | N
					-->> "static bool User::Equation::is_operator(char)" | Digit: >>)<<
					<<-- "static bool User::Equation::is_operator(char)" | N
					Close detected: >>)<< | Token: )
					Token fully decoded:  ) | type: 4 | size: 1
					Tokens decoded: 26
					SEEK_NEXT_TOKEN | Decode: >>)<<
					-->> "static bool User::Equation::is_symbol(char)" | Digit: >>)<<
					<<-- "static bool User::Equation::is_symbol(char)" | N
					-->> "static bool User::Equation::is_operator(char)" | Digit: >>)<<
					<<-- "static bool User::Equation::is_operator(char)" | N
					Close detected: >>)<< | Token: )
					Token fully decoded:  ) | type: 4 | size: 1
					Tokens decoded: 27
					SEEK_NEXT_TOKEN | Decode: >>)<<
					-->> "static bool User::Equation::is_symbol(char)" | Digit: >>)<<
					<<-- "static bool User::Equation::is_symbol(char)" | N
					-->> "static bool User::Equation::is_operator(char)" | Digit: >>)<<
					<<-- "static bool User::Equation::is_operator(char)" | N
					Close detected: >>)<< | Token: )
					Token fully decoded:  ) | type: 4 | size: 1
					Tokens decoded: 28
					SEEK_NEXT_TOKEN | Decode: >>)<<
					-->> "static bool User::Equation::is_symbol(char)" | Digit: >>)<<
					<<-- "static bool User::Equation::is_symbol(char)" | N
					-->> "static bool User::Equation::is_operator(char)" | Digit: >>)<<
					<<-- "static bool User::Equation::is_operator(char)" | N
					Close detected: >>)<< | Token: )
					Token fully decoded:  ) | type: 4 | size: 1
					Tokens decoded: 29
					-->> "static bool User::Equation::is_symbol(char)" | Digit: >> <<
					<<-- "static bool User::Equation::is_symbol(char)" | N
					-->> "static bool User::Equation::is_operator(char)" | Digit: >> <<
					<<-- "static bool User::Equation::is_operator(char)" | N
					ERR1244: Invalid Digit >> <<
					Equations decoded into 29 tokens
					Token: >>4<< | Type: 0 | Size: 1
					Token: >>=<< | Type: 2 | Size: 1
					Token: >>(<< | Type: 3 | Size: 1
					Token: >>1<< | Type: 0 | Size: 1
					Token: >>-<< | Type: 2 | Size: 1
					Token: >>(<< | Type: 3 | Size: 1
					Token: >>2<< | Type: 0 | Size: 1
					Token: >>+<< | Type: 2 | Size: 1
					Token: >>(<< | Type: 3 | Size: 1
					Token: >>3<< | Type: 0 | Size: 1
					Token: >>-<< | Type: 2 | Size: 1
					Token: >>(<< | Type: 3 | Size: 1
					Token: >>4<< | Type: 0 | Size: 1
					Token: >>+<< | Type: 2 | Size: 1
					Token: >>(<< | Type: 3 | Size: 1
					Token: >>5<< | Type: 0 | Size: 1
					Token: >>-<< | Type: 2 | Size: 1
					Token: >>(<< | Type: 3 | Size: 1
					Token: >>6<< | Type: 0 | Size: 1
					Token: >>+<< | Type: 2 | Size: 1
					Token: >>(<< | Type: 3 | Size: 1
					Token: >>7<< | Type: 0 | Size: 1
					Token: >>)<< | Type: 4 | Size: 1
					Token: >>)<< | Type: 4 | Size: 1
					Token: >>)<< | Type: 4 | Size: 1
					Token: >>)<< | Type: 4 | Size: 1
					Token: >>)<< | Type: 4 | Size: 1
					Token: >>)<< | Type: 4 | Size: 1
					Token: >>)<< | Type: 4 | Size: 1
				<<-- "static bool User::Equation::equation_to_token_array(std::__cxx11::string, std::vector<std::__cxx11::basic_string<char> >&, std::vector<User::Equation::Token>&)" | Decoded 29 tokens
				Tree wasn't empty: 15 | FLUSH
				-->> "bool User::Tree<Payload>::flush() [with Payload = User::Equation::Token]" | Nodes inside the tree: 15
					-->> "bool User::Tree<Payload>::init_root() [with Payload = User::Equation::Token]" |
					<<-- "bool User::Tree<Payload>::init_root() [with Payload = User::Equation::Token]" |
				<<-- "bool User::Tree<Payload>::flush() [with Payload = User::Equation::Token]" | Nodes inside the tree: 1
				-->> "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | Token Array Size: 29 | Father 0
					-->> "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 29
						Token   0 | >4< | Open Close Priority: 0 | Symbol Priority 5 
						Token   1 | >=< | Open Close Priority: 0 | Symbol Priority 0 
						Token   2 | Open | Priority: 1
						Token   3 | >1< | Open Close Priority: 1 | Symbol Priority 5 
						Token   4 | >-< | Open Close Priority: 1 | Symbol Priority 3 
						Token   5 | Open | Priority: 2
						Token   6 | >2< | Open Close Priority: 2 | Symbol Priority 5 
						Token   7 | >+< | Open Close Priority: 2 | Symbol Priority 3 
						Token   8 | Open | Priority: 3
						Token   9 | >3< | Open Close Priority: 3 | Symbol Priority 5 
						Token  10 | >-< | Open Close Priority: 3 | Symbol Priority 3 
						Token  11 | Open | Priority: 4
						Token  12 | >4< | Open Close Priority: 4 | Symbol Priority 5 
						Token  13 | >+< | Open Close Priority: 4 | Symbol Priority 3 
						Token  14 | Open | Priority: 5
						Token  15 | >5< | Open Close Priority: 5 | Symbol Priority 5 
						Token  16 | >-< | Open Close Priority: 5 | Symbol Priority 3 
						Token  17 | Open | Priority: 6
						Token  18 | >6< | Open Close Priority: 6 | Symbol Priority 5 
						Token  19 | >+< | Open Close Priority: 6 | Symbol Priority 3 
						Token  20 | Open | Priority: 7
						Token  21 | >7< | Open Close Priority: 7 | Symbol Priority 5 
						Token  22 | Close| Priority: 7
						Token  23 | Close| Priority: 6
						Token  24 | Close| Priority: 5
						Token  25 | Close| Priority: 4
						Token  26 | Close| Priority: 3
						Token  27 | Close| Priority: 2
						Token  28 | Close| Priority: 1
						Candidate   0 | >4< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Default
						Candidate   1 | >=< | Open Close Priority 0 | Symbol Priority 0 | Min Priority 0
						Token   1 | >=< | Highest priority token
					<<-- "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 29 | Highest Priority Token: <=> | 0 0
					Core Token: >=< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 0
					LHS: >4<
					RHS: >(<
					RHS: >1<
					RHS: >-<
					RHS: >(<
					RHS: >2<
					RHS: >+<
					RHS: >(<
					RHS: >3<
					RHS: >-<
					RHS: >(<
					RHS: >4<
					RHS: >+<
					RHS: >(<
					RHS: >5<
					RHS: >-<
					RHS: >(<
					RHS: >6<
					RHS: >+<
					RHS: >(<
					RHS: >7<
					RHS: >)<
					RHS: >)<
					RHS: >)<
					RHS: >)<
					RHS: >)<
					RHS: >)<
					RHS: >)<
					LHS Tokens: 1 | RHS Tokens: 27
					ROOT: >=<
					-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" | Object: 007efd18, Index: 0
					<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" |
					LHS: >=<
					-->> "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | Token Array Size: 1 | Father 0
						-->> "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1
							Token   0 | >4< | Open Close Priority: 0 | Symbol Priority 5 
							Candidate   0 | >4< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Default
							Token   0 | >4< | Highest priority token
						<<-- "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1 | Highest Priority Token: <4> | 0 5
						Core Token: >4< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 5
						LHS Tokens: 0 | RHS Tokens: 0
						-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" | Object: 007efd18, Index: 0
						<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" |
						-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
						<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 0 | Own Index: 1 | Nodes under Father: 2
					<<-- "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | PASS
					LHS of size 1 under father 0
					-->> "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | Token Array Size: 27 | Father 0
						-->> "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 27
							Token   0 | Open | Priority: 1
							Token   1 | >1< | Open Close Priority: 1 | Symbol Priority 5 
							Token   2 | >-< | Open Close Priority: 1 | Symbol Priority 3 
							Token   3 | Open | Priority: 2
							Token   4 | >2< | Open Close Priority: 2 | Symbol Priority 5 
							Token   5 | >+< | Open Close Priority: 2 | Symbol Priority 3 
							Token   6 | Open | Priority: 3
							Token   7 | >3< | Open Close Priority: 3 | Symbol Priority 5 
							Token   8 | >-< | Open Close Priority: 3 | Symbol Priority 3 
							Token   9 | Open | Priority: 4
							Token  10 | >4< | Open Close Priority: 4 | Symbol Priority 5 
							Token  11 | >+< | Open Close Priority: 4 | Symbol Priority 3 
							Token  12 | Open | Priority: 5
							Token  13 | >5< | Open Close Priority: 5 | Symbol Priority 5 
							Token  14 | >-< | Open Close Priority: 5 | Symbol Priority 3 
							Token  15 | Open | Priority: 6
							Token  16 | >6< | Open Close Priority: 6 | Symbol Priority 5 
							Token  17 | >+< | Open Close Priority: 6 | Symbol Priority 3 
							Token  18 | Open | Priority: 7
							Token  19 | >7< | Open Close Priority: 7 | Symbol Priority 5 
							Token  20 | Close| Priority: 7
							Token  21 | Close| Priority: 6
							Token  22 | Close| Priority: 5
							Token  23 | Close| Priority: 4
							Token  24 | Close| Priority: 3
							Token  25 | Close| Priority: 2
							Token  26 | Close| Priority: 1
							Delete Open 0 | Priority: 1 | Min Priority: 1 
							Delete Close 25 | Priority: 1 | Min Priority: 1 
							Deleted redundant priority tokens | Tokens: 25 | Min Open Close Priority: 0
							Token   0 | >1< | Open Close Priority: 0 | Symbol Priority 5 
							Token   1 | >-< | Open Close Priority: 0 | Symbol Priority 3 
							Token   2 | >(< | Open Close Priority: 1 | Symbol Priority 10 
							Token   3 | >2< | Open Close Priority: 1 | Symbol Priority 5 
							Token   4 | >+< | Open Close Priority: 1 | Symbol Priority 3 
							Token   5 | >(< | Open Close Priority: 2 | Symbol Priority 10 
							Token   6 | >3< | Open Close Priority: 2 | Symbol Priority 5 
							Token   7 | >-< | Open Close Priority: 2 | Symbol Priority 3 
							Token   8 | >(< | Open Close Priority: 3 | Symbol Priority 10 
							Token   9 | >4< | Open Close Priority: 3 | Symbol Priority 5 
							Token  10 | >+< | Open Close Priority: 3 | Symbol Priority 3 
							Token  11 | >(< | Open Close Priority: 4 | Symbol Priority 10 
							Token  12 | >5< | Open Close Priority: 4 | Symbol Priority 5 
							Token  13 | >-< | Open Close Priority: 4 | Symbol Priority 3 
							Token  14 | >(< | Open Close Priority: 5 | Symbol Priority 10 
							Token  15 | >6< | Open Close Priority: 5 | Symbol Priority 5 
							Token  16 | >+< | Open Close Priority: 5 | Symbol Priority 3 
							Token  17 | >(< | Open Close Priority: 6 | Symbol Priority 10 
							Token  18 | >7< | Open Close Priority: 6 | Symbol Priority 5 
							Token  19 | >)< | Open Close Priority: 6 | Symbol Priority 10 
							Token  20 | >)< | Open Close Priority: 5 | Symbol Priority 10 
							Token  21 | >)< | Open Close Priority: 4 | Symbol Priority 10 
							Token  22 | >)< | Open Close Priority: 3 | Symbol Priority 10 
							Token  23 | >)< | Open Close Priority: 2 | Symbol Priority 10 
							Token  24 | >)< | Open Close Priority: 1 | Symbol Priority 10 
							Candidate   0 | >1< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Default
							Candidate   1 | >-< | Open Close Priority 0 | Symbol Priority 3 | Min Priority 0
							Token   1 | >-< | Highest priority token
						<<-- "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 25 | Highest Priority Token: <-> | 0 3
						Core Token: >-< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 3
						LHS: >1<
						RHS: >(<
						RHS: >2<
						RHS: >+<
						RHS: >(<
						RHS: >3<
						RHS: >-<
						RHS: >(<
						RHS: >4<
						RHS: >+<
						RHS: >(<
						RHS: >5<
						RHS: >-<
						RHS: >(<
						RHS: >6<
						RHS: >+<
						RHS: >(<
						RHS: >7<
						RHS: >)<
						RHS: >)<
						RHS: >)<
						RHS: >)<
						RHS: >)<
						RHS: >)<
						LHS Tokens: 1 | RHS Tokens: 23
						-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
						<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 0 | Own Index: 2 | Nodes under Father: 3
						-->> "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | Token Array Size: 1 | Father 2
							-->> "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1
								Token   0 | >1< | Open Close Priority: 0 | Symbol Priority 5 
								Candidate   0 | >1< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Default
								Token   0 | >1< | Highest priority token
							<<-- "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1 | Highest Priority Token: <1> | 0 5
							Core Token: >1< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 5
							LHS Tokens: 0 | RHS Tokens: 0
							-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
							<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 2 | Own Index: 3 | Nodes under Father: 2
						<<-- "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | PASS
						LHS of size 1 under father 2
						-->> "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | Token Array Size: 23 | Father 2
							-->> "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 23
								Token   0 | Open | Priority: 1
								Token   1 | >2< | Open Close Priority: 1 | Symbol Priority 5 
								Token   2 | >+< | Open Close Priority: 1 | Symbol Priority 3 
								Token   3 | Open | Priority: 2
								Token   4 | >3< | Open Close Priority: 2 | Symbol Priority 5 
								Token   5 | >-< | Open Close Priority: 2 | Symbol Priority 3 
								Token   6 | Open | Priority: 3
								Token   7 | >4< | Open Close Priority: 3 | Symbol Priority 5 
								Token   8 | >+< | Open Close Priority: 3 | Symbol Priority 3 
								Token   9 | Open | Priority: 4
								Token  10 | >5< | Open Close Priority: 4 | Symbol Priority 5 
								Token  11 | >-< | Open Close Priority: 4 | Symbol Priority 3 
								Token  12 | Open | Priority: 5
								Token  13 | >6< | Open Close Priority: 5 | Symbol Priority 5 
								Token  14 | >+< | Open Close Priority: 5 | Symbol Priority 3 
								Token  15 | Open | Priority: 6
								Token  16 | >7< | Open Close Priority: 6 | Symbol Priority 5 
								Token  17 | Close| Priority: 6
								Token  18 | Close| Priority: 5
								Token  19 | Close| Priority: 4
								Token  20 | Close| Priority: 3
								Token  21 | Close| Priority: 2
								Token  22 | Close| Priority: 1
								Delete Open 0 | Priority: 1 | Min Priority: 1 
								Delete Close 21 | Priority: 1 | Min Priority: 1 
								Deleted redundant priority tokens | Tokens: 21 | Min Open Close Priority: 0
								Token   0 | >2< | Open Close Priority: 0 | Symbol Priority 5 
								Token   1 | >+< | Open Close Priority: 0 | Symbol Priority 3 
								Token   2 | >(< | Open Close Priority: 1 | Symbol Priority 10 
								Token   3 | >3< | Open Close Priority: 1 | Symbol Priority 5 
								Token   4 | >-< | Open Close Priority: 1 | Symbol Priority 3 
								Token   5 | >(< | Open Close Priority: 2 | Symbol Priority 10 
								Token   6 | >4< | Open Close Priority: 2 | Symbol Priority 5 
								Token   7 | >+< | Open Close Priority: 2 | Symbol Priority 3 
								Token   8 | >(< | Open Close Priority: 3 | Symbol Priority 10 
								Token   9 | >5< | Open Close Priority: 3 | Symbol Priority 5 
								Token  10 | >-< | Open Close Priority: 3 | Symbol Priority 3 
								Token  11 | >(< | Open Close Priority: 4 | Symbol Priority 10 
								Token  12 | >6< | Open Close Priority: 4 | Symbol Priority 5 
								Token  13 | >+< | Open Close Priority: 4 | Symbol Priority 3 
								Token  14 | >(< | Open Close Priority: 5 | Symbol Priority 10 
								Token  15 | >7< | Open Close Priority: 5 | Symbol Priority 5 
								Token  16 | >)< | Open Close Priority: 5 | Symbol Priority 10 
								Token  17 | >)< | Open Close Priority: 4 | Symbol Priority 10 
								Token  18 | >)< | Open Close Priority: 3 | Symbol Priority 10 
								Token  19 | >)< | Open Close Priority: 2 | Symbol Priority 10 
								Token  20 | >)< | Open Close Priority: 1 | Symbol Priority 10 
								Candidate   0 | >2< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Default
								Candidate   1 | >+< | Open Close Priority 0 | Symbol Priority 3 | Min Priority 0
								Token   1 | >+< | Highest priority token
							<<-- "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 21 | Highest Priority Token: <+> | 0 3
							Core Token: >+< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 3
							LHS: >2<
							RHS: >(<
							RHS: >3<
							RHS: >-<
							RHS: >(<
							RHS: >4<
							RHS: >+<
							RHS: >(<
							RHS: >5<
							RHS: >-<
							RHS: >(<
							RHS: >6<
							RHS: >+<
							RHS: >(<
							RHS: >7<
							RHS: >)<
							RHS: >)<
							RHS: >)<
							RHS: >)<
							RHS: >)<
							LHS Tokens: 1 | RHS Tokens: 19
							-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
							<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 2 | Own Index: 4 | Nodes under Father: 3
							-->> "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | Token Array Size: 1 | Father 4
								-->> "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1
									Token   0 | >2< | Open Close Priority: 0 | Symbol Priority 5 
									Candidate   0 | >2< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Default
									Token   0 | >2< | Highest priority token
								<<-- "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1 | Highest Priority Token: <2> | 0 5
								Core Token: >2< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 5
								LHS Tokens: 0 | RHS Tokens: 0
								-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
								<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 4 | Own Index: 5 | Nodes under Father: 2
							<<-- "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | PASS
							LHS of size 1 under father 4
							-->> "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | Token Array Size: 19 | Father 4
								-->> "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 19
									Token   0 | Open | Priority: 1
									Token   1 | >3< | Open Close Priority: 1 | Symbol Priority 5 
									Token   2 | >-< | Open Close Priority: 1 | Symbol Priority 3 
									Token   3 | Open | Priority: 2
									Token   4 | >4< | Open Close Priority: 2 | Symbol Priority 5 
									Token   5 | >+< | Open Close Priority: 2 | Symbol Priority 3 
									Token   6 | Open | Priority: 3
									Token   7 | >5< | Open Close Priority: 3 | Symbol Priority 5 
									Token   8 | >-< | Open Close Priority: 3 | Symbol Priority 3 
									Token   9 | Open | Priority: 4
									Token  10 | >6< | Open Close Priority: 4 | Symbol Priority 5 
									Token  11 | >+< | Open Close Priority: 4 | Symbol Priority 3 
									Token  12 | Open | Priority: 5
									Token  13 | >7< | Open Close Priority: 5 | Symbol Priority 5 
									Token  14 | Close| Priority: 5
									Token  15 | Close| Priority: 4
									Token  16 | Close| Priority: 3
									Token  17 | Close| Priority: 2
									Token  18 | Close| Priority: 1
									Delete Open 0 | Priority: 1 | Min Priority: 1 
									Delete Close 17 | Priority: 1 | Min Priority: 1 
									Deleted redundant priority tokens | Tokens: 17 | Min Open Close Priority: 0
									Token   0 | >3< | Open Close Priority: 0 | Symbol Priority 5 
									Token   1 | >-< | Open Close Priority: 0 | Symbol Priority 3 
									Token   2 | >(< | Open Close Priority: 1 | Symbol Priority 10 
									Token   3 | >4< | Open Close Priority: 1 | Symbol Priority 5 
									Token   4 | >+< | Open Close Priority: 1 | Symbol Priority 3 
									Token   5 | >(< | Open Close Priority: 2 | Symbol Priority 10 
									Token   6 | >5< | Open Close Priority: 2 | Symbol Priority 5 
									Token   7 | >-< | Open Close Priority: 2 | Symbol Priority 3 
									Token   8 | >(< | Open Close Priority: 3 | Symbol Priority 10 
									Token   9 | >6< | Open Close Priority: 3 | Symbol Priority 5 
									Token  10 | >+< | Open Close Priority: 3 | Symbol Priority 3 
									Token  11 | >(< | Open Close Priority: 4 | Symbol Priority 10 
									Token  12 | >7< | Open Close Priority: 4 | Symbol Priority 5 
									Token  13 | >)< | Open Close Priority: 4 | Symbol Priority 10 
									Token  14 | >)< | Open Close Priority: 3 | Symbol Priority 10 
									Token  15 | >)< | Open Close Priority: 2 | Symbol Priority 10 
									Token  16 | >)< | Open Close Priority: 1 | Symbol Priority 10 
									Candidate   0 | >3< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Default
									Candidate   1 | >-< | Open Close Priority 0 | Symbol Priority 3 | Min Priority 0
									Token   1 | >-< | Highest priority token
								<<-- "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 17 | Highest Priority Token: <-> | 0 3
								Core Token: >-< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 3
								LHS: >3<
								RHS: >(<
								RHS: >4<
								RHS: >+<
								RHS: >(<
								RHS: >5<
								RHS: >-<
								RHS: >(<
								RHS: >6<
								RHS: >+<
								RHS: >(<
								RHS: >7<
								RHS: >)<
								RHS: >)<
								RHS: >)<
								RHS: >)<
								LHS Tokens: 1 | RHS Tokens: 15
								-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
								<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 4 | Own Index: 6 | Nodes under Father: 3
								-->> "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | Token Array Size: 1 | Father 6
									-->> "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1
										Token   0 | >3< | Open Close Priority: 0 | Symbol Priority 5 
										Candidate   0 | >3< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Default
										Token   0 | >3< | Highest priority token
									<<-- "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1 | Highest Priority Token: <3> | 0 5
									Core Token: >3< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 5
									LHS Tokens: 0 | RHS Tokens: 0
									-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
									<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 6 | Own Index: 7 | Nodes under Father: 2
								<<-- "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | PASS
								LHS of size 1 under father 6
								-->> "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | Token Array Size: 15 | Father 6
									-->> "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 15
										Token   0 | Open | Priority: 1
										Token   1 | >4< | Open Close Priority: 1 | Symbol Priority 5 
										Token   2 | >+< | Open Close Priority: 1 | Symbol Priority 3 
										Token   3 | Open | Priority: 2
										Token   4 | >5< | Open Close Priority: 2 | Symbol Priority 5 
										Token   5 | >-< | Open Close Priority: 2 | Symbol Priority 3 
										Token   6 | Open | Priority: 3
										Token   7 | >6< | Open Close Priority: 3 | Symbol Priority 5 
										Token   8 | >+< | Open Close Priority: 3 | Symbol Priority 3 
										Token   9 | Open | Priority: 4
										Token  10 | >7< | Open Close Priority: 4 | Symbol Priority 5 
										Token  11 | Close| Priority: 4
										Token  12 | Close| Priority: 3
										Token  13 | Close| Priority: 2
										Token  14 | Close| Priority: 1
										Delete Open 0 | Priority: 1 | Min Priority: 1 
										Delete Close 13 | Priority: 1 | Min Priority: 1 
										Deleted redundant priority tokens | Tokens: 13 | Min Open Close Priority: 0
										Token   0 | >4< | Open Close Priority: 0 | Symbol Priority 5 
										Token   1 | >+< | Open Close Priority: 0 | Symbol Priority 3 
										Token   2 | >(< | Open Close Priority: 1 | Symbol Priority 10 
										Token   3 | >5< | Open Close Priority: 1 | Symbol Priority 5 
										Token   4 | >-< | Open Close Priority: 1 | Symbol Priority 3 
										Token   5 | >(< | Open Close Priority: 2 | Symbol Priority 10 
										Token   6 | >6< | Open Close Priority: 2 | Symbol Priority 5 
										Token   7 | >+< | Open Close Priority: 2 | Symbol Priority 3 
										Token   8 | >(< | Open Close Priority: 3 | Symbol Priority 10 
										Token   9 | >7< | Open Close Priority: 3 | Symbol Priority 5 
										Token  10 | >)< | Open Close Priority: 3 | Symbol Priority 10 
										Token  11 | >)< | Open Close Priority: 2 | Symbol Priority 10 
										Token  12 | >)< | Open Close Priority: 1 | Symbol Priority 10 
										Candidate   0 | >4< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Default
										Candidate   1 | >+< | Open Close Priority 0 | Symbol Priority 3 | Min Priority 0
										Token   1 | >+< | Highest priority token
									<<-- "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 13 | Highest Priority Token: <+> | 0 3
									Core Token: >+< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 3
									LHS: >4<
									RHS: >(<
									RHS: >5<
									RHS: >-<
									RHS: >(<
									RHS: >6<
									RHS: >+<
									RHS: >(<
									RHS: >7<
									RHS: >)<
									RHS: >)<
									RHS: >)<
									LHS Tokens: 1 | RHS Tokens: 11
									-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
									<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 6 | Own Index: 8 | Nodes under Father: 3
									-->> "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | Token Array Size: 1 | Father 8
										-->> "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1
											Token   0 | >4< | Open Close Priority: 0 | Symbol Priority 5 
											Candidate   0 | >4< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Default
											Token   0 | >4< | Highest priority token
										<<-- "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1 | Highest Priority Token: <4> | 0 5
										Core Token: >4< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 5
										LHS Tokens: 0 | RHS Tokens: 0
										-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
										<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 8 | Own Index: 9 | Nodes under Father: 2
									<<-- "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | PASS
									LHS of size 1 under father 8
									-->> "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | Token Array Size: 11 | Father 8
										-->> "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 11
											Token   0 | Open | Priority: 1
											Token   1 | >5< | Open Close Priority: 1 | Symbol Priority 5 
											Token   2 | >-< | Open Close Priority: 1 | Symbol Priority 3 
											Token   3 | Open | Priority: 2
											Token   4 | >6< | Open Close Priority: 2 | Symbol Priority 5 
											Token   5 | >+< | Open Close Priority: 2 | Symbol Priority 3 
											Token   6 | Open | Priority: 3
											Token   7 | >7< | Open Close Priority: 3 | Symbol Priority 5 
											Token   8 | Close| Priority: 3
											Token   9 | Close| Priority: 2
											Token  10 | Close| Priority: 1
											Delete Open 0 | Priority: 1 | Min Priority: 1 
											Delete Close 9 | Priority: 1 | Min Priority: 1 
											Deleted redundant priority tokens | Tokens: 9 | Min Open Close Priority: 0
											Token   0 | >5< | Open Close Priority: 0 | Symbol Priority 5 
											Token   1 | >-< | Open Close Priority: 0 | Symbol Priority 3 
											Token   2 | >(< | Open Close Priority: 1 | Symbol Priority 10 
											Token   3 | >6< | Open Close Priority: 1 | Symbol Priority 5 
											Token   4 | >+< | Open Close Priority: 1 | Symbol Priority 3 
											Token   5 | >(< | Open Close Priority: 2 | Symbol Priority 10 
											Token   6 | >7< | Open Close Priority: 2 | Symbol Priority 5 
											Token   7 | >)< | Open Close Priority: 2 | Symbol Priority 10 
											Token   8 | >)< | Open Close Priority: 1 | Symbol Priority 10 
											Candidate   0 | >5< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Default
											Candidate   1 | >-< | Open Close Priority 0 | Symbol Priority 3 | Min Priority 0
											Token   1 | >-< | Highest priority token
										<<-- "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 9 | Highest Priority Token: <-> | 0 3
										Core Token: >-< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 3
										LHS: >5<
										RHS: >(<
										RHS: >6<
										RHS: >+<
										RHS: >(<
										RHS: >7<
										RHS: >)<
										RHS: >)<
										LHS Tokens: 1 | RHS Tokens: 7
										-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
										<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 8 | Own Index: 10 | Nodes under Father: 3
										-->> "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | Token Array Size: 1 | Father 10
											-->> "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1
												Token   0 | >5< | Open Close Priority: 0 | Symbol Priority 5 
												Candidate   0 | >5< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Default
												Token   0 | >5< | Highest priority token
											<<-- "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1 | Highest Priority Token: <5> | 0 5
											Core Token: >5< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 5
											LHS Tokens: 0 | RHS Tokens: 0
											-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
											<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 10 | Own Index: 11 | Nodes under Father: 2
										<<-- "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | PASS
										LHS of size 1 under father 10
										-->> "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | Token Array Size: 7 | Father 10
											-->> "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 7
												Token   0 | Open | Priority: 1
												Token   1 | >6< | Open Close Priority: 1 | Symbol Priority 5 
												Token   2 | >+< | Open Close Priority: 1 | Symbol Priority 3 
												Token   3 | Open | Priority: 2
												Token   4 | >7< | Open Close Priority: 2 | Symbol Priority 5 
												Token   5 | Close| Priority: 2
												Token   6 | Close| Priority: 1
												Delete Open 0 | Priority: 1 | Min Priority: 1 
												Delete Close 5 | Priority: 1 | Min Priority: 1 
												Deleted redundant priority tokens | Tokens: 5 | Min Open Close Priority: 0
												Token   0 | >6< | Open Close Priority: 0 | Symbol Priority 5 
												Token   1 | >+< | Open Close Priority: 0 | Symbol Priority 3 
												Token   2 | >(< | Open Close Priority: 1 | Symbol Priority 10 
												Token   3 | >7< | Open Close Priority: 1 | Symbol Priority 5 
												Token   4 | >)< | Open Close Priority: 1 | Symbol Priority 10 
												Candidate   0 | >6< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Default
												Candidate   1 | >+< | Open Close Priority 0 | Symbol Priority 3 | Min Priority 0
												Token   1 | >+< | Highest priority token
											<<-- "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 5 | Highest Priority Token: <+> | 0 3
											Core Token: >+< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 3
											LHS: >6<
											RHS: >(<
											RHS: >7<
											RHS: >)<
											LHS Tokens: 1 | RHS Tokens: 3
											-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
											<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 10 | Own Index: 12 | Nodes under Father: 3
											-->> "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | Token Array Size: 1 | Father 12
												-->> "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1
												Token   0 | >6< | Open Close Priority: 0 | Symbol Priority 5 
												Candidate   0 | >6< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Default
												Token   0 | >6< | Highest priority token
											<<-- "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1 | Highest Priority Token: <6> | 0 5
											Core Token: >6< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 5
											LHS Tokens: 0 | RHS Tokens: 0
											-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
											<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 12 | Own Index: 13 | Nodes under Father: 2
										<<-- "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | PASS
										LHS of size 1 under father 12
										-->> "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | Token Array Size: 3 | Father 12
											-->> "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 3
												Token   0 | Open | Priority: 1
												Token   1 | >7< | Open Close Priority: 1 | Symbol Priority 5 
												Token   2 | Close| Priority: 1
												Delete Open 0 | Priority: 1 | Min Priority: 1 
												Delete Close 1 | Priority: 1 | Min Priority: 1 
												Deleted redundant priority tokens | Tokens: 1 | Min Open Close Priority: 0
												Token   0 | >7< | Open Close Priority: 0 | Symbol Priority 5 
												Candidate   0 | >7< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Default
												Token   0 | >7< | Highest priority token
											<<-- "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1 | Highest Priority Token: <7> | 0 5
											Core Token: >7< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 5
											LHS Tokens: 0 | RHS Tokens: 0
											-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
											<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 12 | Own Index: 14 | Nodes under Father: 3
										<<-- "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | PASS
										RHS of size 1 under father 12
									<<-- "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | PASS
									RHS of size 5 under father 10
								<<-- "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | PASS
								RHS of size 9 under father 8
							<<-- "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | PASS
							RHS of size 13 under father 6
						<<-- "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | PASS
						RHS of size 17 under father 4
					<<-- "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | PASS
					RHS of size 21 under father 2
				<<-- "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | PASS
				RHS of size 25 under father 0
			<<-- "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | PASS
			-->> "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" | Index: 0
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef904 | Begin: 1 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 0 | Stack size: 1
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef934 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 0
						Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 0 | Depth: 1
						Found children || Index 2 | Own Index: 2 | Father Index: 0 | Own Priority 1 | Children: 2 | Depth: 1
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 1 | Index: 0
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef934 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 1
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 2 | Index: 1
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef934 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 2
						Found children || Index 3 | Own Index: 3 | Father Index: 2 | Own Priority 0 | Children: 0 | Depth: 2
						Found children || Index 4 | Own Index: 4 | Father Index: 2 | Own Priority 1 | Children: 2 | Depth: 2
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 3 | Index: 2
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef934 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 3
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 4 | Index: 3
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef934 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 4
						Found children || Index 5 | Own Index: 5 | Father Index: 4 | Own Priority 0 | Children: 0 | Depth: 3
						Found children || Index 6 | Own Index: 6 | Father Index: 4 | Own Priority 1 | Children: 2 | Depth: 3
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Index: 4
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef934 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 5
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 6 | Index: 5
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef934 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 6
						Found children || Index 7 | Own Index: 7 | Father Index: 6 | Own Priority 0 | Children: 0 | Depth: 4
						Found children || Index 8 | Own Index: 8 | Father Index: 6 | Own Priority 1 | Children: 2 | Depth: 4
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 7 | Index: 6
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef934 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 7
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 8 | Index: 7
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef934 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 8
						Found children || Index 9 | Own Index: 9 | Father Index: 8 | Own Priority 0 | Children: 0 | Depth: 5
						Found children || Index 10 | Own Index: 10 | Father Index: 8 | Own Priority 1 | Children: 2 | Depth: 5
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 9 | Index: 8
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef934 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 9
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 10 | Index: 9
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef934 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 10
						Found children || Index 11 | Own Index: 11 | Father Index: 10 | Own Priority 0 | Children: 0 | Depth: 6
						Found children || Index 12 | Own Index: 12 | Father Index: 10 | Own Priority 1 | Children: 2 | Depth: 6
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 11 | Index: 10
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef934 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 11
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 12 | Index: 11
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef934 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 12
						Found children || Index 13 | Own Index: 13 | Father Index: 12 | Own Priority 0 | Children: 0 | Depth: 7
						Found children || Index 14 | Own Index: 14 | Father Index: 12 | Own Priority 1 | Children: 0 | Depth: 7
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 13 | Index: 12
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef934 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 13
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 14 | Index: 13
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef934 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 14
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Index: 14
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef934 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
			<<-- "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" |
		<<-- "bool User::Equation::parse(std::__cxx11::string)" | Token array size: 29 | Token tree size: 15
		TOKEN0
		TOKEN1
		TOKEN2
		TOKEN3
		TOKEN4
		TOKEN5
		TOKEN6
		TOKEN7
		TOKEN8
		TOKEN9
		TOKEN10
		TOKEN11
		TOKEN12
		TOKEN13
		TOKEN14
		TOKEN15
		TOKEN16
		TOKEN17
		TOKEN18
		TOKEN19
		TOKEN20
		TOKEN21
		TOKEN22
		TOKEN23
		TOKEN24
		TOKEN25
		TOKEN26
		TOKEN27
		TOKEN28
		-->> "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" | Index: 0
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa54 | Begin: 1 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 0 | Stack size: 1
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 0
					Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 0 | Depth: 1
					Found children || Index 2 | Own Index: 2 | Father Index: 0 | Own Priority 1 | Children: 2 | Depth: 1
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 1 | Index: 0
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 1
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 2 | Index: 1
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 2
					Found children || Index 3 | Own Index: 3 | Father Index: 2 | Own Priority 0 | Children: 0 | Depth: 2
					Found children || Index 4 | Own Index: 4 | Father Index: 2 | Own Priority 1 | Children: 2 | Depth: 2
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 3 | Index: 2
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 3
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 4 | Index: 3
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 4
					Found children || Index 5 | Own Index: 5 | Father Index: 4 | Own Priority 0 | Children: 0 | Depth: 3
					Found children || Index 6 | Own Index: 6 | Father Index: 4 | Own Priority 1 | Children: 2 | Depth: 3
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Index: 4
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 5
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 6 | Index: 5
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 6
					Found children || Index 7 | Own Index: 7 | Father Index: 6 | Own Priority 0 | Children: 0 | Depth: 4
					Found children || Index 8 | Own Index: 8 | Father Index: 6 | Own Priority 1 | Children: 2 | Depth: 4
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 7 | Index: 6
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 7
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 8 | Index: 7
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 8
					Found children || Index 9 | Own Index: 9 | Father Index: 8 | Own Priority 0 | Children: 0 | Depth: 5
					Found children || Index 10 | Own Index: 10 | Father Index: 8 | Own Priority 1 | Children: 2 | Depth: 5
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 9 | Index: 8
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 9
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 10 | Index: 9
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 10
					Found children || Index 11 | Own Index: 11 | Father Index: 10 | Own Priority 0 | Children: 0 | Depth: 6
					Found children || Index 12 | Own Index: 12 | Father Index: 10 | Own Priority 1 | Children: 2 | Depth: 6
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 11 | Index: 10
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 11
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 12 | Index: 11
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 12
					Found children || Index 13 | Own Index: 13 | Father Index: 12 | Own Priority 0 | Children: 0 | Depth: 7
					Found children || Index 14 | Own Index: 14 | Father Index: 12 | Own Priority 1 | Children: 0 | Depth: 7
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 13 | Index: 12
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 13
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 14 | Index: 13
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 14
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Index: 14
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
		<<-- "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" |
		-->> "User::Tree<Payload>::Tree(std::vector<User::Tree<Payload>::St_minimal_node>) [with Payload = User::Equation::Token]" | This: 007efc40 | Nodes: 15
			-->> "bool User::Tree<Payload>::init_class_vars(Payload) [with Payload = User::Equation::Token]" |
			<<-- "bool User::Tree<Payload>::init_class_vars(Payload) [with Payload = User::Equation::Token]" |
			-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
			<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 0 | Own Index: 1 | Nodes under Father: 2
			-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
			<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 0 | Own Index: 2 | Nodes under Father: 3
			-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
			<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 2 | Own Index: 3 | Nodes under Father: 2
			-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
			<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 2 | Own Index: 4 | Nodes under Father: 3
			-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
			<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 4 | Own Index: 5 | Nodes under Father: 2
			-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
			<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 4 | Own Index: 6 | Nodes under Father: 3
			-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
			<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 6 | Own Index: 7 | Nodes under Father: 2
			-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
			<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 6 | Own Index: 8 | Nodes under Father: 3
			-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
			<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 8 | Own Index: 9 | Nodes under Father: 2
			-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
			<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 8 | Own Index: 10 | Nodes under Father: 3
			-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
			<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 10 | Own Index: 11 | Nodes under Father: 2
			-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
			<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 10 | Own Index: 12 | Nodes under Father: 3
			-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
			<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 12 | Own Index: 13 | Nodes under Father: 2
			-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
			<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 12 | Own Index: 14 | Nodes under Father: 3
			-->> "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" | Index: 0
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa54 | Begin: 1 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 0 | Stack size: 1
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 0
						Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 0 | Depth: 1
						Found children || Index 2 | Own Index: 2 | Father Index: 0 | Own Priority 1 | Children: 2 | Depth: 1
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 1 | Index: 0
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 1
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 2 | Index: 1
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 2
						Found children || Index 3 | Own Index: 3 | Father Index: 2 | Own Priority 0 | Children: 0 | Depth: 2
						Found children || Index 4 | Own Index: 4 | Father Index: 2 | Own Priority 1 | Children: 2 | Depth: 2
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 3 | Index: 2
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 3
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 4 | Index: 3
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 4
						Found children || Index 5 | Own Index: 5 | Father Index: 4 | Own Priority 0 | Children: 0 | Depth: 3
						Found children || Index 6 | Own Index: 6 | Father Index: 4 | Own Priority 1 | Children: 2 | Depth: 3
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Index: 4
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 5
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 6 | Index: 5
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 6
						Found children || Index 7 | Own Index: 7 | Father Index: 6 | Own Priority 0 | Children: 0 | Depth: 4
						Found children || Index 8 | Own Index: 8 | Father Index: 6 | Own Priority 1 | Children: 2 | Depth: 4
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 7 | Index: 6
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 7
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 8 | Index: 7
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 8
						Found children || Index 9 | Own Index: 9 | Father Index: 8 | Own Priority 0 | Children: 0 | Depth: 5
						Found children || Index 10 | Own Index: 10 | Father Index: 8 | Own Priority 1 | Children: 2 | Depth: 5
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 9 | Index: 8
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 9
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 10 | Index: 9
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 10
						Found children || Index 11 | Own Index: 11 | Father Index: 10 | Own Priority 0 | Children: 0 | Depth: 6
						Found children || Index 12 | Own Index: 12 | Father Index: 10 | Own Priority 1 | Children: 2 | Depth: 6
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 11 | Index: 10
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 11
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 12 | Index: 11
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 12
						Found children || Index 13 | Own Index: 13 | Father Index: 12 | Own Priority 0 | Children: 0 | Depth: 7
						Found children || Index 14 | Own Index: 14 | Father Index: 12 | Own Priority 1 | Children: 0 | Depth: 7
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 13 | Index: 12
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 13
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 14 | Index: 13
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 14
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Index: 14
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
			<<-- "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" |
			-->> "bool User::Tree<Payload>::operator==(User::Tree<Payload>&) [with Payload = User::Equation::Token]" |
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef9cc | Begin: 1 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 0 | Stack size: 1
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef99c | Begin: 1 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 0 | Stack size: 1
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef9fc | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa2c | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 0
						Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 0 | Depth: 1
						Found children || Index 2 | Own Index: 2 | Father Index: 0 | Own Priority 1 | Children: 2 | Depth: 1
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 1 | Index: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 0
						Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 0 | Depth: 1
						Found children || Index 2 | Own Index: 2 | Father Index: 0 | Own Priority 1 | Children: 2 | Depth: 1
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 1 | Index: 0
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef9fc | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa2c | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 1
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 2 | Index: 1
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 1
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 2 | Index: 1
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef9fc | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa2c | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 2
						Found children || Index 3 | Own Index: 3 | Father Index: 2 | Own Priority 0 | Children: 0 | Depth: 2
						Found children || Index 4 | Own Index: 4 | Father Index: 2 | Own Priority 1 | Children: 2 | Depth: 2
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 3 | Index: 2
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 2
						Found children || Index 3 | Own Index: 3 | Father Index: 2 | Own Priority 0 | Children: 0 | Depth: 2
						Found children || Index 4 | Own Index: 4 | Father Index: 2 | Own Priority 1 | Children: 2 | Depth: 2
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 3 | Index: 2
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef9fc | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa2c | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 3
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 4 | Index: 3
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 3
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 4 | Index: 3
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef9fc | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa2c | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 4
						Found children || Index 5 | Own Index: 5 | Father Index: 4 | Own Priority 0 | Children: 0 | Depth: 3
						Found children || Index 6 | Own Index: 6 | Father Index: 4 | Own Priority 1 | Children: 2 | Depth: 3
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Index: 4
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 4
						Found children || Index 5 | Own Index: 5 | Father Index: 4 | Own Priority 0 | Children: 0 | Depth: 3
						Found children || Index 6 | Own Index: 6 | Father Index: 4 | Own Priority 1 | Children: 2 | Depth: 3
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Index: 4
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef9fc | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa2c | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 5
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 6 | Index: 5
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 5
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 6 | Index: 5
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef9fc | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa2c | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 6
						Found children || Index 7 | Own Index: 7 | Father Index: 6 | Own Priority 0 | Children: 0 | Depth: 4
						Found children || Index 8 | Own Index: 8 | Father Index: 6 | Own Priority 1 | Children: 2 | Depth: 4
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 7 | Index: 6
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 6
						Found children || Index 7 | Own Index: 7 | Father Index: 6 | Own Priority 0 | Children: 0 | Depth: 4
						Found children || Index 8 | Own Index: 8 | Father Index: 6 | Own Priority 1 | Children: 2 | Depth: 4
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 7 | Index: 6
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef9fc | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa2c | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 7
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 8 | Index: 7
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 7
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 8 | Index: 7
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef9fc | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa2c | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 8
						Found children || Index 9 | Own Index: 9 | Father Index: 8 | Own Priority 0 | Children: 0 | Depth: 5
						Found children || Index 10 | Own Index: 10 | Father Index: 8 | Own Priority 1 | Children: 2 | Depth: 5
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 9 | Index: 8
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 8
						Found children || Index 9 | Own Index: 9 | Father Index: 8 | Own Priority 0 | Children: 0 | Depth: 5
						Found children || Index 10 | Own Index: 10 | Father Index: 8 | Own Priority 1 | Children: 2 | Depth: 5
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 9 | Index: 8
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef9fc | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa2c | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 9
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 10 | Index: 9
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 9
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 10 | Index: 9
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef9fc | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa2c | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 10
						Found children || Index 11 | Own Index: 11 | Father Index: 10 | Own Priority 0 | Children: 0 | Depth: 6
						Found children || Index 12 | Own Index: 12 | Father Index: 10 | Own Priority 1 | Children: 2 | Depth: 6
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 11 | Index: 10
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 10
						Found children || Index 11 | Own Index: 11 | Father Index: 10 | Own Priority 0 | Children: 0 | Depth: 6
						Found children || Index 12 | Own Index: 12 | Father Index: 10 | Own Priority 1 | Children: 2 | Depth: 6
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 11 | Index: 10
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef9fc | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa2c | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 11
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 12 | Index: 11
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 11
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 12 | Index: 11
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef9fc | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa2c | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 12
						Found children || Index 13 | Own Index: 13 | Father Index: 12 | Own Priority 0 | Children: 0 | Depth: 7
						Found children || Index 14 | Own Index: 14 | Father Index: 12 | Own Priority 1 | Children: 0 | Depth: 7
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 13 | Index: 12
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 12
						Found children || Index 13 | Own Index: 13 | Father Index: 12 | Own Priority 0 | Children: 0 | Depth: 7
						Found children || Index 14 | Own Index: 14 | Father Index: 12 | Own Priority 1 | Children: 0 | Depth: 7
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 13 | Index: 12
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef9fc | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa2c | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 13
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 14 | Index: 13
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 13
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 14 | Index: 13
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef9fc | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa2c | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 14
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Index: 14
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 14
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Index: 14
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef9fc | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa2c | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
			<<-- "bool User::Tree<Payload>::operator==(User::Tree<Payload>&) [with Payload = User::Equation::Token]" | Same
			-->> "static bool User::Equation::convert_token_tree_to_array(User::Tree<User::Equation::Token>&, std::vector<User::Equation::Token>&)" |
				-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" | Object: 007efd18, Index: 0
				<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa30 | Begin: 1 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 0 | Stack size: 1
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa60 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				Token:  = | Type: 2 | Priority: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 0
						Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 0 | Depth: 1
						Found children || Index 2 | Own Index: 2 | Father Index: 0 | Own Priority 1 | Children: 2 | Depth: 1
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 1 | Index: 0
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa60 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				Token:  4 | Type: 0 | Priority: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 1
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 2 | Index: 1
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa60 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				Token:  - | Type: 2 | Priority: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 2
						Found children || Index 3 | Own Index: 3 | Father Index: 2 | Own Priority 0 | Children: 0 | Depth: 2
						Found children || Index 4 | Own Index: 4 | Father Index: 2 | Own Priority 1 | Children: 2 | Depth: 2
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 3 | Index: 2
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa60 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				Token:  1 | Type: 0 | Priority: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 3
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 4 | Index: 3
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa60 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				Token:  + | Type: 2 | Priority: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 4
						Found children || Index 5 | Own Index: 5 | Father Index: 4 | Own Priority 0 | Children: 0 | Depth: 3
						Found children || Index 6 | Own Index: 6 | Father Index: 4 | Own Priority 1 | Children: 2 | Depth: 3
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Index: 4
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa60 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				Token:  2 | Type: 0 | Priority: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 5
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 6 | Index: 5
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa60 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				Token:  - | Type: 2 | Priority: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 6
						Found children || Index 7 | Own Index: 7 | Father Index: 6 | Own Priority 0 | Children: 0 | Depth: 4
						Found children || Index 8 | Own Index: 8 | Father Index: 6 | Own Priority 1 | Children: 2 | Depth: 4
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 7 | Index: 6
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa60 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				Token:  3 | Type: 0 | Priority: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 7
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 8 | Index: 7
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa60 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				Token:  + | Type: 2 | Priority: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 8
						Found children || Index 9 | Own Index: 9 | Father Index: 8 | Own Priority 0 | Children: 0 | Depth: 5
						Found children || Index 10 | Own Index: 10 | Father Index: 8 | Own Priority 1 | Children: 2 | Depth: 5
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 9 | Index: 8
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa60 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				Token:  4 | Type: 0 | Priority: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 9
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 10 | Index: 9
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa60 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				Token:  - | Type: 2 | Priority: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 10
						Found children || Index 11 | Own Index: 11 | Father Index: 10 | Own Priority 0 | Children: 0 | Depth: 6
						Found children || Index 12 | Own Index: 12 | Father Index: 10 | Own Priority 1 | Children: 2 | Depth: 6
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 11 | Index: 10
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa60 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				Token:  5 | Type: 0 | Priority: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 11
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 12 | Index: 11
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa60 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				Token:  + | Type: 2 | Priority: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 12
						Found children || Index 13 | Own Index: 13 | Father Index: 12 | Own Priority 0 | Children: 0 | Depth: 7
						Found children || Index 14 | Own Index: 14 | Father Index: 12 | Own Priority 1 | Children: 0 | Depth: 7
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 13 | Index: 12
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa60 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				Token:  6 | Type: 0 | Priority: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 13
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 14 | Index: 13
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa60 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
				Token:  7 | Type: 0 | Priority: 0
				-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
					-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 14
					<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
				<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Index: 14
				-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa60 | Begin: 0 | Index: 0
				<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Stack size: 0
			<<-- "static bool User::Equation::convert_token_tree_to_array(User::Tree<User::Equation::Token>&, std::vector<User::Equation::Token>&)" |
			PASS pattern: 19
			-->> "User::Tree<Payload>::~Tree() [with Payload = User::Equation::Token]" | This: 007efc40
			<<-- "User::Tree<Payload>::~Tree() [with Payload = User::Equation::Token]" |
			-->> "User::Tree<Payload>::~Tree() [with Payload = User::Equation::Token]" | This: 007efbf4
			<<-- "User::Tree<Payload>::~Tree() [with Payload = User::Equation::Token]" |
			PATTERN20 >Y=1+(3*X)+2+(5*sephiroth +100 +101)+4<
			-->> "bool User::Equation::parse(std::__cxx11::string)" | Parse: Y=1+(3*X)+2+(5*sephiroth +100 +101)+4 | Size: 37
				-->> "static bool User::Equation::equation_to_token_array(std::__cxx11::string, std::vector<std::__cxx11::basic_string<char> >&, std::vector<User::Equation::Token>&)" | Parse: Y=1+(3*X)+2+(5*sephiroth +100 +101)+4 | Size: 37
					SEEK_NEXT_TOKEN | Decode: >>Y<<
					-->> "static bool User::Equation::is_symbol(char)" | Digit: >>Y<<
					<<-- "static bool User::Equation::is_symbol(char)" | Y
					TOKEN_SYMBOL | Decode: >>=<<
					-->> "static bool User::Equation::is_symbol(char)" | Digit: >>=<<
					<<-- "static bool User::Equation::is_symbol(char)" | N
					Token fully decoded:  Y | type: 1 | size: 1
					Tokens decoded: 1
					SEEK_NEXT_TOKEN | Decode: >>=<<
					-->> "static bool User::Equation::is_symbol(char)" | Digit: >>=<<
					<<-- "static bool User::Equation::is_symbol(char)" | N
					-->> "static bool User::Equation::is_operator(char)" | Digit: >>=<<
					<<-- "static bool User::Equation::is_operator(char)" | Y
					Operator detected: >>=<< | Token: =
					Token fully decoded:  = | type: 2 | size: 1
					Tokens decoded: 2
					SEEK_NEXT_TOKEN | Decode: >>1<<
					TOKEN_NUMBER | Decode: >>+<<
					Token fully decoded:  1 | type: 0 | size: 1
					Tokens decoded: 3
					SEEK_NEXT_TOKEN | Decode: >>+<<
					-->> "static bool User::Equation::is_symbol(char)" | Digit: >>+<<
					<<-- "static bool User::Equation::is_symbol(char)" | N
					-->> "static bool User::Equation::is_operator(char)" | Digit: >>+<<
					<<-- "static bool User::Equation::is_operator(char)" | Y
					Operator detected: >>+<< | Token: +
					Token fully decoded:  + | type: 2 | size: 1
					Tokens decoded: 4
					SEEK_NEXT_TOKEN | Decode: >>(<<
					-->> "static bool User::Equation::is_symbol(char)" | Digit: >>(<<
					<<-- "static bool User::Equation::is_symbol(char)" | N
					-->> "static bool User::Equation::is_operator(char)" | Digit: >>(<<
					<<-- "static bool User::Equation::is_operator(char)" | N
					Open detected: >>(<< | Token: (
					Token fully decoded:  ( | type: 3 | size: 1
					Tokens decoded: 5
					SEEK_NEXT_TOKEN | Decode: >>3<<
					TOKEN_NUMBER | Decode: >>*<<
					Token fully decoded:  3 | type: 0 | size: 1
					Tokens decoded: 6
					SEEK_NEXT_TOKEN | Decode: >>*<<
					-->> "static bool User::Equation::is_symbol(char)" | Digit: >>*<<
					<<-- "static bool User::Equation::is_symbol(char)" | N
					-->> "static bool User::Equation::is_operator(char)" | Digit: >>*<<
					<<-- "static bool User::Equation::is_operator(char)" | Y
					Operator detected: >>*<< | Token: *
					Token fully decoded:  * | type: 2 | size: 1
					Tokens decoded: 7
					SEEK_NEXT_TOKEN | Decode: >>X<<
					-->> "static bool User::Equation::is_symbol(char)" | Digit: >>X<<
					<<-- "static bool User::Equation::is_symbol(char)" | Y
					TOKEN_SYMBOL | Decode: >>)<<
					-->> "static bool User::Equation::is_symbol(char)" | Digit: >>)<<
					<<-- "static bool User::Equation::is_symbol(char)" | N
					Token fully decoded:  X | type: 1 | size: 1
					Tokens decoded: 8
					SEEK_NEXT_TOKEN | Decode: >>)<<
					-->> "static bool User::Equation::is_symbol(char)" | Digit: >>)<<
					<<-- "static bool User::Equation::is_symbol(char)" | N
					-->> "static bool User::Equation::is_operator(char)" | Digit: >>)<<
					<<-- "static bool User::Equation::is_operator(char)" | N
					Close detected: >>)<< | Token: )
					Token fully decoded:  ) | type: 4 | size: 1
					Tokens decoded: 9
					SEEK_NEXT_TOKEN | Decode: >>+<<
					-->> "static bool User::Equation::is_symbol(char)" | Digit: >>+<<
					<<-- "static bool User::Equation::is_symbol(char)" | N
					-->> "static bool User::Equation::is_operator(char)" | Digit: >>+<<
					<<-- "static bool User::Equation::is_operator(char)" | Y
					Operator detected: >>+<< | Token: +
					Token fully decoded:  + | type: 2 | size: 1
					Tokens decoded: 10
					SEEK_NEXT_TOKEN | Decode: >>2<<
					TOKEN_NUMBER | Decode: >>+<<
					Token fully decoded:  2 | type: 0 | size: 1
					Tokens decoded: 11
					SEEK_NEXT_TOKEN | Decode: >>+<<
					-->> "static bool User::Equation::is_symbol(char)" | Digit: >>+<<
					<<-- "static bool User::Equation::is_symbol(char)" | N
					-->> "static bool User::Equation::is_operator(char)" | Digit: >>+<<
					<<-- "static bool User::Equation::is_operator(char)" | Y
					Operator detected: >>+<< | Token: +
					Token fully decoded:  + | type: 2 | size: 1
					Tokens decoded: 12
					SEEK_NEXT_TOKEN | Decode: >>(<<
					-->> "static bool User::Equation::is_symbol(char)" | Digit: >>(<<
					<<-- "static bool User::Equation::is_symbol(char)" | N
					-->> "static bool User::Equation::is_operator(char)" | Digit: >>(<<
					<<-- "static bool User::Equation::is_operator(char)" | N
					Open detected: >>(<< | Token: (
					Token fully decoded:  ( | type: 3 | size: 1
					Tokens decoded: 13
					SEEK_NEXT_TOKEN | Decode: >>5<<
					TOKEN_NUMBER | Decode: >>*<<
					Token fully decoded:  5 | type: 0 | size: 1
					Tokens decoded: 14
					SEEK_NEXT_TOKEN | Decode: >>*<<
					-->> "static bool User::Equation::is_symbol(char)" | Digit: >>*<<
					<<-- "static bool User::Equation::is_symbol(char)" | N
					-->> "static bool User::Equation::is_operator(char)" | Digit: >>*<<
					<<-- "static bool User::Equation::is_operator(char)" | Y
					Operator detected: >>*<< | Token: *
					Token fully decoded:  * | type: 2 | size: 1
					Tokens decoded: 15
					SEEK_NEXT_TOKEN | Decode: >>s<<
					-->> "static bool User::Equation::is_symbol(char)" | Digit: >>s<<
					<<-- "static bool User::Equation::is_symbol(char)" | Y
					TOKEN_SYMBOL | Decode: >>e<<
					-->> "static bool User::Equation::is_symbol(char)" | Digit: >>e<<
					<<-- "static bool User::Equation::is_symbol(char)" | Y
					TOKEN_SYMBOL | Decode: >>p<<
					-->> "static bool User::Equation::is_symbol(char)" | Digit: >>p<<
					<<-- "static bool User::Equation::is_symbol(char)" | Y
					TOKEN_SYMBOL | Decode: >>h<<
					-->> "static bool User::Equation::is_symbol(char)" | Digit: >>h<<
					<<-- "static bool User::Equation::is_symbol(char)" | Y
					TOKEN_SYMBOL | Decode: >>i<<
					-->> "static bool User::Equation::is_symbol(char)" | Digit: >>i<<
					<<-- "static bool User::Equation::is_symbol(char)" | Y
					TOKEN_SYMBOL | Decode: >>r<<
					-->> "static bool User::Equation::is_symbol(char)" | Digit: >>r<<
					<<-- "static bool User::Equation::is_symbol(char)" | Y
					TOKEN_SYMBOL | Decode: >>o<<
					-->> "static bool User::Equation::is_symbol(char)" | Digit: >>o<<
					<<-- "static bool User::Equation::is_symbol(char)" | Y
					TOKEN_SYMBOL | Decode: >>t<<
					-->> "static bool User::Equation::is_symbol(char)" | Digit: >>t<<
					<<-- "static bool User::Equation::is_symbol(char)" | Y
					TOKEN_SYMBOL | Decode: >>h<<
					-->> "static bool User::Equation::is_symbol(char)" | Digit: >>h<<
					<<-- "static bool User::Equation::is_symbol(char)" | Y
					TOKEN_SYMBOL | Decode: >> <<
					-->> "static bool User::Equation::is_symbol(char)" | Digit: >> <<
					<<-- "static bool User::Equation::is_symbol(char)" | N
					Token fully decoded:  sephiroth | type: 1 | size: 9
					Tokens decoded: 16
					SEEK_NEXT_TOKEN | Decode: >> <<
					-->> "static bool User::Equation::is_symbol(char)" | Digit: >> <<
					<<-- "static bool User::Equation::is_symbol(char)" | N
					-->> "static bool User::Equation::is_operator(char)" | Digit: >> <<
					<<-- "static bool User::Equation::is_operator(char)" | N
					ERR1244: Invalid Digit >> <<
					SEEK_NEXT_TOKEN | Decode: >>+<<
					-->> "static bool User::Equation::is_symbol(char)" | Digit: >>+<<
					<<-- "static bool User::Equation::is_symbol(char)" | N
					-->> "static bool User::Equation::is_operator(char)" | Digit: >>+<<
					<<-- "static bool User::Equation::is_operator(char)" | Y
					Operator detected: >>+<< | Token: +
					Token fully decoded:  + | type: 2 | size: 1
					Tokens decoded: 17
					SEEK_NEXT_TOKEN | Decode: >>1<<
					TOKEN_NUMBER | Decode: >>0<<
					TOKEN_NUMBER | Decode: >>0<<
					TOKEN_NUMBER | Decode: >> <<
					Token fully decoded:  100 | type: 0 | size: 3
					Tokens decoded: 18
					SEEK_NEXT_TOKEN | Decode: >> <<
					-->> "static bool User::Equation::is_symbol(char)" | Digit: >> <<
					<<-- "static bool User::Equation::is_symbol(char)" | N
					-->> "static bool User::Equation::is_operator(char)" | Digit: >> <<
					<<-- "static bool User::Equation::is_operator(char)" | N
					ERR1244: Invalid Digit >> <<
					SEEK_NEXT_TOKEN | Decode: >>+<<
					-->> "static bool User::Equation::is_symbol(char)" | Digit: >>+<<
					<<-- "static bool User::Equation::is_symbol(char)" | N
					-->> "static bool User::Equation::is_operator(char)" | Digit: >>+<<
					<<-- "static bool User::Equation::is_operator(char)" | Y
					Operator detected: >>+<< | Token: +
					Token fully decoded:  + | type: 2 | size: 1
					Tokens decoded: 19
					SEEK_NEXT_TOKEN | Decode: >>1<<
					TOKEN_NUMBER | Decode: >>0<<
					TOKEN_NUMBER | Decode: >>1<<
					TOKEN_NUMBER | Decode: >>)<<
					Token fully decoded:  101 | type: 0 | size: 3
					Tokens decoded: 20
					SEEK_NEXT_TOKEN | Decode: >>)<<
					-->> "static bool User::Equation::is_symbol(char)" | Digit: >>)<<
					<<-- "static bool User::Equation::is_symbol(char)" | N
					-->> "static bool User::Equation::is_operator(char)" | Digit: >>)<<
					<<-- "static bool User::Equation::is_operator(char)" | N
					Close detected: >>)<< | Token: )
					Token fully decoded:  ) | type: 4 | size: 1
					Tokens decoded: 21
					SEEK_NEXT_TOKEN | Decode: >>+<<
					-->> "static bool User::Equation::is_symbol(char)" | Digit: >>+<<
					<<-- "static bool User::Equation::is_symbol(char)" | N
					-->> "static bool User::Equation::is_operator(char)" | Digit: >>+<<
					<<-- "static bool User::Equation::is_operator(char)" | Y
					Operator detected: >>+<< | Token: +
					Token fully decoded:  + | type: 2 | size: 1
					Tokens decoded: 22
					SEEK_NEXT_TOKEN | Decode: >>4<<
					Token fully decoded:  4 | type: 0 | size: 1
					Tokens decoded: 23
					Equations decoded into 23 tokens
					Token: >>Y<< | Type: 1 | Size: 1
					Token: >>=<< | Type: 2 | Size: 1
					Token: >>1<< | Type: 0 | Size: 1
					Token: >>+<< | Type: 2 | Size: 1
					Token: >>(<< | Type: 3 | Size: 1
					Token: >>3<< | Type: 0 | Size: 1
					Token: >>*<< | Type: 2 | Size: 1
					Token: >>X<< | Type: 1 | Size: 1
					Token: >>)<< | Type: 4 | Size: 1
					Token: >>+<< | Type: 2 | Size: 1
					Token: >>2<< | Type: 0 | Size: 1
					Token: >>+<< | Type: 2 | Size: 1
					Token: >>(<< | Type: 3 | Size: 1
					Token: >>5<< | Type: 0 | Size: 1
					Token: >>*<< | Type: 2 | Size: 1
					Token: >>sephiroth<< | Type: 1 | Size: 9
					Token: >>+<< | Type: 2 | Size: 1
					Token: >>100<< | Type: 0 | Size: 3
					Token: >>+<< | Type: 2 | Size: 1
					Token: >>101<< | Type: 0 | Size: 3
					Token: >>)<< | Type: 4 | Size: 1
					Token: >>+<< | Type: 2 | Size: 1
					Token: >>4<< | Type: 0 | Size: 1
				<<-- "static bool User::Equation::equation_to_token_array(std::__cxx11::string, std::vector<std::__cxx11::basic_string<char> >&, std::vector<User::Equation::Token>&)" | Decoded 23 tokens
				Tree wasn't empty: 15 | FLUSH
				-->> "bool User::Tree<Payload>::flush() [with Payload = User::Equation::Token]" | Nodes inside the tree: 15
					-->> "bool User::Tree<Payload>::init_root() [with Payload = User::Equation::Token]" |
					<<-- "bool User::Tree<Payload>::init_root() [with Payload = User::Equation::Token]" |
				<<-- "bool User::Tree<Payload>::flush() [with Payload = User::Equation::Token]" | Nodes inside the tree: 1
				-->> "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | Token Array Size: 23 | Father 0
					-->> "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 23
						Token   0 | >Y< | Open Close Priority: 0 | Symbol Priority 4 
						Token   1 | >=< | Open Close Priority: 0 | Symbol Priority 0 
						Token   2 | >1< | Open Close Priority: 0 | Symbol Priority 5 
						Token   3 | >+< | Open Close Priority: 0 | Symbol Priority 3 
						Token   4 | Open | Priority: 1
						Token   5 | >3< | Open Close Priority: 1 | Symbol Priority 5 
						Token   6 | >*< | Open Close Priority: 1 | Symbol Priority 1 
						Token   7 | >X< | Open Close Priority: 1 | Symbol Priority 4 
						Token   8 | Close| Priority: 1
						Token   9 | >+< | Open Close Priority: 0 | Symbol Priority 3 
						Token  10 | >2< | Open Close Priority: 0 | Symbol Priority 5 
						Token  11 | >+< | Open Close Priority: 0 | Symbol Priority 3 
						Token  12 | Open | Priority: 1
						Token  13 | >5< | Open Close Priority: 1 | Symbol Priority 5 
						Token  14 | >*< | Open Close Priority: 1 | Symbol Priority 1 
						Token  15 | >sephiroth< | Open Close Priority: 1 | Symbol Priority 4 
						Token  16 | >+< | Open Close Priority: 1 | Symbol Priority 3 
						Token  17 | >100< | Open Close Priority: 1 | Symbol Priority 5 
						Token  18 | >+< | Open Close Priority: 1 | Symbol Priority 3 
						Token  19 | >101< | Open Close Priority: 1 | Symbol Priority 5 
						Token  20 | Close| Priority: 1
						Token  21 | >+< | Open Close Priority: 0 | Symbol Priority 3 
						Token  22 | >4< | Open Close Priority: 0 | Symbol Priority 5 
						Candidate   0 | >Y< | Open Close Priority 0 | Symbol Priority 4 | Min Priority 0 | Default
						Candidate   1 | >=< | Open Close Priority 0 | Symbol Priority 0 | Min Priority 0
						Ignore   2 | >1< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Best Priority 0
						Ignore   3 | >+< | Open Close Priority 0 | Symbol Priority 3 | Min Priority 0 | Best Priority 0
						Ignore   9 | >+< | Open Close Priority 0 | Symbol Priority 3 | Min Priority 0 | Best Priority 0
						Ignore  10 | >2< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Best Priority 0
						Ignore  11 | >+< | Open Close Priority 0 | Symbol Priority 3 | Min Priority 0 | Best Priority 0
						Ignore  21 | >+< | Open Close Priority 0 | Symbol Priority 3 | Min Priority 0 | Best Priority 0
						Ignore  22 | >4< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Best Priority 0
						Token   1 | >=< | Highest priority token
					<<-- "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 23 | Highest Priority Token: <=> | 0 0
					Core Token: >=< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 0
					LHS: >Y<
					RHS: >1<
					RHS: >+<
					RHS: >(<
					RHS: >3<
					RHS: >*<
					RHS: >X<
					RHS: >)<
					RHS: >+<
					RHS: >2<
					RHS: >+<
					RHS: >(<
					RHS: >5<
					RHS: >*<
					RHS: >sephiroth<
					RHS: >+<
					RHS: >100<
					RHS: >+<
					RHS: >101<
					RHS: >)<
					RHS: >+<
					RHS: >4<
					LHS Tokens: 1 | RHS Tokens: 21
					ROOT: >=<
					-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" | Object: 007efd18, Index: 0
					<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" |
					LHS: >=<
					-->> "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | Token Array Size: 1 | Father 0
						-->> "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1
							Token   0 | >Y< | Open Close Priority: 0 | Symbol Priority 4 
							Candidate   0 | >Y< | Open Close Priority 0 | Symbol Priority 4 | Min Priority 0 | Default
							Token   0 | >Y< | Highest priority token
						<<-- "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1 | Highest Priority Token: <Y> | 0 4
						Core Token: >Y< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 4
						LHS Tokens: 0 | RHS Tokens: 0
						-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" | Object: 007efd18, Index: 0
						<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" |
						-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
						<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 0 | Own Index: 1 | Nodes under Father: 2
					<<-- "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | PASS
					LHS of size 1 under father 0
					-->> "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | Token Array Size: 21 | Father 0
						-->> "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 21
							Token   0 | >1< | Open Close Priority: 0 | Symbol Priority 5 
							Token   1 | >+< | Open Close Priority: 0 | Symbol Priority 3 
							Token   2 | Open | Priority: 1
							Token   3 | >3< | Open Close Priority: 1 | Symbol Priority 5 
							Token   4 | >*< | Open Close Priority: 1 | Symbol Priority 1 
							Token   5 | >X< | Open Close Priority: 1 | Symbol Priority 4 
							Token   6 | Close| Priority: 1
							Token   7 | >+< | Open Close Priority: 0 | Symbol Priority 3 
							Token   8 | >2< | Open Close Priority: 0 | Symbol Priority 5 
							Token   9 | >+< | Open Close Priority: 0 | Symbol Priority 3 
							Token  10 | Open | Priority: 1
							Token  11 | >5< | Open Close Priority: 1 | Symbol Priority 5 
							Token  12 | >*< | Open Close Priority: 1 | Symbol Priority 1 
							Token  13 | >sephiroth< | Open Close Priority: 1 | Symbol Priority 4 
							Token  14 | >+< | Open Close Priority: 1 | Symbol Priority 3 
							Token  15 | >100< | Open Close Priority: 1 | Symbol Priority 5 
							Token  16 | >+< | Open Close Priority: 1 | Symbol Priority 3 
							Token  17 | >101< | Open Close Priority: 1 | Symbol Priority 5 
							Token  18 | Close| Priority: 1
							Token  19 | >+< | Open Close Priority: 0 | Symbol Priority 3 
							Token  20 | >4< | Open Close Priority: 0 | Symbol Priority 5 
							Candidate   0 | >1< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Default
							Candidate   1 | >+< | Open Close Priority 0 | Symbol Priority 3 | Min Priority 0
							Ignore   7 | >+< | Open Close Priority 0 | Symbol Priority 3 | Min Priority 0 | Best Priority 3
							Ignore   8 | >2< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Best Priority 3
							Ignore   9 | >+< | Open Close Priority 0 | Symbol Priority 3 | Min Priority 0 | Best Priority 3
							Ignore  19 | >+< | Open Close Priority 0 | Symbol Priority 3 | Min Priority 0 | Best Priority 3
							Ignore  20 | >4< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Best Priority 3
							Token   1 | >+< | Highest priority token
						<<-- "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 21 | Highest Priority Token: <+> | 0 3
						Core Token: >+< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 3
						LHS: >1<
						RHS: >(<
						RHS: >3<
						RHS: >*<
						RHS: >X<
						RHS: >)<
						RHS: >+<
						RHS: >2<
						RHS: >+<
						RHS: >(<
						RHS: >5<
						RHS: >*<
						RHS: >sephiroth<
						RHS: >+<
						RHS: >100<
						RHS: >+<
						RHS: >101<
						RHS: >)<
						RHS: >+<
						RHS: >4<
						LHS Tokens: 1 | RHS Tokens: 19
						-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
						<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 0 | Own Index: 2 | Nodes under Father: 3
						-->> "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | Token Array Size: 1 | Father 2
							-->> "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1
								Token   0 | >1< | Open Close Priority: 0 | Symbol Priority 5 
								Candidate   0 | >1< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Default
								Token   0 | >1< | Highest priority token
							<<-- "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1 | Highest Priority Token: <1> | 0 5
							Core Token: >1< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 5
							LHS Tokens: 0 | RHS Tokens: 0
							-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
							<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 2 | Own Index: 3 | Nodes under Father: 2
						<<-- "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | PASS
						LHS of size 1 under father 2
						-->> "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | Token Array Size: 19 | Father 2
							-->> "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 19
								Token   0 | Open | Priority: 1
								Token   1 | >3< | Open Close Priority: 1 | Symbol Priority 5 
								Token   2 | >*< | Open Close Priority: 1 | Symbol Priority 1 
								Token   3 | >X< | Open Close Priority: 1 | Symbol Priority 4 
								Token   4 | Close| Priority: 1
								Token   5 | >+< | Open Close Priority: 0 | Symbol Priority 3 
								Token   6 | >2< | Open Close Priority: 0 | Symbol Priority 5 
								Token   7 | >+< | Open Close Priority: 0 | Symbol Priority 3 
								Token   8 | Open | Priority: 1
								Token   9 | >5< | Open Close Priority: 1 | Symbol Priority 5 
								Token  10 | >*< | Open Close Priority: 1 | Symbol Priority 1 
								Token  11 | >sephiroth< | Open Close Priority: 1 | Symbol Priority 4 
								Token  12 | >+< | Open Close Priority: 1 | Symbol Priority 3 
								Token  13 | >100< | Open Close Priority: 1 | Symbol Priority 5 
								Token  14 | >+< | Open Close Priority: 1 | Symbol Priority 3 
								Token  15 | >101< | Open Close Priority: 1 | Symbol Priority 5 
								Token  16 | Close| Priority: 1
								Token  17 | >+< | Open Close Priority: 0 | Symbol Priority 3 
								Token  18 | >4< | Open Close Priority: 0 | Symbol Priority 5 
								Candidate   5 | >+< | Open Close Priority 0 | Symbol Priority 3 | Min Priority 0 | Default
								Ignore   6 | >2< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Best Priority 3
								Ignore   7 | >+< | Open Close Priority 0 | Symbol Priority 3 | Min Priority 0 | Best Priority 3
								Ignore  17 | >+< | Open Close Priority 0 | Symbol Priority 3 | Min Priority 0 | Best Priority 3
								Ignore  18 | >4< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Best Priority 3
								Token   5 | >+< | Highest priority token
							<<-- "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 19 | Highest Priority Token: <+> | 0 3
							Core Token: >+< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 3
							LHS: >(<
							LHS: >3<
							LHS: >*<
							LHS: >X<
							LHS: >)<
							RHS: >2<
							RHS: >+<
							RHS: >(<
							RHS: >5<
							RHS: >*<
							RHS: >sephiroth<
							RHS: >+<
							RHS: >100<
							RHS: >+<
							RHS: >101<
							RHS: >)<
							RHS: >+<
							RHS: >4<
							LHS Tokens: 5 | RHS Tokens: 13
							-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
							<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 2 | Own Index: 4 | Nodes under Father: 3
							-->> "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | Token Array Size: 5 | Father 4
								-->> "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 5
									Token   0 | Open | Priority: 1
									Token   1 | >3< | Open Close Priority: 1 | Symbol Priority 5 
									Token   2 | >*< | Open Close Priority: 1 | Symbol Priority 1 
									Token   3 | >X< | Open Close Priority: 1 | Symbol Priority 4 
									Token   4 | Close| Priority: 1
									Delete Open 0 | Priority: 1 | Min Priority: 1 
									Delete Close 3 | Priority: 1 | Min Priority: 1 
									Deleted redundant priority tokens | Tokens: 3 | Min Open Close Priority: 0
									Token   0 | >3< | Open Close Priority: 0 | Symbol Priority 5 
									Token   1 | >*< | Open Close Priority: 0 | Symbol Priority 1 
									Token   2 | >X< | Open Close Priority: 0 | Symbol Priority 4 
									Candidate   0 | >3< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Default
									Candidate   1 | >*< | Open Close Priority 0 | Symbol Priority 1 | Min Priority 0
									Ignore   2 | >X< | Open Close Priority 0 | Symbol Priority 4 | Min Priority 0 | Best Priority 1
									Token   1 | >*< | Highest priority token
								<<-- "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 3 | Highest Priority Token: <*> | 0 1
								Core Token: >*< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 1
								LHS: >3<
								RHS: >X<
								LHS Tokens: 1 | RHS Tokens: 1
								-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
								<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 4 | Own Index: 5 | Nodes under Father: 2
								-->> "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | Token Array Size: 1 | Father 5
									-->> "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1
										Token   0 | >3< | Open Close Priority: 0 | Symbol Priority 5 
										Candidate   0 | >3< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Default
										Token   0 | >3< | Highest priority token
									<<-- "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1 | Highest Priority Token: <3> | 0 5
									Core Token: >3< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 5
									LHS Tokens: 0 | RHS Tokens: 0
									-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
									<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 5 | Own Index: 6 | Nodes under Father: 2
								<<-- "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | PASS
								LHS of size 1 under father 5
								-->> "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | Token Array Size: 1 | Father 5
									-->> "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1
										Token   0 | >X< | Open Close Priority: 0 | Symbol Priority 4 
										Candidate   0 | >X< | Open Close Priority 0 | Symbol Priority 4 | Min Priority 0 | Default
										Token   0 | >X< | Highest priority token
									<<-- "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1 | Highest Priority Token: <X> | 0 4
									Core Token: >X< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 4
									LHS Tokens: 0 | RHS Tokens: 0
									-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
									<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 5 | Own Index: 7 | Nodes under Father: 3
								<<-- "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | PASS
								RHS of size 1 under father 5
							<<-- "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | PASS
							LHS of size 3 under father 4
							-->> "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | Token Array Size: 13 | Father 4
								-->> "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 13
									Token   0 | >2< | Open Close Priority: 0 | Symbol Priority 5 
									Token   1 | >+< | Open Close Priority: 0 | Symbol Priority 3 
									Token   2 | Open | Priority: 1
									Token   3 | >5< | Open Close Priority: 1 | Symbol Priority 5 
									Token   4 | >*< | Open Close Priority: 1 | Symbol Priority 1 
									Token   5 | >sephiroth< | Open Close Priority: 1 | Symbol Priority 4 
									Token   6 | >+< | Open Close Priority: 1 | Symbol Priority 3 
									Token   7 | >100< | Open Close Priority: 1 | Symbol Priority 5 
									Token   8 | >+< | Open Close Priority: 1 | Symbol Priority 3 
									Token   9 | >101< | Open Close Priority: 1 | Symbol Priority 5 
									Token  10 | Close| Priority: 1
									Token  11 | >+< | Open Close Priority: 0 | Symbol Priority 3 
									Token  12 | >4< | Open Close Priority: 0 | Symbol Priority 5 
									Candidate   0 | >2< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Default
									Candidate   1 | >+< | Open Close Priority 0 | Symbol Priority 3 | Min Priority 0
									Ignore  11 | >+< | Open Close Priority 0 | Symbol Priority 3 | Min Priority 0 | Best Priority 3
									Ignore  12 | >4< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Best Priority 3
									Token   1 | >+< | Highest priority token
								<<-- "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 13 | Highest Priority Token: <+> | 0 3
								Core Token: >+< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 3
								LHS: >2<
								RHS: >(<
								RHS: >5<
								RHS: >*<
								RHS: >sephiroth<
								RHS: >+<
								RHS: >100<
								RHS: >+<
								RHS: >101<
								RHS: >)<
								RHS: >+<
								RHS: >4<
								LHS Tokens: 1 | RHS Tokens: 11
								-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
								<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 4 | Own Index: 8 | Nodes under Father: 3
								-->> "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | Token Array Size: 1 | Father 8
									-->> "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1
										Token   0 | >2< | Open Close Priority: 0 | Symbol Priority 5 
										Candidate   0 | >2< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Default
										Token   0 | >2< | Highest priority token
									<<-- "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1 | Highest Priority Token: <2> | 0 5
									Core Token: >2< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 5
									LHS Tokens: 0 | RHS Tokens: 0
									-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
									<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 8 | Own Index: 9 | Nodes under Father: 2
								<<-- "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | PASS
								LHS of size 1 under father 8
								-->> "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | Token Array Size: 11 | Father 8
									-->> "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 11
										Token   0 | Open | Priority: 1
										Token   1 | >5< | Open Close Priority: 1 | Symbol Priority 5 
										Token   2 | >*< | Open Close Priority: 1 | Symbol Priority 1 
										Token   3 | >sephiroth< | Open Close Priority: 1 | Symbol Priority 4 
										Token   4 | >+< | Open Close Priority: 1 | Symbol Priority 3 
										Token   5 | >100< | Open Close Priority: 1 | Symbol Priority 5 
										Token   6 | >+< | Open Close Priority: 1 | Symbol Priority 3 
										Token   7 | >101< | Open Close Priority: 1 | Symbol Priority 5 
										Token   8 | Close| Priority: 1
										Token   9 | >+< | Open Close Priority: 0 | Symbol Priority 3 
										Token  10 | >4< | Open Close Priority: 0 | Symbol Priority 5 
										Candidate   9 | >+< | Open Close Priority 0 | Symbol Priority 3 | Min Priority 0 | Default
										Ignore  10 | >4< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Best Priority 3
										Token   9 | >+< | Highest priority token
									<<-- "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 11 | Highest Priority Token: <+> | 0 3
									Core Token: >+< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 3
									LHS: >(<
									LHS: >5<
									LHS: >*<
									LHS: >sephiroth<
									LHS: >+<
									LHS: >100<
									LHS: >+<
									LHS: >101<
									LHS: >)<
									RHS: >4<
									LHS Tokens: 9 | RHS Tokens: 1
									-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
									<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 8 | Own Index: 10 | Nodes under Father: 3
									-->> "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | Token Array Size: 9 | Father 10
										-->> "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 9
											Token   0 | Open | Priority: 1
											Token   1 | >5< | Open Close Priority: 1 | Symbol Priority 5 
											Token   2 | >*< | Open Close Priority: 1 | Symbol Priority 1 
											Token   3 | >sephiroth< | Open Close Priority: 1 | Symbol Priority 4 
											Token   4 | >+< | Open Close Priority: 1 | Symbol Priority 3 
											Token   5 | >100< | Open Close Priority: 1 | Symbol Priority 5 
											Token   6 | >+< | Open Close Priority: 1 | Symbol Priority 3 
											Token   7 | >101< | Open Close Priority: 1 | Symbol Priority 5 
											Token   8 | Close| Priority: 1
											Delete Open 0 | Priority: 1 | Min Priority: 1 
											Delete Close 7 | Priority: 1 | Min Priority: 1 
											Deleted redundant priority tokens | Tokens: 7 | Min Open Close Priority: 0
											Token   0 | >5< | Open Close Priority: 0 | Symbol Priority 5 
											Token   1 | >*< | Open Close Priority: 0 | Symbol Priority 1 
											Token   2 | >sephiroth< | Open Close Priority: 0 | Symbol Priority 4 
											Token   3 | >+< | Open Close Priority: 0 | Symbol Priority 3 
											Token   4 | >100< | Open Close Priority: 0 | Symbol Priority 5 
											Token   5 | >+< | Open Close Priority: 0 | Symbol Priority 3 
											Token   6 | >101< | Open Close Priority: 0 | Symbol Priority 5 
											Candidate   0 | >5< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Default
											Candidate   1 | >*< | Open Close Priority 0 | Symbol Priority 1 | Min Priority 0
											Ignore   2 | >sephiroth< | Open Close Priority 0 | Symbol Priority 4 | Min Priority 0 | Best Priority 1
											Ignore   3 | >+< | Open Close Priority 0 | Symbol Priority 3 | Min Priority 0 | Best Priority 1
											Ignore   4 | >100< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Best Priority 1
											Ignore   5 | >+< | Open Close Priority 0 | Symbol Priority 3 | Min Priority 0 | Best Priority 1
											Ignore   6 | >101< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Best Priority 1
											Token   1 | >*< | Highest priority token
										<<-- "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 7 | Highest Priority Token: <*> | 0 1
										Core Token: >*< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 1
										LHS: >5<
										RHS: >sephiroth<
										RHS: >+<
										RHS: >100<
										RHS: >+<
										RHS: >101<
										LHS Tokens: 1 | RHS Tokens: 5
										-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
										<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 10 | Own Index: 11 | Nodes under Father: 2
										-->> "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | Token Array Size: 1 | Father 11
											-->> "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1
												Token   0 | >5< | Open Close Priority: 0 | Symbol Priority 5 
												Candidate   0 | >5< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Default
												Token   0 | >5< | Highest priority token
											<<-- "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1 | Highest Priority Token: <5> | 0 5
											Core Token: >5< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 5
											LHS Tokens: 0 | RHS Tokens: 0
											-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
											<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 11 | Own Index: 12 | Nodes under Father: 2
										<<-- "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | PASS
										LHS of size 1 under father 11
										-->> "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | Token Array Size: 5 | Father 11
											-->> "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 5
												Token   0 | >sephiroth< | Open Close Priority: 0 | Symbol Priority 4 
												Token   1 | >+< | Open Close Priority: 0 | Symbol Priority 3 
												Token   2 | >100< | Open Close Priority: 0 | Symbol Priority 5 
												Token   3 | >+< | Open Close Priority: 0 | Symbol Priority 3 
												Token   4 | >101< | Open Close Priority: 0 | Symbol Priority 5 
												Candidate   0 | >sephiroth< | Open Close Priority 0 | Symbol Priority 4 | Min Priority 0 | Default
												Candidate   1 | >+< | Open Close Priority 0 | Symbol Priority 3 | Min Priority 0
												Ignore   2 | >100< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Best Priority 3
												Ignore   3 | >+< | Open Close Priority 0 | Symbol Priority 3 | Min Priority 0 | Best Priority 3
												Ignore   4 | >101< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Best Priority 3
												Token   1 | >+< | Highest priority token
											<<-- "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 5 | Highest Priority Token: <+> | 0 3
											Core Token: >+< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 3
											LHS: >sephiroth<
											RHS: >100<
											RHS: >+<
											RHS: >101<
											LHS Tokens: 1 | RHS Tokens: 3
											-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
											<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 11 | Own Index: 13 | Nodes under Father: 3
											-->> "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | Token Array Size: 1 | Father 13
												-->> "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1
												Token   0 | >sephiroth< | Open Close Priority: 0 | Symbol Priority 4 
												Candidate   0 | >sephiroth< | Open Close Priority 0 | Symbol Priority 4 | Min Priority 0 | Default
												Token   0 | >sephiroth< | Highest priority token
											<<-- "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1 | Highest Priority Token: <sephiroth> | 0 4
											Core Token: >sephiroth< | Size: 9 | Open/Close Priority: 0 | Symbol Priority: 4
											LHS Tokens: 0 | RHS Tokens: 0
											-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
											<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 13 | Own Index: 14 | Nodes under Father: 2
										<<-- "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | PASS
										LHS of size 1 under father 13
										-->> "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | Token Array Size: 3 | Father 13
											-->> "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 3
												Token   0 | >100< | Open Close Priority: 0 | Symbol Priority 5 
												Token   1 | >+< | Open Close Priority: 0 | Symbol Priority 3 
												Token   2 | >101< | Open Close Priority: 0 | Symbol Priority 5 
												Candidate   0 | >100< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Default
												Candidate   1 | >+< | Open Close Priority 0 | Symbol Priority 3 | Min Priority 0
												Ignore   2 | >101< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Best Priority 3
												Token   1 | >+< | Highest priority token
											<<-- "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 3 | Highest Priority Token: <+> | 0 3
											Core Token: >+< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 3
											LHS: >100<
											RHS: >101<
											LHS Tokens: 1 | RHS Tokens: 1
											-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
											<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 13 | Own Index: 15 | Nodes under Father: 3
											-->> "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | Token Array Size: 1 | Father 15
												-->> "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1
												Token   0 | >100< | Open Close Priority: 0 | Symbol Priority 5 
												Candidate   0 | >100< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Default
												Token   0 | >100< | Highest priority token
											<<-- "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1 | Highest Priority Token: <100> | 0 5
											Core Token: >100< | Size: 3 | Open/Close Priority: 0 | Symbol Priority: 5
											LHS Tokens: 0 | RHS Tokens: 0
											-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
											<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 15 | Own Index: 16 | Nodes under Father: 2
										<<-- "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | PASS
										LHS of size 1 under father 15
										-->> "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | Token Array Size: 1 | Father 15
											-->> "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1
												Token   0 | >101< | Open Close Priority: 0 | Symbol Priority 5 
												Candidate   0 | >101< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Default
												Token   0 | >101< | Highest priority token
											<<-- "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1 | Highest Priority Token: <101> | 0 5
											Core Token: >101< | Size: 3 | Open/Close Priority: 0 | Symbol Priority: 5
											LHS Tokens: 0 | RHS Tokens: 0
											-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
											<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 15 | Own Index: 17 | Nodes under Father: 3
										<<-- "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | PASS
										RHS of size 1 under father 15
									<<-- "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | PASS
									RHS of size 3 under father 13
								<<-- "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | PASS
								RHS of size 5 under father 11
							<<-- "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | PASS
							LHS of size 7 under father 10
							-->> "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | Token Array Size: 1 | Father 10
								-->> "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1
									Token   0 | >4< | Open Close Priority: 0 | Symbol Priority 5 
									Candidate   0 | >4< | Open Close Priority 0 | Symbol Priority 5 | Min Priority 0 | Default
									Token   0 | >4< | Highest priority token
								<<-- "static bool User::Equation::compute_token_array_priority(std::vector<User::Equation::Token>&, std::vector<User::Equation::Token>::iterator&)" | Tokens: 1 | Highest Priority Token: <4> | 0 5
								Core Token: >4< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 5
								LHS Tokens: 0 | RHS Tokens: 0
								-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
								<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 10 | Own Index: 18 | Nodes under Father: 3
							<<-- "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | PASS
							RHS of size 1 under father 10
						<<-- "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | PASS
						RHS of size 11 under father 8
					<<-- "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | PASS
					RHS of size 13 under father 4
				<<-- "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | PASS
				RHS of size 19 under father 2
			<<-- "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | PASS
			RHS of size 21 under father 0
		<<-- "static bool User::Equation::token_array_to_tree(std::vector<User::Equation::Token>&, User::Tree<User::Equation::Token>&, size_t)" | PASS
		-->> "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" | Index: 0
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef904 | Begin: 1 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 0 | Stack size: 1
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef934 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 19 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 0
					Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 0 | Depth: 1
					Found children || Index 2 | Own Index: 2 | Father Index: 0 | Own Priority 1 | Children: 2 | Depth: 1
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 1 | Index: 0
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef934 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 19 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 1
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 2 | Index: 1
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef934 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 19 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 2
					Found children || Index 3 | Own Index: 3 | Father Index: 2 | Own Priority 0 | Children: 0 | Depth: 2
					Found children || Index 4 | Own Index: 4 | Father Index: 2 | Own Priority 1 | Children: 2 | Depth: 2
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 3 | Index: 2
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef934 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 19 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 3
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 4 | Index: 3
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef934 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 19 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 4
					Found children || Index 5 | Own Index: 5 | Father Index: 4 | Own Priority 0 | Children: 2 | Depth: 3
					Found children || Index 8 | Own Index: 8 | Father Index: 4 | Own Priority 1 | Children: 2 | Depth: 3
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Index: 4
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef934 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 19 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 5
					Found children || Index 6 | Own Index: 6 | Father Index: 5 | Own Priority 0 | Children: 0 | Depth: 4
					Found children || Index 7 | Own Index: 7 | Father Index: 5 | Own Priority 1 | Children: 0 | Depth: 4
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 6 | Index: 5
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef934 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 19 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 6
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 7 | Index: 6
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef934 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 19 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 7
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 8 | Index: 7
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef934 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 19 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 8
					Found children || Index 9 | Own Index: 9 | Father Index: 8 | Own Priority 0 | Children: 0 | Depth: 4
					Found children || Index 10 | Own Index: 10 | Father Index: 8 | Own Priority 1 | Children: 2 | Depth: 4
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 9 | Index: 8
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef934 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 19 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 9
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 10 | Index: 9
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef934 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 19 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 10
					Found children || Index 11 | Own Index: 11 | Father Index: 10 | Own Priority 0 | Children: 2 | Depth: 5
					Found children || Index 18 | Own Index: 18 | Father Index: 10 | Own Priority 1 | Children: 0 | Depth: 5
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 11 | Index: 10
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef934 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 19 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 11
					Found children || Index 12 | Own Index: 12 | Father Index: 11 | Own Priority 0 | Children: 0 | Depth: 6
					Found children || Index 13 | Own Index: 13 | Father Index: 11 | Own Priority 1 | Children: 2 | Depth: 6
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 12 | Index: 11
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef934 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 19 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 12
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 13 | Index: 12
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef934 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 19 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 13
					Found children || Index 14 | Own Index: 14 | Father Index: 13 | Own Priority 0 | Children: 0 | Depth: 7
					Found children || Index 15 | Own Index: 15 | Father Index: 13 | Own Priority 1 | Children: 2 | Depth: 7
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 14 | Index: 13
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef934 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 19 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 14
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Index: 14
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef934 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 19 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 15
					Found children || Index 16 | Own Index: 16 | Father Index: 15 | Own Priority 0 | Children: 0 | Depth: 8
					Found children || Index 17 | Own Index: 17 | Father Index: 15 | Own Priority 1 | Children: 0 | Depth: 8
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 16 | Index: 15
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef934 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 19 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 16
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 17 | Index: 16
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef934 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 19 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 17
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 18 | Index: 17
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef934 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 19 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 18
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 19 | Index: 18
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007ef934 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 19 | Stack size: 0
		<<-- "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" |
	<<-- "bool User::Equation::parse(std::__cxx11::string)" | Token array size: 23 | Token tree size: 19
	TOKEN0
	TOKEN1
	TOKEN2
	TOKEN3
	TOKEN4
	TOKEN5
	TOKEN6
	TOKEN7
	TOKEN8
	TOKEN9
	TOKEN10
	TOKEN11
	TOKEN12
	TOKEN13
	TOKEN14
	TOKEN15
	TOKEN16
	TOKEN17
	TOKEN18
	TOKEN19
	TOKEN20
	TOKEN21
	TOKEN22
	-->> "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" | Index: 0
		-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa54 | Begin: 1 | Index: 0
		<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 0 | Stack size: 1
		-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
		<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 19 | Stack size: 0
		-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
			-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 0
				Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 0 | Depth: 1
				Found children || Index 2 | Own Index: 2 | Father Index: 0 | Own Priority 1 | Children: 2 | Depth: 1
			<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
		<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 1 | Index: 0
		-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
		<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 19 | Stack size: 0
		-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
			-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 1
			<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
		<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 2 | Index: 1
		-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
		<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 19 | Stack size: 0
		-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
			-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 2
				Found children || Index 3 | Own Index: 3 | Father Index: 2 | Own Priority 0 | Children: 0 | Depth: 2
				Found children || Index 4 | Own Index: 4 | Father Index: 2 | Own Priority 1 | Children: 2 | Depth: 2
			<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
		<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 3 | Index: 2
		-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
		<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 19 | Stack size: 0
		-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
			-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 3
			<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
		<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 4 | Index: 3
		-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
		<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 19 | Stack size: 0
		-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
			-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 4
				Found children || Index 5 | Own Index: 5 | Father Index: 4 | Own Priority 0 | Children: 2 | Depth: 3
				Found children || Index 8 | Own Index: 8 | Father Index: 4 | Own Priority 1 | Children: 2 | Depth: 3
			<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
		<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Index: 4
		-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
		<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 19 | Stack size: 0
		-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
			-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 5
				Found children || Index 6 | Own Index: 6 | Father Index: 5 | Own Priority 0 | Children: 0 | Depth: 4
				Found children || Index 7 | Own Index: 7 | Father Index: 5 | Own Priority 1 | Children: 0 | Depth: 4
			<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
		<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 6 | Index: 5
		-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
		<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 19 | Stack size: 0
		-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
			-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 6
			<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
		<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 7 | Index: 6
		-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
		<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 19 | Stack size: 0
		-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
			-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 7
			<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
		<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 8 | Index: 7
		-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
		<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 19 | Stack size: 0
		-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
			-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 8
				Found children || Index 9 | Own Index: 9 | Father Index: 8 | Own Priority 0 | Children: 0 | Depth: 4
				Found children || Index 10 | Own Index: 10 | Father Index: 8 | Own Priority 1 | Children: 2 | Depth: 4
			<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
		<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 9 | Index: 8
		-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
		<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 19 | Stack size: 0
		-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
			-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 9
			<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
		<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 10 | Index: 9
		-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
		<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 19 | Stack size: 0
		-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
			-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 10
				Found children || Index 11 | Own Index: 11 | Father Index: 10 | Own Priority 0 | Children: 2 | Depth: 5
				Found children || Index 18 | Own Index: 18 | Father Index: 10 | Own Priority 1 | Children: 0 | Depth: 5
			<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
		<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 11 | Index: 10
		-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
		<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 19 | Stack size: 0
		-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
			-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 11
				Found children || Index 12 | Own Index: 12 | Father Index: 11 | Own Priority 0 | Children: 0 | Depth: 6
				Found children || Index 13 | Own Index: 13 | Father Index: 11 | Own Priority 1 | Children: 2 | Depth: 6
			<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
		<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 12 | Index: 11
		-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
		<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 19 | Stack size: 0
		-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
			-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 12
			<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
		<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 13 | Index: 12
		-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
		<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 19 | Stack size: 0
		-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
			-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 13
				Found children || Index 14 | Own Index: 14 | Father Index: 13 | Own Priority 0 | Children: 0 | Depth: 7
				Found children || Index 15 | Own Index: 15 | Father Index: 13 | Own Priority 1 | Children: 2 | Depth: 7
			<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
		<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 14 | Index: 13
		-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
		<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 19 | Stack size: 0
		-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
			-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 14
			<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
		<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Index: 14
		-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
		<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 19 | Stack size: 0
		-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
			-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 15
				Found children || Index 16 | Own Index: 16 | Father Index: 15 | Own Priority 0 | Children: 0 | Depth: 8
				Found children || Index 17 | Own Index: 17 | Father Index: 15 | Own Priority 1 | Children: 0 | Depth: 8
			<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
		<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 16 | Index: 15
		-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
		<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 19 | Stack size: 0
		-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
			-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 16
			<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
		<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 17 | Index: 16
		-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
		<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 19 | Stack size: 0
		-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
			-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 17
			<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
		<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 18 | Index: 17
		-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
		<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 19 | Stack size: 0
		-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
			-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 18
			<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
		<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 19 | Index: 18
		-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
		<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 19 | Stack size: 0
	<<-- "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" |
	-->> "User::Tree<Payload>::Tree(std::vector<User::Tree<Payload>::St_minimal_node>) [with Payload = User::Equation::Token]" | This: 007efc40 | Nodes: 18
		-->> "bool User::Tree<Payload>::init_class_vars(Payload) [with Payload = User::Equation::Token]" |
		<<-- "bool User::Tree<Payload>::init_class_vars(Payload) [with Payload = User::Equation::Token]" |
		-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
		<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 0 | Own Index: 1 | Nodes under Father: 2
		-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
		<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 0 | Own Index: 2 | Nodes under Father: 3
		-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
		<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 2 | Own Index: 3 | Nodes under Father: 2
		-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
		<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 2 | Own Index: 4 | Nodes under Father: 3
		-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
		<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 4 | Own Index: 5 | Nodes under Father: 2
		-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
		<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 4 | Own Index: 6 | Nodes under Father: 3
		-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
		<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 5 | Own Index: 7 | Nodes under Father: 2
		-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
		<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 5 | Own Index: 8 | Nodes under Father: 3
		-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
		<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 6 | Own Index: 9 | Nodes under Father: 2
		-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
		<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 6 | Own Index: 10 | Nodes under Father: 3
		-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
		<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 10 | Own Index: 11 | Nodes under Father: 2
		-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
		<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 10 | Own Index: 12 | Nodes under Father: 3
		-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
		<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 11 | Own Index: 13 | Nodes under Father: 2
		-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
		<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 11 | Own Index: 14 | Nodes under Father: 3
		-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
		<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 6 | Own Index: 15 | Nodes under Father: 4
		-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
		<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 10 | Own Index: 16 | Nodes under Father: 4
		-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" |
		<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father Index: 11 | Own Index: 17 | Nodes under Father: 4
		-->> "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" | Index: 0
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa54 | Begin: 1 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 0 | Stack size: 1
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 18 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 0
					Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 0 | Depth: 1
					Found children || Index 2 | Own Index: 2 | Father Index: 0 | Own Priority 1 | Children: 2 | Depth: 1
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 1 | Index: 0
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 18 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 1
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 2 | Index: 1
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 18 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 2
					Found children || Index 3 | Own Index: 3 | Father Index: 2 | Own Priority 0 | Children: 0 | Depth: 2
					Found children || Index 4 | Own Index: 4 | Father Index: 2 | Own Priority 1 | Children: 2 | Depth: 2
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 3 | Index: 2
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 18 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 3
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 4 | Index: 3
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 18 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 4
					Found children || Index 5 | Own Index: 5 | Father Index: 4 | Own Priority 0 | Children: 2 | Depth: 3
					Found children || Index 6 | Own Index: 6 | Father Index: 4 | Own Priority 1 | Children: 3 | Depth: 3
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Index: 4
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 18 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 5
					Found children || Index 7 | Own Index: 7 | Father Index: 5 | Own Priority 0 | Children: 0 | Depth: 4
					Found children || Index 8 | Own Index: 8 | Father Index: 5 | Own Priority 1 | Children: 0 | Depth: 4
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 6 | Index: 5
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 18 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 7
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 7 | Index: 7
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 18 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 8
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 8 | Index: 8
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 18 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 6
					Found children || Index 9 | Own Index: 9 | Father Index: 6 | Own Priority 0 | Children: 0 | Depth: 4
					Found children || Index 10 | Own Index: 10 | Father Index: 6 | Own Priority 1 | Children: 3 | Depth: 4
					Found children || Index 15 | Own Index: 15 | Father Index: 6 | Own Priority 2 | Children: 0 | Depth: 4
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 3 | 3 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 9 | Index: 6
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 18 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 9
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 10 | Index: 9
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 18 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 10
					Found children || Index 11 | Own Index: 11 | Father Index: 10 | Own Priority 0 | Children: 3 | Depth: 5
					Found children || Index 12 | Own Index: 12 | Father Index: 10 | Own Priority 1 | Children: 0 | Depth: 5
					Found children || Index 16 | Own Index: 16 | Father Index: 10 | Own Priority 2 | Children: 0 | Depth: 5
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 3 | 3 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 11 | Index: 10
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 18 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 11
					Found children || Index 13 | Own Index: 13 | Father Index: 11 | Own Priority 0 | Children: 0 | Depth: 6
					Found children || Index 14 | Own Index: 14 | Father Index: 11 | Own Priority 1 | Children: 0 | Depth: 6
					Found children || Index 17 | Own Index: 17 | Father Index: 11 | Own Priority 2 | Children: 0 | Depth: 6
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 3 | 3 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 12 | Index: 11
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 18 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 13
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 13 | Index: 13
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 18 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 14
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 14 | Index: 14
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 18 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 17
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Index: 17
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 18 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 12
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 16 | Index: 12
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 18 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 16
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 17 | Index: 16
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 18 | Stack size: 0
			-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
				-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 15
				<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
			<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 18 | Index: 15
			-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efa84 | Begin: 0 | Index: 0
			<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 18 | Stack size: 0
		<<-- "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation::Token; size_t = unsigned int]" |
		-->> "bool User::Tree<Payload>::operator==(User::Tree<Payload>&) [with Payload = User::Equation::Token]" |
		<<-- "bool User::Tree<Payload>::operator==(User::Tree<Payload>&) [with Payload = User::Equation::Token]" | Unequal size 19 | 18
		ERR328: FAIL TREE | Test pattern: 20
		-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efbc4 | Begin: 1 | Index: 0
		<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 0 | Stack size: 1
		-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efda0 | Begin: 0 | Index: 0
		<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 19 | Stack size: 0
		-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
			-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 0
				Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 0 | Depth: 1
				Found children || Index 2 | Own Index: 2 | Father Index: 0 | Own Priority 1 | Children: 2 | Depth: 1
			<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
		<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 1 | Index: 0
		-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efda0 | Begin: 0 | Index: 0
		<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 19 | Stack size: 0
		-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
			-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 1
			<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
		<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 2 | Index: 1
		-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efda0 | Begin: 0 | Index: 0
		<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 19 | Stack size: 0
		-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
			-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 2
				Found children || Index 3 | Own Index: 3 | Father Index: 2 | Own Priority 0 | Children: 0 | Depth: 2
				Found children || Index 4 | Own Index: 4 | Father Index: 2 | Own Priority 1 | Children: 2 | Depth: 2
			<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
		<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 3 | Index: 2
		-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efda0 | Begin: 0 | Index: 0
		<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 19 | Stack size: 0
		-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
			-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 3
			<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
		<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 4 | Index: 3
		-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efda0 | Begin: 0 | Index: 0
		<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 19 | Stack size: 0
		-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
			-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 4
				Found children || Index 5 | Own Index: 5 | Father Index: 4 | Own Priority 0 | Children: 2 | Depth: 3
				Found children || Index 8 | Own Index: 8 | Father Index: 4 | Own Priority 1 | Children: 2 | Depth: 3
			<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
		<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Index: 4
		-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efda0 | Begin: 0 | Index: 0
		<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 19 | Stack size: 0
		-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
			-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 5
				Found children || Index 6 | Own Index: 6 | Father Index: 5 | Own Priority 0 | Children: 0 | Depth: 4
				Found children || Index 7 | Own Index: 7 | Father Index: 5 | Own Priority 1 | Children: 0 | Depth: 4
			<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
		<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 6 | Index: 5
		-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efda0 | Begin: 0 | Index: 0
		<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 19 | Stack size: 0
		-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
			-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 6
			<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
		<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 7 | Index: 6
		-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efda0 | Begin: 0 | Index: 0
		<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 19 | Stack size: 0
		-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
			-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 7
			<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
		<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 8 | Index: 7
		-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efda0 | Begin: 0 | Index: 0
		<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 19 | Stack size: 0
		-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
			-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 8
				Found children || Index 9 | Own Index: 9 | Father Index: 8 | Own Priority 0 | Children: 0 | Depth: 4
				Found children || Index 10 | Own Index: 10 | Father Index: 8 | Own Priority 1 | Children: 2 | Depth: 4
			<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
		<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 9 | Index: 8
		-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efda0 | Begin: 0 | Index: 0
		<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 19 | Stack size: 0
		-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
			-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 9
			<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
		<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 10 | Index: 9
		-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efda0 | Begin: 0 | Index: 0
		<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 19 | Stack size: 0
		-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
			-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 10
				Found children || Index 11 | Own Index: 11 | Father Index: 10 | Own Priority 0 | Children: 2 | Depth: 5
				Found children || Index 18 | Own Index: 18 | Father Index: 10 | Own Priority 1 | Children: 0 | Depth: 5
			<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
		<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 11 | Index: 10
		-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efda0 | Begin: 0 | Index: 0
		<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 19 | Stack size: 0
		-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
			-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 11
				Found children || Index 12 | Own Index: 12 | Father Index: 11 | Own Priority 0 | Children: 0 | Depth: 6
				Found children || Index 13 | Own Index: 13 | Father Index: 11 | Own Priority 1 | Children: 2 | Depth: 6
			<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
		<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 12 | Index: 11
		-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efda0 | Begin: 0 | Index: 0
		<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 19 | Stack size: 0
		-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
			-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 12
			<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
		<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 13 | Index: 12
		-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efda0 | Begin: 0 | Index: 0
		<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 19 | Stack size: 0
		-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
			-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 13
				Found children || Index 14 | Own Index: 14 | Father Index: 13 | Own Priority 0 | Children: 0 | Depth: 7
				Found children || Index 15 | Own Index: 15 | Father Index: 13 | Own Priority 1 | Children: 2 | Depth: 7
			<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
		<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 14 | Index: 13
		-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efda0 | Begin: 0 | Index: 0
		<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 19 | Stack size: 0
		-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
			-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 14
			<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
		<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Index: 14
		-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efda0 | Begin: 0 | Index: 0
		<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 19 | Stack size: 0
		-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
			-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 15
				Found children || Index 16 | Own Index: 16 | Father Index: 15 | Own Priority 0 | Children: 0 | Depth: 8
				Found children || Index 17 | Own Index: 17 | Father Index: 15 | Own Priority 1 | Children: 0 | Depth: 8
			<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
		<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 16 | Index: 15
		-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efda0 | Begin: 0 | Index: 0
		<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 19 | Stack size: 0
		-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
			-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 16
			<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
		<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 17 | Index: 16
		-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efda0 | Begin: 0 | Index: 0
		<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 19 | Stack size: 0
		-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
			-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 17
			<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
		<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 18 | Index: 17
		-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efda0 | Begin: 0 | Index: 0
		<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 19 | Stack size: 0
		-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
			-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 18
			<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
		<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 19 | Index: 18
		-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efda0 | Begin: 0 | Index: 0
		<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 19 | Stack size: 0
		-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efbc4 | Begin: 1 | Index: 0
		<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 0 | Stack size: 1
		-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efe00 | Begin: 0 | Index: 0
		<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 18 | Stack size: 0
		-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
			-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 0
				Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 0 | Depth: 1
				Found children || Index 2 | Own Index: 2 | Father Index: 0 | Own Priority 1 | Children: 2 | Depth: 1
			<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
		<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 1 | Index: 0
		-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efe00 | Begin: 0 | Index: 0
		<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 18 | Stack size: 0
		-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
			-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 1
			<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
		<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 2 | Index: 1
		-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efe00 | Begin: 0 | Index: 0
		<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 18 | Stack size: 0
		-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
			-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 2
				Found children || Index 3 | Own Index: 3 | Father Index: 2 | Own Priority 0 | Children: 0 | Depth: 2
				Found children || Index 4 | Own Index: 4 | Father Index: 2 | Own Priority 1 | Children: 2 | Depth: 2
			<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
		<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 3 | Index: 2
		-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efe00 | Begin: 0 | Index: 0
		<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 18 | Stack size: 0
		-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
			-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 3
			<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
		<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 4 | Index: 3
		-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efe00 | Begin: 0 | Index: 0
		<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 18 | Stack size: 0
		-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
			-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 4
				Found children || Index 5 | Own Index: 5 | Father Index: 4 | Own Priority 0 | Children: 2 | Depth: 3
				Found children || Index 6 | Own Index: 6 | Father Index: 4 | Own Priority 1 | Children: 3 | Depth: 3
			<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
		<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 5 | Index: 4
		-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efe00 | Begin: 0 | Index: 0
		<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 18 | Stack size: 0
		-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
			-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 5
				Found children || Index 7 | Own Index: 7 | Father Index: 5 | Own Priority 0 | Children: 0 | Depth: 4
				Found children || Index 8 | Own Index: 8 | Father Index: 5 | Own Priority 1 | Children: 0 | Depth: 4
			<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 2 | 2 children
		<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 6 | Index: 5
		-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efe00 | Begin: 0 | Index: 0
		<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 18 | Stack size: 0
		-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
			-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 7
			<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
		<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 7 | Index: 7
		-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efe00 | Begin: 0 | Index: 0
		<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 18 | Stack size: 0
		-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
			-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 8
			<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
		<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 8 | Index: 8
		-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efe00 | Begin: 0 | Index: 0
		<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 18 | Stack size: 0
		-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
			-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 6
				Found children || Index 9 | Own Index: 9 | Father Index: 6 | Own Priority 0 | Children: 0 | Depth: 4
				Found children || Index 10 | Own Index: 10 | Father Index: 6 | Own Priority 1 | Children: 3 | Depth: 4
				Found children || Index 15 | Own Index: 15 | Father Index: 6 | Own Priority 2 | Children: 0 | Depth: 4
			<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 3 | 3 children
		<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 9 | Index: 6
		-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efe00 | Begin: 0 | Index: 0
		<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 18 | Stack size: 0
		-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
			-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 9
			<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
		<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 10 | Index: 9
		-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efe00 | Begin: 0 | Index: 0
		<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 18 | Stack size: 0
		-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
			-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 10
				Found children || Index 11 | Own Index: 11 | Father Index: 10 | Own Priority 0 | Children: 3 | Depth: 5
				Found children || Index 12 | Own Index: 12 | Father Index: 10 | Own Priority 1 | Children: 0 | Depth: 5
				Found children || Index 16 | Own Index: 16 | Father Index: 10 | Own Priority 2 | Children: 0 | Depth: 5
			<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 3 | 3 children
		<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 11 | Index: 10
		-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efe00 | Begin: 0 | Index: 0
		<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 18 | Stack size: 0
		-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
			-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 11
				Found children || Index 13 | Own Index: 13 | Father Index: 11 | Own Priority 0 | Children: 0 | Depth: 6
				Found children || Index 14 | Own Index: 14 | Father Index: 11 | Own Priority 1 | Children: 0 | Depth: 6
				Found children || Index 17 | Own Index: 17 | Father Index: 11 | Own Priority 2 | Children: 0 | Depth: 6
			<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 3 | 3 children
		<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 12 | Index: 11
		-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efe00 | Begin: 0 | Index: 0
		<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 18 | Stack size: 0
		-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
			-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 13
			<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
		<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 13 | Index: 13
		-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efe00 | Begin: 0 | Index: 0
		<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 18 | Stack size: 0
		-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
			-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 14
			<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
		<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 14 | Index: 14
		-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efe00 | Begin: 0 | Index: 0
		<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 18 | Stack size: 0
		-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
			-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 17
			<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
		<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 15 | Index: 17
		-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efe00 | Begin: 0 | Index: 0
		<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 18 | Stack size: 0
		-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
			-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 12
			<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
		<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 16 | Index: 12
		-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efe00 | Begin: 0 | Index: 0
		<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 18 | Stack size: 0
		-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
			-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 16
			<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
		<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 17 | Index: 16
		-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efe00 | Begin: 0 | Index: 0
		<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 18 | Stack size: 0
		-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" |
			-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Father: 15
			<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<unsigned int>&) [with Payload = User::Equation::Token; size_t = unsigned int]" | Found 0 | 0 children
		<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 18 | Index: 15
		-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Parent tree: 007efe00 | Begin: 0 | Index: 0
		<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation::Token>::Node; Payload = User::Equation::Token; size_t = unsigned int]" | Count nodes: 18 | Stack size: 0
		Tree Parsed   | 	> =<	>+Y<	> +<	>+1<	> +<	> *<	>+3<	>+X<	> +<	>+2<	> +<	> *<	>+5<	> +<	>+sephiroth<	> +<	>+100<	>+101<	>+4<
		Tree Expected | 	> =<	>+Y<	> +<	>+1<	> *<	> *<	>+3<	>+X<	> +<	>+2<	> +<	> +<	>+5<	>+sephiroth<	>+101<	> +<	>++<	>+5<
		-->> "User::Tree<Payload>::~Tree() [with Payload = User::Equation::Token]" | This: 007efc40
		<<-- "User::Tree<Payload>::~Tree() [with Payload = User::Equation::Token]" |
		-->> "User::Tree<Payload>::~Tree() [with Payload = User::Equation::Token]" | This: 007efbf4
		<<-- "User::Tree<Payload>::~Tree() [with Payload = User::Equation::Token]" |
	<<-- "int unit_test_parse_token_array()" | Failed test patterns: 1
	-->> "User::Equation::~Equation()" | This: 007efd08
	<<-- "User::Equation::~Equation()" |
	-->> "User::Tree<Payload>::~Tree() [with Payload = User::Equation::Token]" | This: 007efd18
	<<-- "User::Tree<Payload>::~Tree() [with Payload = User::Equation::Token]" |
	Failed test patterns: 1
<<-- "bool test_bench()" |
<<-- "int main()" |

Debug has Ended!
