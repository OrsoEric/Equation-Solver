Start Debug!
-->> "int main()" |
	OrangeBot Projects
	-->> "bool test_bench()" |
		-->> "int unit_test_parse_token_array()" | in: 0

			-->> "User::Tree<Payload>::Tree() [with Payload = User::Equation_parser::_Token]" | This: 00000000006afa80
				-->> "bool User::Tree<Payload>::init_class_vars(Payload) [with Payload = User::Equation_parser::_Token]" |
				<<-- "bool User::Tree<Payload>::init_class_vars(Payload) [with Payload = User::Equation_parser::_Token]" |
			<<-- "User::Tree<Payload>::Tree() [with Payload = User::Equation_parser::_Token]" |
			-->> "User::Equation_parser::Equation_parser()" | This: 00000000006afa60
				-->> "bool User::Equation_parser::init_class_vars()" |
				<<-- "bool User::Equation_parser::init_class_vars()" |
			<<-- "User::Equation_parser::Equation_parser()" |
			Number of test patterns 8			PATTERN0
			-->> "bool User::Equation_parser::parse(std::__cxx11::string)" | Parse:  | Size: 0
				-->> "static bool User::Equation_parser::equation_to_token_array(std::__cxx11::string, std::vector<std::__cxx11::basic_string<char> >&, std::vector<User::Equation_parser::_Token>&)" | Parse:  | Size: 0
				<<-- "static bool User::Equation_parser::equation_to_token_array(std::__cxx11::string, std::vector<std::__cxx11::basic_string<char> >&, std::vector<User::Equation_parser::_Token>&)" | ERR:940 | Bad input string
			<<-- "bool User::Equation_parser::parse(std::__cxx11::string)" | ERR3 | failed to parse an equation into an array of string tokens...

			ERR: FAIL test pattern: 0
			PATTERN1
			-->> "bool User::Equation_parser::parse(std::__cxx11::string)" | Parse: (1 | Size: 2
				-->> "static bool User::Equation_parser::equation_to_token_array(std::__cxx11::string, std::vector<std::__cxx11::basic_string<char> >&, std::vector<User::Equation_parser::_Token>&)" | Parse: (1 | Size: 2
					SEEK_NEXT_TOKEN | Decode: >>(<<
					-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >>(<<
					<<-- "static bool User::Equation_parser::is_symbol(char)" | N
					-->> "static bool User::Equation_parser::is_operator(char)" | Digit: >>(<<
					<<-- "static bool User::Equation_parser::is_operator(char)" | N
					Open detected: >>(<< | Token: (
					Token fully decoded:  ( | type: 3 | size: 1
					Tokens decoded: 1
					SEEK_NEXT_TOKEN | Decode: >>1<<
					Token fully decoded:  1 | type: 0 | size: 1
					Tokens decoded: 2
				<<-- "static bool User::Equation_parser::equation_to_token_array(std::__cxx11::string, std::vector<std::__cxx11::basic_string<char> >&, std::vector<User::Equation_parser::_Token>&)" | ERR1228 | Unbalanced brackets | Open 1 | Close 0
			<<-- "bool User::Equation_parser::parse(std::__cxx11::string)" | ERR3 | failed to parse an equation into an array of string tokens...

			ERR: Pattern: 1 | TOKEN COUNT expected 0 | measured 2
			PATTERN2
			-->> "bool User::Equation_parser::parse(std::__cxx11::string)" | Parse: ((1) | Size: 4
				-->> "static bool User::Equation_parser::equation_to_token_array(std::__cxx11::string, std::vector<std::__cxx11::basic_string<char> >&, std::vector<User::Equation_parser::_Token>&)" | Parse: ((1) | Size: 4
					SEEK_NEXT_TOKEN | Decode: >>(<<
					-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >>(<<
					<<-- "static bool User::Equation_parser::is_symbol(char)" | N
					-->> "static bool User::Equation_parser::is_operator(char)" | Digit: >>(<<
					<<-- "static bool User::Equation_parser::is_operator(char)" | N
					Open detected: >>(<< | Token: (
					Token fully decoded:  ( | type: 3 | size: 1
					Tokens decoded: 1
					SEEK_NEXT_TOKEN | Decode: >>(<<
					-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >>(<<
					<<-- "static bool User::Equation_parser::is_symbol(char)" | N
					-->> "static bool User::Equation_parser::is_operator(char)" | Digit: >>(<<
					<<-- "static bool User::Equation_parser::is_operator(char)" | N
					Open detected: >>(<< | Token: (
					Token fully decoded:  ( | type: 3 | size: 1
					Tokens decoded: 2
					SEEK_NEXT_TOKEN | Decode: >>1<<
					TOKEN_NUMBER | Decode: >>)<<
					Token fully decoded:  1 | type: 0 | size: 1
					Tokens decoded: 3
					SEEK_NEXT_TOKEN | Decode: >>)<<
					-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >>)<<
					<<-- "static bool User::Equation_parser::is_symbol(char)" | N
					-->> "static bool User::Equation_parser::is_operator(char)" | Digit: >>)<<
					<<-- "static bool User::Equation_parser::is_operator(char)" | N
					Close detected: >>)<< | Token: )
					Token fully decoded:  ) | type: 4 | size: 1
					Tokens decoded: 4
					-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >> <<
					<<-- "static bool User::Equation_parser::is_symbol(char)" | N
					-->> "static bool User::Equation_parser::is_operator(char)" | Digit: >> <<
					<<-- "static bool User::Equation_parser::is_operator(char)" | N
					ERR1085: Invalid Digit >> <<
				<<-- "static bool User::Equation_parser::equation_to_token_array(std::__cxx11::string, std::vector<std::__cxx11::basic_string<char> >&, std::vector<User::Equation_parser::_Token>&)" | ERR1228 | Unbalanced brackets | Open 2 | Close 1
			<<-- "bool User::Equation_parser::parse(std::__cxx11::string)" | ERR3 | failed to parse an equation into an array of string tokens...

			ERR: Pattern: 2 | TOKEN COUNT expected 0 | measured 4
			PATTERN3
			-->> "bool User::Equation_parser::parse(std::__cxx11::string)" | Parse: (1)) | Size: 4
				-->> "static bool User::Equation_parser::equation_to_token_array(std::__cxx11::string, std::vector<std::__cxx11::basic_string<char> >&, std::vector<User::Equation_parser::_Token>&)" | Parse: (1)) | Size: 4
					SEEK_NEXT_TOKEN | Decode: >>(<<
					-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >>(<<
					<<-- "static bool User::Equation_parser::is_symbol(char)" | N
					-->> "static bool User::Equation_parser::is_operator(char)" | Digit: >>(<<
					<<-- "static bool User::Equation_parser::is_operator(char)" | N
					Open detected: >>(<< | Token: (
					Token fully decoded:  ( | type: 3 | size: 1
					Tokens decoded: 1
					SEEK_NEXT_TOKEN | Decode: >>1<<
					TOKEN_NUMBER | Decode: >>)<<
					Token fully decoded:  1 | type: 0 | size: 1
					Tokens decoded: 2
					SEEK_NEXT_TOKEN | Decode: >>)<<
					-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >>)<<
					<<-- "static bool User::Equation_parser::is_symbol(char)" | N
					-->> "static bool User::Equation_parser::is_operator(char)" | Digit: >>)<<
					<<-- "static bool User::Equation_parser::is_operator(char)" | N
					Close detected: >>)<< | Token: )
					Token fully decoded:  ) | type: 4 | size: 1
					Tokens decoded: 3
					SEEK_NEXT_TOKEN | Decode: >>)<<
					-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >>)<<
					<<-- "static bool User::Equation_parser::is_symbol(char)" | N
					-->> "static bool User::Equation_parser::is_operator(char)" | Digit: >>)<<
					<<-- "static bool User::Equation_parser::is_operator(char)" | N
					Close detected: >>)<< | Token: )
					Token fully decoded:  ) | type: 4 | size: 1
					Tokens decoded: 4
					-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >> <<
					<<-- "static bool User::Equation_parser::is_symbol(char)" | N
					-->> "static bool User::Equation_parser::is_operator(char)" | Digit: >> <<
					<<-- "static bool User::Equation_parser::is_operator(char)" | N
					ERR1085: Invalid Digit >> <<
				<<-- "static bool User::Equation_parser::equation_to_token_array(std::__cxx11::string, std::vector<std::__cxx11::basic_string<char> >&, std::vector<User::Equation_parser::_Token>&)" | ERR1228 | Unbalanced brackets | Open 1 | Close 2
			<<-- "bool User::Equation_parser::parse(std::__cxx11::string)" | ERR3 | failed to parse an equation into an array of string tokens...

			ERR: Pattern: 3 | TOKEN COUNT expected 0 | measured 4
			PATTERN4
			-->> "bool User::Equation_parser::parse(std::__cxx11::string)" | Parse: ((((((1)))))) | Size: 13
				-->> "static bool User::Equation_parser::equation_to_token_array(std::__cxx11::string, std::vector<std::__cxx11::basic_string<char> >&, std::vector<User::Equation_parser::_Token>&)" | Parse: ((((((1)))))) | Size: 13
					SEEK_NEXT_TOKEN | Decode: >>(<<
					-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >>(<<
					<<-- "static bool User::Equation_parser::is_symbol(char)" | N
					-->> "static bool User::Equation_parser::is_operator(char)" | Digit: >>(<<
					<<-- "static bool User::Equation_parser::is_operator(char)" | N
					Open detected: >>(<< | Token: (
					Token fully decoded:  ( | type: 3 | size: 1
					Tokens decoded: 1
					SEEK_NEXT_TOKEN | Decode: >>(<<
					-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >>(<<
					<<-- "static bool User::Equation_parser::is_symbol(char)" | N
					-->> "static bool User::Equation_parser::is_operator(char)" | Digit: >>(<<
					<<-- "static bool User::Equation_parser::is_operator(char)" | N
					Open detected: >>(<< | Token: (
					Token fully decoded:  ( | type: 3 | size: 1
					Tokens decoded: 2
					SEEK_NEXT_TOKEN | Decode: >>(<<
					-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >>(<<
					<<-- "static bool User::Equation_parser::is_symbol(char)" | N
					-->> "static bool User::Equation_parser::is_operator(char)" | Digit: >>(<<
					<<-- "static bool User::Equation_parser::is_operator(char)" | N
					Open detected: >>(<< | Token: (
					Token fully decoded:  ( | type: 3 | size: 1
					Tokens decoded: 3
					SEEK_NEXT_TOKEN | Decode: >>(<<
					-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >>(<<
					<<-- "static bool User::Equation_parser::is_symbol(char)" | N
					-->> "static bool User::Equation_parser::is_operator(char)" | Digit: >>(<<
					<<-- "static bool User::Equation_parser::is_operator(char)" | N
					Open detected: >>(<< | Token: (
					Token fully decoded:  ( | type: 3 | size: 1
					Tokens decoded: 4
					SEEK_NEXT_TOKEN | Decode: >>(<<
					-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >>(<<
					<<-- "static bool User::Equation_parser::is_symbol(char)" | N
					-->> "static bool User::Equation_parser::is_operator(char)" | Digit: >>(<<
					<<-- "static bool User::Equation_parser::is_operator(char)" | N
					Open detected: >>(<< | Token: (
					Token fully decoded:  ( | type: 3 | size: 1
					Tokens decoded: 5
					SEEK_NEXT_TOKEN | Decode: >>(<<
					-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >>(<<
					<<-- "static bool User::Equation_parser::is_symbol(char)" | N
					-->> "static bool User::Equation_parser::is_operator(char)" | Digit: >>(<<
					<<-- "static bool User::Equation_parser::is_operator(char)" | N
					Open detected: >>(<< | Token: (
					Token fully decoded:  ( | type: 3 | size: 1
					Tokens decoded: 6
					SEEK_NEXT_TOKEN | Decode: >>1<<
					TOKEN_NUMBER | Decode: >>)<<
					Token fully decoded:  1 | type: 0 | size: 1
					Tokens decoded: 7
					SEEK_NEXT_TOKEN | Decode: >>)<<
					-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >>)<<
					<<-- "static bool User::Equation_parser::is_symbol(char)" | N
					-->> "static bool User::Equation_parser::is_operator(char)" | Digit: >>)<<
					<<-- "static bool User::Equation_parser::is_operator(char)" | N
					Close detected: >>)<< | Token: )
					Token fully decoded:  ) | type: 4 | size: 1
					Tokens decoded: 8
					SEEK_NEXT_TOKEN | Decode: >>)<<
					-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >>)<<
					<<-- "static bool User::Equation_parser::is_symbol(char)" | N
					-->> "static bool User::Equation_parser::is_operator(char)" | Digit: >>)<<
					<<-- "static bool User::Equation_parser::is_operator(char)" | N
					Close detected: >>)<< | Token: )
					Token fully decoded:  ) | type: 4 | size: 1
					Tokens decoded: 9
					SEEK_NEXT_TOKEN | Decode: >>)<<
					-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >>)<<
					<<-- "static bool User::Equation_parser::is_symbol(char)" | N
					-->> "static bool User::Equation_parser::is_operator(char)" | Digit: >>)<<
					<<-- "static bool User::Equation_parser::is_operator(char)" | N
					Close detected: >>)<< | Token: )
					Token fully decoded:  ) | type: 4 | size: 1
					Tokens decoded: 10
					SEEK_NEXT_TOKEN | Decode: >>)<<
					-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >>)<<
					<<-- "static bool User::Equation_parser::is_symbol(char)" | N
					-->> "static bool User::Equation_parser::is_operator(char)" | Digit: >>)<<
					<<-- "static bool User::Equation_parser::is_operator(char)" | N
					Close detected: >>)<< | Token: )
					Token fully decoded:  ) | type: 4 | size: 1
					Tokens decoded: 11
					SEEK_NEXT_TOKEN | Decode: >>)<<
					-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >>)<<
					<<-- "static bool User::Equation_parser::is_symbol(char)" | N
					-->> "static bool User::Equation_parser::is_operator(char)" | Digit: >>)<<
					<<-- "static bool User::Equation_parser::is_operator(char)" | N
					Close detected: >>)<< | Token: )
					Token fully decoded:  ) | type: 4 | size: 1
					Tokens decoded: 12
					SEEK_NEXT_TOKEN | Decode: >>)<<
					-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >>)<<
					<<-- "static bool User::Equation_parser::is_symbol(char)" | N
					-->> "static bool User::Equation_parser::is_operator(char)" | Digit: >>)<<
					<<-- "static bool User::Equation_parser::is_operator(char)" | N
					Close detected: >>)<< | Token: )
					Token fully decoded:  ) | type: 4 | size: 1
					Tokens decoded: 13
					-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >> <<
					<<-- "static bool User::Equation_parser::is_symbol(char)" | N
					-->> "static bool User::Equation_parser::is_operator(char)" | Digit: >> <<
					<<-- "static bool User::Equation_parser::is_operator(char)" | N
					ERR1085: Invalid Digit >> <<
					Equations decoded into 13 tokens
					Token: >>(<< | Type: 3 | Size: 1
					Token: >>(<< | Type: 3 | Size: 1
					Token: >>(<< | Type: 3 | Size: 1
					Token: >>(<< | Type: 3 | Size: 1
					Token: >>(<< | Type: 3 | Size: 1
					Token: >>(<< | Type: 3 | Size: 1
					Token: >>1<< | Type: 0 | Size: 1
					Token: >>)<< | Type: 4 | Size: 1
					Token: >>)<< | Type: 4 | Size: 1
					Token: >>)<< | Type: 4 | Size: 1
					Token: >>)<< | Type: 4 | Size: 1
					Token: >>)<< | Type: 4 | Size: 1
					Token: >>)<< | Type: 4 | Size: 1
				<<-- "static bool User::Equation_parser::equation_to_token_array(std::__cxx11::string, std::vector<std::__cxx11::basic_string<char> >&, std::vector<User::Equation_parser::_Token>&)" | Decoded 13 tokens
				-->> "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::_Token>&, User::Tree<User::Equation_parser::_Token>&, size_t)" | Token Array Size: 13 | Father 0
					-->> "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::_Token>&, std::vector<User::Equation_parser::_Token>::iterator&)" | Tokens: 13
						Open | Priority: 1
						Open | Priority: 2
						Open | Priority: 3
						Open | Priority: 4
						Open | Priority: 5
						Open | Priority: 6
						Token: 1 | Priority: 6
						Close| Priority: 6
						Close| Priority: 5
						Close| Priority: 4
						Close| Priority: 3
						Close| Priority: 2
						Close| Priority: 1
						-->> "std::ostream& User::operator<<(std::ostream&, std::vector<User::Equation_parser::_Token>&)" |
							Tokens   | (| (| (| (| (| (| 1| )| )| )| )| )| )
							Priority | 1| 2| 3| 4| 5| 6| 6| 6| 5| 4| 3| 2| 1
						<<-- "std::ostream& User::operator<<(std::ostream&, std::vector<User::Equation_parser::_Token>&)" |
						Delete Open 0 | Priority: 1 | Min Priority: 6 
						Delete Open 0 | Priority: 2 | Min Priority: 6 
						Delete Open 0 | Priority: 3 | Min Priority: 6 
						Delete Open 0 | Priority: 4 | Min Priority: 6 
						Delete Open 0 | Priority: 5 | Min Priority: 6 
						Delete Open 0 | Priority: 6 | Min Priority: 6 
						Delete Close 1 | Priority: 6 | Min Priority: 6 
						Delete Close 1 | Priority: 5 | Min Priority: 6 
						Delete Close 1 | Priority: 4 | Min Priority: 6 
						Delete Close 1 | Priority: 3 | Min Priority: 6 
						Delete Close 1 | Priority: 2 | Min Priority: 6 
						Delete Close 1 | Priority: 1 | Min Priority: 6 
						Deleted redundant priority tokens | Tokens: 1
						-->> "std::ostream& User::operator<<(std::ostream&, std::vector<User::Equation_parser::_Token>&)" |
							Tokens   | 1
							Priority | 0
						<<-- "std::ostream& User::operator<<(std::ostream&, std::vector<User::Equation_parser::_Token>&)" |
					<<-- "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::_Token>&, std::vector<User::Equation_parser::_Token>::iterator&)" | Tokens: 1 | Highest Priority Token: <1> | 0 5
					Core Token: >1< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 5
					LHS Tokens: 0 | RHS Tokens: 0
					-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
					<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father Index: 0 | Own Index: 1 | Nodes under Father: 2
					-->> "bool User::Tree<Payload>::show() [with Payload = User::Equation_parser::_Token]" | Nodes: 2
					<<-- "bool User::Tree<Payload>::show() [with Payload = User::Equation_parser::_Token]" |
					-->> "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Index: 0
						-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af460 | Begin: 1 | Index: 0
						<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 0 | Stack size: 1
						-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af4c0 | Begin: 0 | Index: 0
						<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 2 | Stack size: 0
						-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
							-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 0
								Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 0 | Depth: 1
							<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 1 | 1 children
						<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 1 | Index: 0
						-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af4c0 | Begin: 0 | Index: 0
						<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 2 | Stack size: 0
						-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
							-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 1
							<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 0 | 0 children
						<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 2 | Index: 1
						-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af4c0 | Begin: 0 | Index: 0
						<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 2 | Stack size: 0
					<<-- "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
				<<-- "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::_Token>&, User::Tree<User::Equation_parser::_Token>&, size_t)" |
				-->> "bool User::Tree<Payload>::show() [with Payload = User::Equation_parser::_Token]" | Nodes: 2
				<<-- "bool User::Tree<Payload>::show() [with Payload = User::Equation_parser::_Token]" |
				-->> "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Index: 0
					-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af560 | Begin: 1 | Index: 0
					<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 0 | Stack size: 1
					-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af5c0 | Begin: 0 | Index: 0
					<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 2 | Stack size: 0
					-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
						-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 0
							Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 0 | Depth: 1
						<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 1 | 1 children
					<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 1 | Index: 0
					-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af5c0 | Begin: 0 | Index: 0
					<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 2 | Stack size: 0
					-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
						-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 1
						<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 0 | 0 children
					<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 2 | Index: 1
					-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af5c0 | Begin: 0 | Index: 0
					<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 2 | Stack size: 0
				<<-- "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
				-->> "bool User::Tree<Payload>::show() [with Payload = User::Equation_parser::_Token]" | Nodes: 2
				<<-- "bool User::Tree<Payload>::show() [with Payload = User::Equation_parser::_Token]" |
				-->> "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Index: 0
					-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af560 | Begin: 1 | Index: 0
					<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 0 | Stack size: 1
					-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af5c0 | Begin: 0 | Index: 0
					<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 2 | Stack size: 0
					-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
						-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 0
							Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 0 | Depth: 1
						<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 1 | 1 children
					<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 1 | Index: 0
					-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af5c0 | Begin: 0 | Index: 0
					<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 2 | Stack size: 0
					-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
						-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 1
						<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 0 | 0 children
					<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 2 | Index: 1
					-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af5c0 | Begin: 0 | Index: 0
					<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 2 | Stack size: 0
				<<-- "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
			<<-- "bool User::Equation_parser::parse(std::__cxx11::string)" | Token array size: 13 | Token tree size: 2
			ERR: Pattern: 4 | TOKEN COUNT expected 1 | measured 13
			PATTERN5
			-->> "bool User::Equation_parser::parse(std::__cxx11::string)" | Parse: 1=1 | Size: 3
				-->> "static bool User::Equation_parser::equation_to_token_array(std::__cxx11::string, std::vector<std::__cxx11::basic_string<char> >&, std::vector<User::Equation_parser::_Token>&)" | Parse: 1=1 | Size: 3
					SEEK_NEXT_TOKEN | Decode: >>1<<
					TOKEN_NUMBER | Decode: >>=<<
					Token fully decoded:  1 | type: 0 | size: 1
					Tokens decoded: 1
					SEEK_NEXT_TOKEN | Decode: >>=<<
					-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >>=<<
					<<-- "static bool User::Equation_parser::is_symbol(char)" | N
					-->> "static bool User::Equation_parser::is_operator(char)" | Digit: >>=<<
					<<-- "static bool User::Equation_parser::is_operator(char)" | Y
					Operator detected: >>=<< | Token: =
					Token fully decoded:  = | type: 2 | size: 1
					Tokens decoded: 2
					SEEK_NEXT_TOKEN | Decode: >>1<<
					Token fully decoded:  1 | type: 0 | size: 1
					Tokens decoded: 3
					Equations decoded into 3 tokens
					Token: >>1<< | Type: 0 | Size: 1
					Token: >>=<< | Type: 2 | Size: 1
					Token: >>1<< | Type: 0 | Size: 1
				<<-- "static bool User::Equation_parser::equation_to_token_array(std::__cxx11::string, std::vector<std::__cxx11::basic_string<char> >&, std::vector<User::Equation_parser::_Token>&)" | Decoded 3 tokens
				-->> "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::_Token>&, User::Tree<User::Equation_parser::_Token>&, size_t)" | Token Array Size: 3 | Father 0
					-->> "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::_Token>&, std::vector<User::Equation_parser::_Token>::iterator&)" | Tokens: 3
						Token: 1 | Priority: 0
						Token: = | Priority: 0
						Token: 1 | Priority: 0
						-->> "std::ostream& User::operator<<(std::ostream&, std::vector<User::Equation_parser::_Token>&)" |
							Tokens   | 1| =| 1
							Priority | 0| 0| 0
						<<-- "std::ostream& User::operator<<(std::ostream&, std::vector<User::Equation_parser::_Token>&)" |
					<<-- "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::_Token>&, std::vector<User::Equation_parser::_Token>::iterator&)" | Tokens: 3 | Highest Priority Token: <=> | 0 0
					Core Token: >=< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 0
					LHS Tokens: 1 | RHS Tokens: 1
					-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Object: 00000000006afa80, Index: 0
					<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
					-->> "bool User::Tree<Payload>::show() [with Payload = User::Equation_parser::_Token]" | Nodes: 2
					<<-- "bool User::Tree<Payload>::show() [with Payload = User::Equation_parser::_Token]" |
					-->> "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Index: 0
						-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af460 | Begin: 1 | Index: 0
						<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 0 | Stack size: 1
						-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af4c0 | Begin: 0 | Index: 0
						<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 2 | Stack size: 0
						-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
							-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 0
								Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 0 | Depth: 1
							<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 1 | 1 children
						<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 1 | Index: 0
						-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af4c0 | Begin: 0 | Index: 0
						<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 2 | Stack size: 0
						-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
							-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 1
							<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 0 | 0 children
						<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 2 | Index: 1
						-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af4c0 | Begin: 0 | Index: 0
						<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 2 | Stack size: 0
					<<-- "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
					-->> "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::_Token>&, User::Tree<User::Equation_parser::_Token>&, size_t)" | Token Array Size: 1 | Father 0
						-->> "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::_Token>&, std::vector<User::Equation_parser::_Token>::iterator&)" | Tokens: 1
							Token: 1 | Priority: 0
							-->> "std::ostream& User::operator<<(std::ostream&, std::vector<User::Equation_parser::_Token>&)" |
								Tokens   | 1
								Priority | 0
							<<-- "std::ostream& User::operator<<(std::ostream&, std::vector<User::Equation_parser::_Token>&)" |
						<<-- "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::_Token>&, std::vector<User::Equation_parser::_Token>::iterator&)" | Tokens: 1 | Highest Priority Token: <1> | 0 5
						Core Token: >1< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 5
						LHS Tokens: 0 | RHS Tokens: 0
						-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
						<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father Index: 0 | Own Index: 2 | Nodes under Father: 3
						-->> "bool User::Tree<Payload>::show() [with Payload = User::Equation_parser::_Token]" | Nodes: 3
						<<-- "bool User::Tree<Payload>::show() [with Payload = User::Equation_parser::_Token]" |
						-->> "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Index: 0
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af360 | Begin: 1 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 0 | Stack size: 1
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af3c0 | Begin: 0 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 3 | Stack size: 0
							-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
								-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 0
									Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 0 | Depth: 1
									Found children || Index 2 | Own Index: 2 | Father Index: 0 | Own Priority 1 | Children: 0 | Depth: 1
								<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 2 | 2 children
							<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 1 | Index: 0
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af3c0 | Begin: 0 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 3 | Stack size: 0
							-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
								-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 1
								<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 0 | 0 children
							<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 2 | Index: 1
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af3c0 | Begin: 0 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 3 | Stack size: 0
							-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
								-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 2
								<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 0 | 0 children
							<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 3 | Index: 2
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af3c0 | Begin: 0 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 3 | Stack size: 0
						<<-- "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
					<<-- "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::_Token>&, User::Tree<User::Equation_parser::_Token>&, size_t)" |
					-->> "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::_Token>&, User::Tree<User::Equation_parser::_Token>&, size_t)" | Token Array Size: 1 | Father 0
						-->> "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::_Token>&, std::vector<User::Equation_parser::_Token>::iterator&)" | Tokens: 1
							Token: 1 | Priority: 0
							-->> "std::ostream& User::operator<<(std::ostream&, std::vector<User::Equation_parser::_Token>&)" |
								Tokens   | 1
								Priority | 0
							<<-- "std::ostream& User::operator<<(std::ostream&, std::vector<User::Equation_parser::_Token>&)" |
						<<-- "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::_Token>&, std::vector<User::Equation_parser::_Token>::iterator&)" | Tokens: 1 | Highest Priority Token: <1> | 0 5
						Core Token: >1< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 5
						LHS Tokens: 0 | RHS Tokens: 0
						-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
						<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father Index: 0 | Own Index: 3 | Nodes under Father: 4
						-->> "bool User::Tree<Payload>::show() [with Payload = User::Equation_parser::_Token]" | Nodes: 4
						<<-- "bool User::Tree<Payload>::show() [with Payload = User::Equation_parser::_Token]" |
						-->> "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Index: 0
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af360 | Begin: 1 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 0 | Stack size: 1
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af3c0 | Begin: 0 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 4 | Stack size: 0
							-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
								-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 0
									Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 0 | Depth: 1
									Found children || Index 2 | Own Index: 2 | Father Index: 0 | Own Priority 1 | Children: 0 | Depth: 1
									Found children || Index 3 | Own Index: 3 | Father Index: 0 | Own Priority 2 | Children: 0 | Depth: 1
								<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 3 | 3 children
							<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 1 | Index: 0
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af3c0 | Begin: 0 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 4 | Stack size: 0
							-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
								-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 1
								<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 0 | 0 children
							<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 2 | Index: 1
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af3c0 | Begin: 0 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 4 | Stack size: 0
							-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
								-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 2
								<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 0 | 0 children
							<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 3 | Index: 2
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af3c0 | Begin: 0 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 4 | Stack size: 0
							-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
								-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 3
								<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 0 | 0 children
							<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 4 | Index: 3
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af3c0 | Begin: 0 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 4 | Stack size: 0
						<<-- "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
					<<-- "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::_Token>&, User::Tree<User::Equation_parser::_Token>&, size_t)" |
				<<-- "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::_Token>&, User::Tree<User::Equation_parser::_Token>&, size_t)" |
				-->> "bool User::Tree<Payload>::show() [with Payload = User::Equation_parser::_Token]" | Nodes: 4
				<<-- "bool User::Tree<Payload>::show() [with Payload = User::Equation_parser::_Token]" |
				-->> "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Index: 0
					-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af560 | Begin: 1 | Index: 0
					<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 0 | Stack size: 1
					-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af5c0 | Begin: 0 | Index: 0
					<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 4 | Stack size: 0
					-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
						-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 0
							Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 0 | Depth: 1
							Found children || Index 2 | Own Index: 2 | Father Index: 0 | Own Priority 1 | Children: 0 | Depth: 1
							Found children || Index 3 | Own Index: 3 | Father Index: 0 | Own Priority 2 | Children: 0 | Depth: 1
						<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 3 | 3 children
					<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 1 | Index: 0
					-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af5c0 | Begin: 0 | Index: 0
					<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 4 | Stack size: 0
					-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
						-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 1
						<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 0 | 0 children
					<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 2 | Index: 1
					-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af5c0 | Begin: 0 | Index: 0
					<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 4 | Stack size: 0
					-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
						-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 2
						<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 0 | 0 children
					<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 3 | Index: 2
					-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af5c0 | Begin: 0 | Index: 0
					<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 4 | Stack size: 0
					-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
						-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 3
						<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 0 | 0 children
					<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 4 | Index: 3
					-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af5c0 | Begin: 0 | Index: 0
					<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 4 | Stack size: 0
				<<-- "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
				-->> "bool User::Tree<Payload>::show() [with Payload = User::Equation_parser::_Token]" | Nodes: 4
				<<-- "bool User::Tree<Payload>::show() [with Payload = User::Equation_parser::_Token]" |
				-->> "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Index: 0
					-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af560 | Begin: 1 | Index: 0
					<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 0 | Stack size: 1
					-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af5c0 | Begin: 0 | Index: 0
					<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 4 | Stack size: 0
					-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
						-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 0
							Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 0 | Depth: 1
							Found children || Index 2 | Own Index: 2 | Father Index: 0 | Own Priority 1 | Children: 0 | Depth: 1
							Found children || Index 3 | Own Index: 3 | Father Index: 0 | Own Priority 2 | Children: 0 | Depth: 1
						<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 3 | 3 children
					<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 1 | Index: 0
					-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af5c0 | Begin: 0 | Index: 0
					<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 4 | Stack size: 0
					-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
						-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 1
						<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 0 | 0 children
					<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 2 | Index: 1
					-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af5c0 | Begin: 0 | Index: 0
					<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 4 | Stack size: 0
					-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
						-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 2
						<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 0 | 0 children
					<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 3 | Index: 2
					-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af5c0 | Begin: 0 | Index: 0
					<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 4 | Stack size: 0
					-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
						-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 3
						<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 0 | 0 children
					<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 4 | Index: 3
					-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af5c0 | Begin: 0 | Index: 0
					<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 4 | Stack size: 0
				<<-- "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
			<<-- "bool User::Equation_parser::parse(std::__cxx11::string)" | Token array size: 3 | Token tree size: 4
			TOKEN0
			TOKEN1
			TOKEN2
			PATTERN6
			-->> "bool User::Equation_parser::parse(std::__cxx11::string)" | Parse: 5=2+3 | Size: 5
				-->> "static bool User::Equation_parser::equation_to_token_array(std::__cxx11::string, std::vector<std::__cxx11::basic_string<char> >&, std::vector<User::Equation_parser::_Token>&)" | Parse: 5=2+3 | Size: 5
					SEEK_NEXT_TOKEN | Decode: >>5<<
					TOKEN_NUMBER | Decode: >>=<<
					Token fully decoded:  5 | type: 0 | size: 1
					Tokens decoded: 1
					SEEK_NEXT_TOKEN | Decode: >>=<<
					-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >>=<<
					<<-- "static bool User::Equation_parser::is_symbol(char)" | N
					-->> "static bool User::Equation_parser::is_operator(char)" | Digit: >>=<<
					<<-- "static bool User::Equation_parser::is_operator(char)" | Y
					Operator detected: >>=<< | Token: =
					Token fully decoded:  = | type: 2 | size: 1
					Tokens decoded: 2
					SEEK_NEXT_TOKEN | Decode: >>2<<
					TOKEN_NUMBER | Decode: >>+<<
					Token fully decoded:  2 | type: 0 | size: 1
					Tokens decoded: 3
					SEEK_NEXT_TOKEN | Decode: >>+<<
					-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >>+<<
					<<-- "static bool User::Equation_parser::is_symbol(char)" | N
					-->> "static bool User::Equation_parser::is_operator(char)" | Digit: >>+<<
					<<-- "static bool User::Equation_parser::is_operator(char)" | Y
					Operator detected: >>+<< | Token: +
					Token fully decoded:  + | type: 2 | size: 1
					Tokens decoded: 4
					SEEK_NEXT_TOKEN | Decode: >>3<<
					Token fully decoded:  3 | type: 0 | size: 1
					Tokens decoded: 5
					Equations decoded into 5 tokens
					Token: >>5<< | Type: 0 | Size: 1
					Token: >>=<< | Type: 2 | Size: 1
					Token: >>2<< | Type: 0 | Size: 1
					Token: >>+<< | Type: 2 | Size: 1
					Token: >>3<< | Type: 0 | Size: 1
				<<-- "static bool User::Equation_parser::equation_to_token_array(std::__cxx11::string, std::vector<std::__cxx11::basic_string<char> >&, std::vector<User::Equation_parser::_Token>&)" | Decoded 5 tokens
				-->> "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::_Token>&, User::Tree<User::Equation_parser::_Token>&, size_t)" | Token Array Size: 5 | Father 0
					-->> "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::_Token>&, std::vector<User::Equation_parser::_Token>::iterator&)" | Tokens: 5
						Token: 5 | Priority: 0
						Token: = | Priority: 0
						Token: 2 | Priority: 0
						Token: + | Priority: 0
						Token: 3 | Priority: 0
						-->> "std::ostream& User::operator<<(std::ostream&, std::vector<User::Equation_parser::_Token>&)" |
							Tokens   | 5| =| 2| +| 3
							Priority | 0| 0| 0| 0| 0
						<<-- "std::ostream& User::operator<<(std::ostream&, std::vector<User::Equation_parser::_Token>&)" |
					<<-- "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::_Token>&, std::vector<User::Equation_parser::_Token>::iterator&)" | Tokens: 5 | Highest Priority Token: <=> | 0 0
					Core Token: >=< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 0
					LHS Tokens: 1 | RHS Tokens: 3
					-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Object: 00000000006afa80, Index: 0
					<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
					-->> "bool User::Tree<Payload>::show() [with Payload = User::Equation_parser::_Token]" | Nodes: 4
					<<-- "bool User::Tree<Payload>::show() [with Payload = User::Equation_parser::_Token]" |
					-->> "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Index: 0
						-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af460 | Begin: 1 | Index: 0
						<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 0 | Stack size: 1
						-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af4c0 | Begin: 0 | Index: 0
						<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 4 | Stack size: 0
						-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
							-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 0
								Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 0 | Depth: 1
								Found children || Index 2 | Own Index: 2 | Father Index: 0 | Own Priority 1 | Children: 0 | Depth: 1
								Found children || Index 3 | Own Index: 3 | Father Index: 0 | Own Priority 2 | Children: 0 | Depth: 1
							<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 3 | 3 children
						<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 1 | Index: 0
						-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af4c0 | Begin: 0 | Index: 0
						<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 4 | Stack size: 0
						-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
							-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 1
							<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 0 | 0 children
						<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 2 | Index: 1
						-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af4c0 | Begin: 0 | Index: 0
						<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 4 | Stack size: 0
						-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
							-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 2
							<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 0 | 0 children
						<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 3 | Index: 2
						-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af4c0 | Begin: 0 | Index: 0
						<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 4 | Stack size: 0
						-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
							-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 3
							<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 0 | 0 children
						<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 4 | Index: 3
						-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af4c0 | Begin: 0 | Index: 0
						<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 4 | Stack size: 0
					<<-- "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
					-->> "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::_Token>&, User::Tree<User::Equation_parser::_Token>&, size_t)" | Token Array Size: 1 | Father 0
						-->> "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::_Token>&, std::vector<User::Equation_parser::_Token>::iterator&)" | Tokens: 1
							Token: 5 | Priority: 0
							-->> "std::ostream& User::operator<<(std::ostream&, std::vector<User::Equation_parser::_Token>&)" |
								Tokens   | 5
								Priority | 0
							<<-- "std::ostream& User::operator<<(std::ostream&, std::vector<User::Equation_parser::_Token>&)" |
						<<-- "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::_Token>&, std::vector<User::Equation_parser::_Token>::iterator&)" | Tokens: 1 | Highest Priority Token: <5> | 0 5
						Core Token: >5< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 5
						LHS Tokens: 0 | RHS Tokens: 0
						-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
						<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father Index: 0 | Own Index: 4 | Nodes under Father: 5
						-->> "bool User::Tree<Payload>::show() [with Payload = User::Equation_parser::_Token]" | Nodes: 5
						<<-- "bool User::Tree<Payload>::show() [with Payload = User::Equation_parser::_Token]" |
						-->> "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Index: 0
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af360 | Begin: 1 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 0 | Stack size: 1
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af3c0 | Begin: 0 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 5 | Stack size: 0
							-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
								-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 0
									Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 0 | Depth: 1
									Found children || Index 2 | Own Index: 2 | Father Index: 0 | Own Priority 1 | Children: 0 | Depth: 1
									Found children || Index 3 | Own Index: 3 | Father Index: 0 | Own Priority 2 | Children: 0 | Depth: 1
									Found children || Index 4 | Own Index: 4 | Father Index: 0 | Own Priority 3 | Children: 0 | Depth: 1
								<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 4 | 4 children
							<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 1 | Index: 0
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af3c0 | Begin: 0 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 5 | Stack size: 0
							-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
								-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 1
								<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 0 | 0 children
							<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 2 | Index: 1
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af3c0 | Begin: 0 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 5 | Stack size: 0
							-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
								-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 2
								<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 0 | 0 children
							<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 3 | Index: 2
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af3c0 | Begin: 0 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 5 | Stack size: 0
							-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
								-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 3
								<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 0 | 0 children
							<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 4 | Index: 3
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af3c0 | Begin: 0 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 5 | Stack size: 0
							-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
								-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 4
								<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 0 | 0 children
							<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 5 | Index: 4
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af3c0 | Begin: 0 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 5 | Stack size: 0
						<<-- "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
					<<-- "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::_Token>&, User::Tree<User::Equation_parser::_Token>&, size_t)" |
					-->> "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::_Token>&, User::Tree<User::Equation_parser::_Token>&, size_t)" | Token Array Size: 3 | Father 0
						-->> "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::_Token>&, std::vector<User::Equation_parser::_Token>::iterator&)" | Tokens: 3
							Token: 2 | Priority: 0
							Token: + | Priority: 0
							Token: 3 | Priority: 0
							-->> "std::ostream& User::operator<<(std::ostream&, std::vector<User::Equation_parser::_Token>&)" |
								Tokens   | 2| +| 3
								Priority | 0| 0| 0
							<<-- "std::ostream& User::operator<<(std::ostream&, std::vector<User::Equation_parser::_Token>&)" |
						<<-- "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::_Token>&, std::vector<User::Equation_parser::_Token>::iterator&)" | Tokens: 3 | Highest Priority Token: <+> | 0 3
						Core Token: >+< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 3
						LHS Tokens: 1 | RHS Tokens: 1
						-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
						<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father Index: 0 | Own Index: 5 | Nodes under Father: 6
						-->> "bool User::Tree<Payload>::show() [with Payload = User::Equation_parser::_Token]" | Nodes: 6
						<<-- "bool User::Tree<Payload>::show() [with Payload = User::Equation_parser::_Token]" |
						-->> "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Index: 0
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af360 | Begin: 1 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 0 | Stack size: 1
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af3c0 | Begin: 0 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 6 | Stack size: 0
							-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
								-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 0
									Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 0 | Depth: 1
									Found children || Index 2 | Own Index: 2 | Father Index: 0 | Own Priority 1 | Children: 0 | Depth: 1
									Found children || Index 3 | Own Index: 3 | Father Index: 0 | Own Priority 2 | Children: 0 | Depth: 1
									Found children || Index 4 | Own Index: 4 | Father Index: 0 | Own Priority 3 | Children: 0 | Depth: 1
									Found children || Index 5 | Own Index: 5 | Father Index: 0 | Own Priority 4 | Children: 0 | Depth: 1
								<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 5 | 5 children
							<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 1 | Index: 0
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af3c0 | Begin: 0 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 6 | Stack size: 0
							-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
								-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 1
								<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 0 | 0 children
							<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 2 | Index: 1
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af3c0 | Begin: 0 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 6 | Stack size: 0
							-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
								-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 2
								<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 0 | 0 children
							<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 3 | Index: 2
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af3c0 | Begin: 0 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 6 | Stack size: 0
							-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
								-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 3
								<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 0 | 0 children
							<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 4 | Index: 3
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af3c0 | Begin: 0 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 6 | Stack size: 0
							-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
								-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 4
								<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 0 | 0 children
							<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 5 | Index: 4
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af3c0 | Begin: 0 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 6 | Stack size: 0
							-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
								-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 5
								<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 0 | 0 children
							<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 6 | Index: 5
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af3c0 | Begin: 0 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 6 | Stack size: 0
						<<-- "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
						-->> "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::_Token>&, User::Tree<User::Equation_parser::_Token>&, size_t)" | Token Array Size: 1 | Father 5
							-->> "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::_Token>&, std::vector<User::Equation_parser::_Token>::iterator&)" | Tokens: 1
								Token: 2 | Priority: 0
								-->> "std::ostream& User::operator<<(std::ostream&, std::vector<User::Equation_parser::_Token>&)" |
									Tokens   | 2
									Priority | 0
								<<-- "std::ostream& User::operator<<(std::ostream&, std::vector<User::Equation_parser::_Token>&)" |
							<<-- "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::_Token>&, std::vector<User::Equation_parser::_Token>::iterator&)" | Tokens: 1 | Highest Priority Token: <2> | 0 5
							Core Token: >2< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 5
							LHS Tokens: 0 | RHS Tokens: 0
							-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
							<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father Index: 5 | Own Index: 6 | Nodes under Father: 2
							-->> "bool User::Tree<Payload>::show() [with Payload = User::Equation_parser::_Token]" | Nodes: 7
							<<-- "bool User::Tree<Payload>::show() [with Payload = User::Equation_parser::_Token]" |
							-->> "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Index: 0
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af260 | Begin: 1 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 0 | Stack size: 1
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af2c0 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 7 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 0
										Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 0 | Depth: 1
										Found children || Index 2 | Own Index: 2 | Father Index: 0 | Own Priority 1 | Children: 0 | Depth: 1
										Found children || Index 3 | Own Index: 3 | Father Index: 0 | Own Priority 2 | Children: 0 | Depth: 1
										Found children || Index 4 | Own Index: 4 | Father Index: 0 | Own Priority 3 | Children: 0 | Depth: 1
										Found children || Index 5 | Own Index: 5 | Father Index: 0 | Own Priority 4 | Children: 1 | Depth: 1
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 5 | 5 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 1 | Index: 0
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af2c0 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 7 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 1
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 2 | Index: 1
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af2c0 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 7 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 2
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 3 | Index: 2
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af2c0 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 7 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 3
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 4 | Index: 3
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af2c0 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 7 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 4
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 5 | Index: 4
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af2c0 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 7 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 5
										Found children || Index 6 | Own Index: 6 | Father Index: 5 | Own Priority 0 | Children: 0 | Depth: 2
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 1 | 1 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 6 | Index: 5
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af2c0 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 7 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 6
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 7 | Index: 6
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af2c0 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 7 | Stack size: 0
							<<-- "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
						<<-- "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::_Token>&, User::Tree<User::Equation_parser::_Token>&, size_t)" |
						-->> "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::_Token>&, User::Tree<User::Equation_parser::_Token>&, size_t)" | Token Array Size: 1 | Father 5
							-->> "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::_Token>&, std::vector<User::Equation_parser::_Token>::iterator&)" | Tokens: 1
								Token: 3 | Priority: 0
								-->> "std::ostream& User::operator<<(std::ostream&, std::vector<User::Equation_parser::_Token>&)" |
									Tokens   | 3
									Priority | 0
								<<-- "std::ostream& User::operator<<(std::ostream&, std::vector<User::Equation_parser::_Token>&)" |
							<<-- "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::_Token>&, std::vector<User::Equation_parser::_Token>::iterator&)" | Tokens: 1 | Highest Priority Token: <3> | 0 5
							Core Token: >3< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 5
							LHS Tokens: 0 | RHS Tokens: 0
							-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
							<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father Index: 5 | Own Index: 7 | Nodes under Father: 3
							-->> "bool User::Tree<Payload>::show() [with Payload = User::Equation_parser::_Token]" | Nodes: 8
							<<-- "bool User::Tree<Payload>::show() [with Payload = User::Equation_parser::_Token]" |
							-->> "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Index: 0
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af260 | Begin: 1 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 0 | Stack size: 1
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af2c0 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 8 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 0
										Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 0 | Depth: 1
										Found children || Index 2 | Own Index: 2 | Father Index: 0 | Own Priority 1 | Children: 0 | Depth: 1
										Found children || Index 3 | Own Index: 3 | Father Index: 0 | Own Priority 2 | Children: 0 | Depth: 1
										Found children || Index 4 | Own Index: 4 | Father Index: 0 | Own Priority 3 | Children: 0 | Depth: 1
										Found children || Index 5 | Own Index: 5 | Father Index: 0 | Own Priority 4 | Children: 2 | Depth: 1
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 5 | 5 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 1 | Index: 0
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af2c0 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 8 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 1
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 2 | Index: 1
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af2c0 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 8 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 2
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 3 | Index: 2
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af2c0 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 8 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 3
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 4 | Index: 3
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af2c0 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 8 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 4
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 5 | Index: 4
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af2c0 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 8 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 5
										Found children || Index 6 | Own Index: 6 | Father Index: 5 | Own Priority 0 | Children: 0 | Depth: 2
										Found children || Index 7 | Own Index: 7 | Father Index: 5 | Own Priority 1 | Children: 0 | Depth: 2
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 2 | 2 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 6 | Index: 5
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af2c0 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 8 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 6
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 7 | Index: 6
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af2c0 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 8 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 7
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 8 | Index: 7
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af2c0 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 8 | Stack size: 0
							<<-- "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
						<<-- "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::_Token>&, User::Tree<User::Equation_parser::_Token>&, size_t)" |
					<<-- "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::_Token>&, User::Tree<User::Equation_parser::_Token>&, size_t)" |
				<<-- "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::_Token>&, User::Tree<User::Equation_parser::_Token>&, size_t)" |
				-->> "bool User::Tree<Payload>::show() [with Payload = User::Equation_parser::_Token]" | Nodes: 8
				<<-- "bool User::Tree<Payload>::show() [with Payload = User::Equation_parser::_Token]" |
				-->> "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Index: 0
					-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af560 | Begin: 1 | Index: 0
					<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 0 | Stack size: 1
					-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af5c0 | Begin: 0 | Index: 0
					<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 8 | Stack size: 0
					-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
						-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 0
							Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 0 | Depth: 1
							Found children || Index 2 | Own Index: 2 | Father Index: 0 | Own Priority 1 | Children: 0 | Depth: 1
							Found children || Index 3 | Own Index: 3 | Father Index: 0 | Own Priority 2 | Children: 0 | Depth: 1
							Found children || Index 4 | Own Index: 4 | Father Index: 0 | Own Priority 3 | Children: 0 | Depth: 1
							Found children || Index 5 | Own Index: 5 | Father Index: 0 | Own Priority 4 | Children: 2 | Depth: 1
						<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 5 | 5 children
					<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 1 | Index: 0
					-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af5c0 | Begin: 0 | Index: 0
					<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 8 | Stack size: 0
					-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
						-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 1
						<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 0 | 0 children
					<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 2 | Index: 1
					-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af5c0 | Begin: 0 | Index: 0
					<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 8 | Stack size: 0
					-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
						-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 2
						<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 0 | 0 children
					<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 3 | Index: 2
					-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af5c0 | Begin: 0 | Index: 0
					<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 8 | Stack size: 0
					-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
						-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 3
						<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 0 | 0 children
					<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 4 | Index: 3
					-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af5c0 | Begin: 0 | Index: 0
					<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 8 | Stack size: 0
					-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
						-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 4
						<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 0 | 0 children
					<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 5 | Index: 4
					-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af5c0 | Begin: 0 | Index: 0
					<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 8 | Stack size: 0
					-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
						-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 5
							Found children || Index 6 | Own Index: 6 | Father Index: 5 | Own Priority 0 | Children: 0 | Depth: 2
							Found children || Index 7 | Own Index: 7 | Father Index: 5 | Own Priority 1 | Children: 0 | Depth: 2
						<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 2 | 2 children
					<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 6 | Index: 5
					-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af5c0 | Begin: 0 | Index: 0
					<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 8 | Stack size: 0
					-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
						-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 6
						<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 0 | 0 children
					<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 7 | Index: 6
					-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af5c0 | Begin: 0 | Index: 0
					<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 8 | Stack size: 0
					-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
						-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 7
						<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 0 | 0 children
					<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 8 | Index: 7
					-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af5c0 | Begin: 0 | Index: 0
					<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 8 | Stack size: 0
				<<-- "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
				-->> "bool User::Tree<Payload>::show() [with Payload = User::Equation_parser::_Token]" | Nodes: 8
				<<-- "bool User::Tree<Payload>::show() [with Payload = User::Equation_parser::_Token]" |
				-->> "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Index: 0
					-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af560 | Begin: 1 | Index: 0
					<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 0 | Stack size: 1
					-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af5c0 | Begin: 0 | Index: 0
					<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 8 | Stack size: 0
					-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
						-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 0
							Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 0 | Depth: 1
							Found children || Index 2 | Own Index: 2 | Father Index: 0 | Own Priority 1 | Children: 0 | Depth: 1
							Found children || Index 3 | Own Index: 3 | Father Index: 0 | Own Priority 2 | Children: 0 | Depth: 1
							Found children || Index 4 | Own Index: 4 | Father Index: 0 | Own Priority 3 | Children: 0 | Depth: 1
							Found children || Index 5 | Own Index: 5 | Father Index: 0 | Own Priority 4 | Children: 2 | Depth: 1
						<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 5 | 5 children
					<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 1 | Index: 0
					-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af5c0 | Begin: 0 | Index: 0
					<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 8 | Stack size: 0
					-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
						-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 1
						<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 0 | 0 children
					<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 2 | Index: 1
					-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af5c0 | Begin: 0 | Index: 0
					<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 8 | Stack size: 0
					-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
						-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 2
						<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 0 | 0 children
					<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 3 | Index: 2
					-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af5c0 | Begin: 0 | Index: 0
					<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 8 | Stack size: 0
					-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
						-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 3
						<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 0 | 0 children
					<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 4 | Index: 3
					-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af5c0 | Begin: 0 | Index: 0
					<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 8 | Stack size: 0
					-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
						-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 4
						<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 0 | 0 children
					<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 5 | Index: 4
					-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af5c0 | Begin: 0 | Index: 0
					<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 8 | Stack size: 0
					-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
						-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 5
							Found children || Index 6 | Own Index: 6 | Father Index: 5 | Own Priority 0 | Children: 0 | Depth: 2
							Found children || Index 7 | Own Index: 7 | Father Index: 5 | Own Priority 1 | Children: 0 | Depth: 2
						<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 2 | 2 children
					<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 6 | Index: 5
					-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af5c0 | Begin: 0 | Index: 0
					<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 8 | Stack size: 0
					-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
						-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 6
						<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 0 | 0 children
					<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 7 | Index: 6
					-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af5c0 | Begin: 0 | Index: 0
					<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 8 | Stack size: 0
					-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
						-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 7
						<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 0 | 0 children
					<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 8 | Index: 7
					-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af5c0 | Begin: 0 | Index: 0
					<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 8 | Stack size: 0
				<<-- "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
			<<-- "bool User::Equation_parser::parse(std::__cxx11::string)" | Token array size: 5 | Token tree size: 8
			TOKEN0
			TOKEN1
			TOKEN2
			TOKEN3
			TOKEN4
			PATTERN7
			-->> "bool User::Equation_parser::parse(std::__cxx11::string)" | Parse: 1+4=2+3 | Size: 7
				-->> "static bool User::Equation_parser::equation_to_token_array(std::__cxx11::string, std::vector<std::__cxx11::basic_string<char> >&, std::vector<User::Equation_parser::_Token>&)" | Parse: 1+4=2+3 | Size: 7
					SEEK_NEXT_TOKEN | Decode: >>1<<
					TOKEN_NUMBER | Decode: >>+<<
					Token fully decoded:  1 | type: 0 | size: 1
					Tokens decoded: 1
					SEEK_NEXT_TOKEN | Decode: >>+<<
					-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >>+<<
					<<-- "static bool User::Equation_parser::is_symbol(char)" | N
					-->> "static bool User::Equation_parser::is_operator(char)" | Digit: >>+<<
					<<-- "static bool User::Equation_parser::is_operator(char)" | Y
					Operator detected: >>+<< | Token: +
					Token fully decoded:  + | type: 2 | size: 1
					Tokens decoded: 2
					SEEK_NEXT_TOKEN | Decode: >>4<<
					TOKEN_NUMBER | Decode: >>=<<
					Token fully decoded:  4 | type: 0 | size: 1
					Tokens decoded: 3
					SEEK_NEXT_TOKEN | Decode: >>=<<
					-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >>=<<
					<<-- "static bool User::Equation_parser::is_symbol(char)" | N
					-->> "static bool User::Equation_parser::is_operator(char)" | Digit: >>=<<
					<<-- "static bool User::Equation_parser::is_operator(char)" | Y
					Operator detected: >>=<< | Token: =
					Token fully decoded:  = | type: 2 | size: 1
					Tokens decoded: 4
					SEEK_NEXT_TOKEN | Decode: >>2<<
					TOKEN_NUMBER | Decode: >>+<<
					Token fully decoded:  2 | type: 0 | size: 1
					Tokens decoded: 5
					SEEK_NEXT_TOKEN | Decode: >>+<<
					-->> "static bool User::Equation_parser::is_symbol(char)" | Digit: >>+<<
					<<-- "static bool User::Equation_parser::is_symbol(char)" | N
					-->> "static bool User::Equation_parser::is_operator(char)" | Digit: >>+<<
					<<-- "static bool User::Equation_parser::is_operator(char)" | Y
					Operator detected: >>+<< | Token: +
					Token fully decoded:  + | type: 2 | size: 1
					Tokens decoded: 6
					SEEK_NEXT_TOKEN | Decode: >>3<<
					Token fully decoded:  3 | type: 0 | size: 1
					Tokens decoded: 7
					Equations decoded into 7 tokens
					Token: >>1<< | Type: 0 | Size: 1
					Token: >>+<< | Type: 2 | Size: 1
					Token: >>4<< | Type: 0 | Size: 1
					Token: >>=<< | Type: 2 | Size: 1
					Token: >>2<< | Type: 0 | Size: 1
					Token: >>+<< | Type: 2 | Size: 1
					Token: >>3<< | Type: 0 | Size: 1
				<<-- "static bool User::Equation_parser::equation_to_token_array(std::__cxx11::string, std::vector<std::__cxx11::basic_string<char> >&, std::vector<User::Equation_parser::_Token>&)" | Decoded 7 tokens
				-->> "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::_Token>&, User::Tree<User::Equation_parser::_Token>&, size_t)" | Token Array Size: 7 | Father 0
					-->> "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::_Token>&, std::vector<User::Equation_parser::_Token>::iterator&)" | Tokens: 7
						Token: 1 | Priority: 0
						Token: + | Priority: 0
						Token: 4 | Priority: 0
						Token: = | Priority: 0
						Token: 2 | Priority: 0
						Token: + | Priority: 0
						Token: 3 | Priority: 0
						-->> "std::ostream& User::operator<<(std::ostream&, std::vector<User::Equation_parser::_Token>&)" |
							Tokens   | 1| +| 4| =| 2| +| 3
							Priority | 0| 0| 0| 0| 0| 0| 0
						<<-- "std::ostream& User::operator<<(std::ostream&, std::vector<User::Equation_parser::_Token>&)" |
					<<-- "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::_Token>&, std::vector<User::Equation_parser::_Token>::iterator&)" | Tokens: 7 | Highest Priority Token: <=> | 0 0
					Core Token: >=< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 0
					LHS Tokens: 3 | RHS Tokens: 3
					-->> "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Object: 00000000006afa80, Index: 0
					<<-- "Payload& User::Tree<Payload>::operator[](size_t) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
					-->> "bool User::Tree<Payload>::show() [with Payload = User::Equation_parser::_Token]" | Nodes: 8
					<<-- "bool User::Tree<Payload>::show() [with Payload = User::Equation_parser::_Token]" |
					-->> "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Index: 0
						-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af460 | Begin: 1 | Index: 0
						<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 0 | Stack size: 1
						-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af4c0 | Begin: 0 | Index: 0
						<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 8 | Stack size: 0
						-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
							-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 0
								Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 0 | Depth: 1
								Found children || Index 2 | Own Index: 2 | Father Index: 0 | Own Priority 1 | Children: 0 | Depth: 1
								Found children || Index 3 | Own Index: 3 | Father Index: 0 | Own Priority 2 | Children: 0 | Depth: 1
								Found children || Index 4 | Own Index: 4 | Father Index: 0 | Own Priority 3 | Children: 0 | Depth: 1
								Found children || Index 5 | Own Index: 5 | Father Index: 0 | Own Priority 4 | Children: 2 | Depth: 1
							<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 5 | 5 children
						<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 1 | Index: 0
						-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af4c0 | Begin: 0 | Index: 0
						<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 8 | Stack size: 0
						-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
							-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 1
							<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 0 | 0 children
						<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 2 | Index: 1
						-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af4c0 | Begin: 0 | Index: 0
						<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 8 | Stack size: 0
						-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
							-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 2
							<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 0 | 0 children
						<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 3 | Index: 2
						-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af4c0 | Begin: 0 | Index: 0
						<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 8 | Stack size: 0
						-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
							-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 3
							<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 0 | 0 children
						<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 4 | Index: 3
						-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af4c0 | Begin: 0 | Index: 0
						<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 8 | Stack size: 0
						-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
							-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 4
							<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 0 | 0 children
						<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 5 | Index: 4
						-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af4c0 | Begin: 0 | Index: 0
						<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 8 | Stack size: 0
						-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
							-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 5
								Found children || Index 6 | Own Index: 6 | Father Index: 5 | Own Priority 0 | Children: 0 | Depth: 2
								Found children || Index 7 | Own Index: 7 | Father Index: 5 | Own Priority 1 | Children: 0 | Depth: 2
							<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 2 | 2 children
						<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 6 | Index: 5
						-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af4c0 | Begin: 0 | Index: 0
						<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 8 | Stack size: 0
						-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
							-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 6
							<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 0 | 0 children
						<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 7 | Index: 6
						-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af4c0 | Begin: 0 | Index: 0
						<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 8 | Stack size: 0
						-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
							-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 7
							<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 0 | 0 children
						<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 8 | Index: 7
						-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af4c0 | Begin: 0 | Index: 0
						<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 8 | Stack size: 0
					<<-- "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
					-->> "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::_Token>&, User::Tree<User::Equation_parser::_Token>&, size_t)" | Token Array Size: 3 | Father 0
						-->> "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::_Token>&, std::vector<User::Equation_parser::_Token>::iterator&)" | Tokens: 3
							Token: 1 | Priority: 0
							Token: + | Priority: 0
							Token: 4 | Priority: 0
							-->> "std::ostream& User::operator<<(std::ostream&, std::vector<User::Equation_parser::_Token>&)" |
								Tokens   | 1| +| 4
								Priority | 0| 0| 0
							<<-- "std::ostream& User::operator<<(std::ostream&, std::vector<User::Equation_parser::_Token>&)" |
						<<-- "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::_Token>&, std::vector<User::Equation_parser::_Token>::iterator&)" | Tokens: 3 | Highest Priority Token: <+> | 0 3
						Core Token: >+< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 3
						LHS Tokens: 1 | RHS Tokens: 1
						-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
						<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father Index: 0 | Own Index: 8 | Nodes under Father: 7
						-->> "bool User::Tree<Payload>::show() [with Payload = User::Equation_parser::_Token]" | Nodes: 9
						<<-- "bool User::Tree<Payload>::show() [with Payload = User::Equation_parser::_Token]" |
						-->> "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Index: 0
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af360 | Begin: 1 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 0 | Stack size: 1
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af3c0 | Begin: 0 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 9 | Stack size: 0
							-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
								-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 0
									Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 0 | Depth: 1
									Found children || Index 2 | Own Index: 2 | Father Index: 0 | Own Priority 1 | Children: 0 | Depth: 1
									Found children || Index 3 | Own Index: 3 | Father Index: 0 | Own Priority 2 | Children: 0 | Depth: 1
									Found children || Index 4 | Own Index: 4 | Father Index: 0 | Own Priority 3 | Children: 0 | Depth: 1
									Found children || Index 5 | Own Index: 5 | Father Index: 0 | Own Priority 4 | Children: 2 | Depth: 1
									Found children || Index 8 | Own Index: 8 | Father Index: 0 | Own Priority 5 | Children: 0 | Depth: 1
								<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 6 | 6 children
							<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 1 | Index: 0
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af3c0 | Begin: 0 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 9 | Stack size: 0
							-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
								-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 1
								<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 0 | 0 children
							<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 2 | Index: 1
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af3c0 | Begin: 0 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 9 | Stack size: 0
							-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
								-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 2
								<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 0 | 0 children
							<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 3 | Index: 2
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af3c0 | Begin: 0 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 9 | Stack size: 0
							-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
								-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 3
								<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 0 | 0 children
							<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 4 | Index: 3
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af3c0 | Begin: 0 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 9 | Stack size: 0
							-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
								-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 4
								<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 0 | 0 children
							<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 5 | Index: 4
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af3c0 | Begin: 0 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 9 | Stack size: 0
							-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
								-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 5
									Found children || Index 6 | Own Index: 6 | Father Index: 5 | Own Priority 0 | Children: 0 | Depth: 2
									Found children || Index 7 | Own Index: 7 | Father Index: 5 | Own Priority 1 | Children: 0 | Depth: 2
								<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 2 | 2 children
							<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 6 | Index: 5
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af3c0 | Begin: 0 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 9 | Stack size: 0
							-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
								-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 6
								<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 0 | 0 children
							<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 7 | Index: 6
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af3c0 | Begin: 0 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 9 | Stack size: 0
							-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
								-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 7
								<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 0 | 0 children
							<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 8 | Index: 7
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af3c0 | Begin: 0 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 9 | Stack size: 0
							-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
								-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 8
								<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 0 | 0 children
							<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 9 | Index: 8
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af3c0 | Begin: 0 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 9 | Stack size: 0
						<<-- "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
						-->> "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::_Token>&, User::Tree<User::Equation_parser::_Token>&, size_t)" | Token Array Size: 1 | Father 8
							-->> "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::_Token>&, std::vector<User::Equation_parser::_Token>::iterator&)" | Tokens: 1
								Token: 1 | Priority: 0
								-->> "std::ostream& User::operator<<(std::ostream&, std::vector<User::Equation_parser::_Token>&)" |
									Tokens   | 1
									Priority | 0
								<<-- "std::ostream& User::operator<<(std::ostream&, std::vector<User::Equation_parser::_Token>&)" |
							<<-- "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::_Token>&, std::vector<User::Equation_parser::_Token>::iterator&)" | Tokens: 1 | Highest Priority Token: <1> | 0 5
							Core Token: >1< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 5
							LHS Tokens: 0 | RHS Tokens: 0
							-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
							<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father Index: 8 | Own Index: 9 | Nodes under Father: 2
							-->> "bool User::Tree<Payload>::show() [with Payload = User::Equation_parser::_Token]" | Nodes: 10
							<<-- "bool User::Tree<Payload>::show() [with Payload = User::Equation_parser::_Token]" |
							-->> "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Index: 0
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af260 | Begin: 1 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 0 | Stack size: 1
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af2c0 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 10 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 0
										Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 0 | Depth: 1
										Found children || Index 2 | Own Index: 2 | Father Index: 0 | Own Priority 1 | Children: 0 | Depth: 1
										Found children || Index 3 | Own Index: 3 | Father Index: 0 | Own Priority 2 | Children: 0 | Depth: 1
										Found children || Index 4 | Own Index: 4 | Father Index: 0 | Own Priority 3 | Children: 0 | Depth: 1
										Found children || Index 5 | Own Index: 5 | Father Index: 0 | Own Priority 4 | Children: 2 | Depth: 1
										Found children || Index 8 | Own Index: 8 | Father Index: 0 | Own Priority 5 | Children: 1 | Depth: 1
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 6 | 6 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 1 | Index: 0
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af2c0 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 10 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 1
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 2 | Index: 1
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af2c0 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 10 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 2
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 3 | Index: 2
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af2c0 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 10 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 3
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 4 | Index: 3
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af2c0 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 10 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 4
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 5 | Index: 4
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af2c0 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 10 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 5
										Found children || Index 6 | Own Index: 6 | Father Index: 5 | Own Priority 0 | Children: 0 | Depth: 2
										Found children || Index 7 | Own Index: 7 | Father Index: 5 | Own Priority 1 | Children: 0 | Depth: 2
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 2 | 2 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 6 | Index: 5
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af2c0 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 10 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 6
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 7 | Index: 6
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af2c0 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 10 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 7
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 8 | Index: 7
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af2c0 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 10 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 8
										Found children || Index 9 | Own Index: 9 | Father Index: 8 | Own Priority 0 | Children: 0 | Depth: 2
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 1 | 1 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 9 | Index: 8
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af2c0 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 10 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 9
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 10 | Index: 9
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af2c0 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 10 | Stack size: 0
							<<-- "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
						<<-- "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::_Token>&, User::Tree<User::Equation_parser::_Token>&, size_t)" |
						-->> "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::_Token>&, User::Tree<User::Equation_parser::_Token>&, size_t)" | Token Array Size: 1 | Father 8
							-->> "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::_Token>&, std::vector<User::Equation_parser::_Token>::iterator&)" | Tokens: 1
								Token: 4 | Priority: 0
								-->> "std::ostream& User::operator<<(std::ostream&, std::vector<User::Equation_parser::_Token>&)" |
									Tokens   | 4
									Priority | 0
								<<-- "std::ostream& User::operator<<(std::ostream&, std::vector<User::Equation_parser::_Token>&)" |
							<<-- "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::_Token>&, std::vector<User::Equation_parser::_Token>::iterator&)" | Tokens: 1 | Highest Priority Token: <4> | 0 5
							Core Token: >4< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 5
							LHS Tokens: 0 | RHS Tokens: 0
							-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
							<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father Index: 8 | Own Index: 10 | Nodes under Father: 3
							-->> "bool User::Tree<Payload>::show() [with Payload = User::Equation_parser::_Token]" | Nodes: 11
							<<-- "bool User::Tree<Payload>::show() [with Payload = User::Equation_parser::_Token]" |
							-->> "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Index: 0
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af260 | Begin: 1 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 0 | Stack size: 1
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af2c0 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 11 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 0
										Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 0 | Depth: 1
										Found children || Index 2 | Own Index: 2 | Father Index: 0 | Own Priority 1 | Children: 0 | Depth: 1
										Found children || Index 3 | Own Index: 3 | Father Index: 0 | Own Priority 2 | Children: 0 | Depth: 1
										Found children || Index 4 | Own Index: 4 | Father Index: 0 | Own Priority 3 | Children: 0 | Depth: 1
										Found children || Index 5 | Own Index: 5 | Father Index: 0 | Own Priority 4 | Children: 2 | Depth: 1
										Found children || Index 8 | Own Index: 8 | Father Index: 0 | Own Priority 5 | Children: 2 | Depth: 1
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 6 | 6 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 1 | Index: 0
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af2c0 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 11 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 1
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 2 | Index: 1
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af2c0 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 11 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 2
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 3 | Index: 2
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af2c0 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 11 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 3
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 4 | Index: 3
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af2c0 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 11 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 4
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 5 | Index: 4
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af2c0 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 11 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 5
										Found children || Index 6 | Own Index: 6 | Father Index: 5 | Own Priority 0 | Children: 0 | Depth: 2
										Found children || Index 7 | Own Index: 7 | Father Index: 5 | Own Priority 1 | Children: 0 | Depth: 2
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 2 | 2 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 6 | Index: 5
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af2c0 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 11 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 6
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 7 | Index: 6
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af2c0 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 11 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 7
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 8 | Index: 7
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af2c0 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 11 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 8
										Found children || Index 9 | Own Index: 9 | Father Index: 8 | Own Priority 0 | Children: 0 | Depth: 2
										Found children || Index 10 | Own Index: 10 | Father Index: 8 | Own Priority 1 | Children: 0 | Depth: 2
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 2 | 2 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 9 | Index: 8
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af2c0 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 11 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 9
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 10 | Index: 9
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af2c0 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 11 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 10
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 11 | Index: 10
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af2c0 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 11 | Stack size: 0
							<<-- "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
						<<-- "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::_Token>&, User::Tree<User::Equation_parser::_Token>&, size_t)" |
					<<-- "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::_Token>&, User::Tree<User::Equation_parser::_Token>&, size_t)" |
					-->> "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::_Token>&, User::Tree<User::Equation_parser::_Token>&, size_t)" | Token Array Size: 3 | Father 0
						-->> "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::_Token>&, std::vector<User::Equation_parser::_Token>::iterator&)" | Tokens: 3
							Token: 2 | Priority: 0
							Token: + | Priority: 0
							Token: 3 | Priority: 0
							-->> "std::ostream& User::operator<<(std::ostream&, std::vector<User::Equation_parser::_Token>&)" |
								Tokens   | 2| +| 3
								Priority | 0| 0| 0
							<<-- "std::ostream& User::operator<<(std::ostream&, std::vector<User::Equation_parser::_Token>&)" |
						<<-- "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::_Token>&, std::vector<User::Equation_parser::_Token>::iterator&)" | Tokens: 3 | Highest Priority Token: <+> | 0 3
						Core Token: >+< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 3
						LHS Tokens: 1 | RHS Tokens: 1
						-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
						<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father Index: 0 | Own Index: 11 | Nodes under Father: 8
						-->> "bool User::Tree<Payload>::show() [with Payload = User::Equation_parser::_Token]" | Nodes: 12
						<<-- "bool User::Tree<Payload>::show() [with Payload = User::Equation_parser::_Token]" |
						-->> "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Index: 0
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af360 | Begin: 1 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 0 | Stack size: 1
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af3c0 | Begin: 0 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 12 | Stack size: 0
							-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
								-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 0
									Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 0 | Depth: 1
									Found children || Index 2 | Own Index: 2 | Father Index: 0 | Own Priority 1 | Children: 0 | Depth: 1
									Found children || Index 3 | Own Index: 3 | Father Index: 0 | Own Priority 2 | Children: 0 | Depth: 1
									Found children || Index 4 | Own Index: 4 | Father Index: 0 | Own Priority 3 | Children: 0 | Depth: 1
									Found children || Index 5 | Own Index: 5 | Father Index: 0 | Own Priority 4 | Children: 2 | Depth: 1
									Found children || Index 8 | Own Index: 8 | Father Index: 0 | Own Priority 5 | Children: 2 | Depth: 1
									Found children || Index 11 | Own Index: 11 | Father Index: 0 | Own Priority 6 | Children: 0 | Depth: 1
								<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 7 | 7 children
							<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 1 | Index: 0
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af3c0 | Begin: 0 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 12 | Stack size: 0
							-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
								-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 1
								<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 0 | 0 children
							<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 2 | Index: 1
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af3c0 | Begin: 0 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 12 | Stack size: 0
							-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
								-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 2
								<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 0 | 0 children
							<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 3 | Index: 2
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af3c0 | Begin: 0 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 12 | Stack size: 0
							-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
								-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 3
								<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 0 | 0 children
							<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 4 | Index: 3
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af3c0 | Begin: 0 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 12 | Stack size: 0
							-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
								-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 4
								<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 0 | 0 children
							<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 5 | Index: 4
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af3c0 | Begin: 0 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 12 | Stack size: 0
							-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
								-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 5
									Found children || Index 6 | Own Index: 6 | Father Index: 5 | Own Priority 0 | Children: 0 | Depth: 2
									Found children || Index 7 | Own Index: 7 | Father Index: 5 | Own Priority 1 | Children: 0 | Depth: 2
								<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 2 | 2 children
							<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 6 | Index: 5
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af3c0 | Begin: 0 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 12 | Stack size: 0
							-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
								-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 6
								<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 0 | 0 children
							<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 7 | Index: 6
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af3c0 | Begin: 0 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 12 | Stack size: 0
							-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
								-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 7
								<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 0 | 0 children
							<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 8 | Index: 7
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af3c0 | Begin: 0 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 12 | Stack size: 0
							-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
								-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 8
									Found children || Index 9 | Own Index: 9 | Father Index: 8 | Own Priority 0 | Children: 0 | Depth: 2
									Found children || Index 10 | Own Index: 10 | Father Index: 8 | Own Priority 1 | Children: 0 | Depth: 2
								<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 2 | 2 children
							<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 9 | Index: 8
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af3c0 | Begin: 0 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 12 | Stack size: 0
							-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
								-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 9
								<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 0 | 0 children
							<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 10 | Index: 9
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af3c0 | Begin: 0 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 12 | Stack size: 0
							-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
								-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 10
								<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 0 | 0 children
							<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 11 | Index: 10
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af3c0 | Begin: 0 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 12 | Stack size: 0
							-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
								-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 11
								<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 0 | 0 children
							<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 12 | Index: 11
							-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af3c0 | Begin: 0 | Index: 0
							<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 12 | Stack size: 0
						<<-- "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
						-->> "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::_Token>&, User::Tree<User::Equation_parser::_Token>&, size_t)" | Token Array Size: 1 | Father 11
							-->> "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::_Token>&, std::vector<User::Equation_parser::_Token>::iterator&)" | Tokens: 1
								Token: 2 | Priority: 0
								-->> "std::ostream& User::operator<<(std::ostream&, std::vector<User::Equation_parser::_Token>&)" |
									Tokens   | 2
									Priority | 0
								<<-- "std::ostream& User::operator<<(std::ostream&, std::vector<User::Equation_parser::_Token>&)" |
							<<-- "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::_Token>&, std::vector<User::Equation_parser::_Token>::iterator&)" | Tokens: 1 | Highest Priority Token: <2> | 0 5
							Core Token: >2< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 5
							LHS Tokens: 0 | RHS Tokens: 0
							-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
							<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father Index: 11 | Own Index: 12 | Nodes under Father: 2
							-->> "bool User::Tree<Payload>::show() [with Payload = User::Equation_parser::_Token]" | Nodes: 13
							<<-- "bool User::Tree<Payload>::show() [with Payload = User::Equation_parser::_Token]" |
							-->> "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Index: 0
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af260 | Begin: 1 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 0 | Stack size: 1
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af2c0 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 13 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 0
										Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 0 | Depth: 1
										Found children || Index 2 | Own Index: 2 | Father Index: 0 | Own Priority 1 | Children: 0 | Depth: 1
										Found children || Index 3 | Own Index: 3 | Father Index: 0 | Own Priority 2 | Children: 0 | Depth: 1
										Found children || Index 4 | Own Index: 4 | Father Index: 0 | Own Priority 3 | Children: 0 | Depth: 1
										Found children || Index 5 | Own Index: 5 | Father Index: 0 | Own Priority 4 | Children: 2 | Depth: 1
										Found children || Index 8 | Own Index: 8 | Father Index: 0 | Own Priority 5 | Children: 2 | Depth: 1
										Found children || Index 11 | Own Index: 11 | Father Index: 0 | Own Priority 6 | Children: 1 | Depth: 1
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 7 | 7 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 1 | Index: 0
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af2c0 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 13 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 1
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 2 | Index: 1
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af2c0 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 13 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 2
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 3 | Index: 2
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af2c0 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 13 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 3
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 4 | Index: 3
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af2c0 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 13 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 4
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 5 | Index: 4
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af2c0 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 13 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 5
										Found children || Index 6 | Own Index: 6 | Father Index: 5 | Own Priority 0 | Children: 0 | Depth: 2
										Found children || Index 7 | Own Index: 7 | Father Index: 5 | Own Priority 1 | Children: 0 | Depth: 2
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 2 | 2 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 6 | Index: 5
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af2c0 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 13 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 6
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 7 | Index: 6
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af2c0 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 13 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 7
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 8 | Index: 7
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af2c0 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 13 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 8
										Found children || Index 9 | Own Index: 9 | Father Index: 8 | Own Priority 0 | Children: 0 | Depth: 2
										Found children || Index 10 | Own Index: 10 | Father Index: 8 | Own Priority 1 | Children: 0 | Depth: 2
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 2 | 2 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 9 | Index: 8
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af2c0 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 13 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 9
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 10 | Index: 9
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af2c0 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 13 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 10
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 11 | Index: 10
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af2c0 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 13 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 11
										Found children || Index 12 | Own Index: 12 | Father Index: 11 | Own Priority 0 | Children: 0 | Depth: 2
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 1 | 1 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 12 | Index: 11
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af2c0 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 13 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 12
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 13 | Index: 12
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af2c0 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 13 | Stack size: 0
							<<-- "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
						<<-- "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::_Token>&, User::Tree<User::Equation_parser::_Token>&, size_t)" |
						-->> "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::_Token>&, User::Tree<User::Equation_parser::_Token>&, size_t)" | Token Array Size: 1 | Father 11
							-->> "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::_Token>&, std::vector<User::Equation_parser::_Token>::iterator&)" | Tokens: 1
								Token: 3 | Priority: 0
								-->> "std::ostream& User::operator<<(std::ostream&, std::vector<User::Equation_parser::_Token>&)" |
									Tokens   | 3
									Priority | 0
								<<-- "std::ostream& User::operator<<(std::ostream&, std::vector<User::Equation_parser::_Token>&)" |
							<<-- "static bool User::Equation_parser::compute_token_array_priority(std::vector<User::Equation_parser::_Token>&, std::vector<User::Equation_parser::_Token>::iterator&)" | Tokens: 1 | Highest Priority Token: <3> | 0 5
							Core Token: >3< | Size: 1 | Open/Close Priority: 0 | Symbol Priority: 5
							LHS Tokens: 0 | RHS Tokens: 0
							-->> "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
							<<-- "size_t User::Tree<Payload>::create_child(size_t, Payload) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father Index: 11 | Own Index: 13 | Nodes under Father: 3
							-->> "bool User::Tree<Payload>::show() [with Payload = User::Equation_parser::_Token]" | Nodes: 14
							<<-- "bool User::Tree<Payload>::show() [with Payload = User::Equation_parser::_Token]" |
							-->> "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Index: 0
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af260 | Begin: 1 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 0 | Stack size: 1
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af2c0 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 14 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 0
										Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 0 | Depth: 1
										Found children || Index 2 | Own Index: 2 | Father Index: 0 | Own Priority 1 | Children: 0 | Depth: 1
										Found children || Index 3 | Own Index: 3 | Father Index: 0 | Own Priority 2 | Children: 0 | Depth: 1
										Found children || Index 4 | Own Index: 4 | Father Index: 0 | Own Priority 3 | Children: 0 | Depth: 1
										Found children || Index 5 | Own Index: 5 | Father Index: 0 | Own Priority 4 | Children: 2 | Depth: 1
										Found children || Index 8 | Own Index: 8 | Father Index: 0 | Own Priority 5 | Children: 2 | Depth: 1
										Found children || Index 11 | Own Index: 11 | Father Index: 0 | Own Priority 6 | Children: 2 | Depth: 1
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 7 | 7 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 1 | Index: 0
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af2c0 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 14 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 1
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 2 | Index: 1
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af2c0 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 14 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 2
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 3 | Index: 2
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af2c0 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 14 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 3
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 4 | Index: 3
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af2c0 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 14 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 4
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 5 | Index: 4
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af2c0 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 14 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 5
										Found children || Index 6 | Own Index: 6 | Father Index: 5 | Own Priority 0 | Children: 0 | Depth: 2
										Found children || Index 7 | Own Index: 7 | Father Index: 5 | Own Priority 1 | Children: 0 | Depth: 2
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 2 | 2 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 6 | Index: 5
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af2c0 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 14 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 6
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 7 | Index: 6
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af2c0 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 14 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 7
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 8 | Index: 7
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af2c0 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 14 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 8
										Found children || Index 9 | Own Index: 9 | Father Index: 8 | Own Priority 0 | Children: 0 | Depth: 2
										Found children || Index 10 | Own Index: 10 | Father Index: 8 | Own Priority 1 | Children: 0 | Depth: 2
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 2 | 2 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 9 | Index: 8
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af2c0 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 14 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 9
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 10 | Index: 9
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af2c0 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 14 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 10
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 11 | Index: 10
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af2c0 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 14 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 11
										Found children || Index 12 | Own Index: 12 | Father Index: 11 | Own Priority 0 | Children: 0 | Depth: 2
										Found children || Index 13 | Own Index: 13 | Father Index: 11 | Own Priority 1 | Children: 0 | Depth: 2
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 2 | 2 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 12 | Index: 11
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af2c0 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 14 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 12
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 13 | Index: 12
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af2c0 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 14 | Stack size: 0
								-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
									-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 13
									<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 0 | 0 children
								<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 14 | Index: 13
								-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af2c0 | Begin: 0 | Index: 0
								<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 14 | Stack size: 0
							<<-- "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
						<<-- "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::_Token>&, User::Tree<User::Equation_parser::_Token>&, size_t)" |
					<<-- "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::_Token>&, User::Tree<User::Equation_parser::_Token>&, size_t)" |
				<<-- "static bool User::Equation_parser::token_array_to_tree(std::vector<User::Equation_parser::_Token>&, User::Tree<User::Equation_parser::_Token>&, size_t)" |
				-->> "bool User::Tree<Payload>::show() [with Payload = User::Equation_parser::_Token]" | Nodes: 14
				<<-- "bool User::Tree<Payload>::show() [with Payload = User::Equation_parser::_Token]" |
				-->> "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Index: 0
					-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af560 | Begin: 1 | Index: 0
					<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 0 | Stack size: 1
					-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af5c0 | Begin: 0 | Index: 0
					<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 14 | Stack size: 0
					-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
						-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 0
							Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 0 | Depth: 1
							Found children || Index 2 | Own Index: 2 | Father Index: 0 | Own Priority 1 | Children: 0 | Depth: 1
							Found children || Index 3 | Own Index: 3 | Father Index: 0 | Own Priority 2 | Children: 0 | Depth: 1
							Found children || Index 4 | Own Index: 4 | Father Index: 0 | Own Priority 3 | Children: 0 | Depth: 1
							Found children || Index 5 | Own Index: 5 | Father Index: 0 | Own Priority 4 | Children: 2 | Depth: 1
							Found children || Index 8 | Own Index: 8 | Father Index: 0 | Own Priority 5 | Children: 2 | Depth: 1
							Found children || Index 11 | Own Index: 11 | Father Index: 0 | Own Priority 6 | Children: 2 | Depth: 1
						<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 7 | 7 children
					<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 1 | Index: 0
					-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af5c0 | Begin: 0 | Index: 0
					<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 14 | Stack size: 0
					-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
						-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 1
						<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 0 | 0 children
					<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 2 | Index: 1
					-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af5c0 | Begin: 0 | Index: 0
					<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 14 | Stack size: 0
					-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
						-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 2
						<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 0 | 0 children
					<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 3 | Index: 2
					-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af5c0 | Begin: 0 | Index: 0
					<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 14 | Stack size: 0
					-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
						-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 3
						<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 0 | 0 children
					<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 4 | Index: 3
					-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af5c0 | Begin: 0 | Index: 0
					<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 14 | Stack size: 0
					-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
						-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 4
						<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 0 | 0 children
					<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 5 | Index: 4
					-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af5c0 | Begin: 0 | Index: 0
					<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 14 | Stack size: 0
					-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
						-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 5
							Found children || Index 6 | Own Index: 6 | Father Index: 5 | Own Priority 0 | Children: 0 | Depth: 2
							Found children || Index 7 | Own Index: 7 | Father Index: 5 | Own Priority 1 | Children: 0 | Depth: 2
						<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 2 | 2 children
					<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 6 | Index: 5
					-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af5c0 | Begin: 0 | Index: 0
					<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 14 | Stack size: 0
					-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
						-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 6
						<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 0 | 0 children
					<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 7 | Index: 6
					-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af5c0 | Begin: 0 | Index: 0
					<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 14 | Stack size: 0
					-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
						-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 7
						<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 0 | 0 children
					<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 8 | Index: 7
					-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af5c0 | Begin: 0 | Index: 0
					<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 14 | Stack size: 0
					-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
						-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 8
							Found children || Index 9 | Own Index: 9 | Father Index: 8 | Own Priority 0 | Children: 0 | Depth: 2
							Found children || Index 10 | Own Index: 10 | Father Index: 8 | Own Priority 1 | Children: 0 | Depth: 2
						<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 2 | 2 children
					<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 9 | Index: 8
					-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af5c0 | Begin: 0 | Index: 0
					<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 14 | Stack size: 0
					-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
						-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 9
						<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 0 | 0 children
					<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 10 | Index: 9
					-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af5c0 | Begin: 0 | Index: 0
					<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 14 | Stack size: 0
					-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
						-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 10
						<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 0 | 0 children
					<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 11 | Index: 10
					-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af5c0 | Begin: 0 | Index: 0
					<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 14 | Stack size: 0
					-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
						-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 11
							Found children || Index 12 | Own Index: 12 | Father Index: 11 | Own Priority 0 | Children: 0 | Depth: 2
							Found children || Index 13 | Own Index: 13 | Father Index: 11 | Own Priority 1 | Children: 0 | Depth: 2
						<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 2 | 2 children
					<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 12 | Index: 11
					-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af5c0 | Begin: 0 | Index: 0
					<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 14 | Stack size: 0
					-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
						-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 12
						<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 0 | 0 children
					<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 13 | Index: 12
					-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af5c0 | Begin: 0 | Index: 0
					<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 14 | Stack size: 0
					-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
						-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 13
						<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 0 | 0 children
					<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 14 | Index: 13
					-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af5c0 | Begin: 0 | Index: 0
					<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 14 | Stack size: 0
				<<-- "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
				-->> "bool User::Tree<Payload>::show() [with Payload = User::Equation_parser::_Token]" | Nodes: 14
				<<-- "bool User::Tree<Payload>::show() [with Payload = User::Equation_parser::_Token]" |
				-->> "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Index: 0
					-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af560 | Begin: 1 | Index: 0
					<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 0 | Stack size: 1
					-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af5c0 | Begin: 0 | Index: 0
					<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 14 | Stack size: 0
					-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
						-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 0
							Found children || Index 1 | Own Index: 1 | Father Index: 0 | Own Priority 0 | Children: 0 | Depth: 1
							Found children || Index 2 | Own Index: 2 | Father Index: 0 | Own Priority 1 | Children: 0 | Depth: 1
							Found children || Index 3 | Own Index: 3 | Father Index: 0 | Own Priority 2 | Children: 0 | Depth: 1
							Found children || Index 4 | Own Index: 4 | Father Index: 0 | Own Priority 3 | Children: 0 | Depth: 1
							Found children || Index 5 | Own Index: 5 | Father Index: 0 | Own Priority 4 | Children: 2 | Depth: 1
							Found children || Index 8 | Own Index: 8 | Father Index: 0 | Own Priority 5 | Children: 2 | Depth: 1
							Found children || Index 11 | Own Index: 11 | Father Index: 0 | Own Priority 6 | Children: 2 | Depth: 1
						<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 7 | 7 children
					<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 1 | Index: 0
					-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af5c0 | Begin: 0 | Index: 0
					<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 14 | Stack size: 0
					-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
						-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 1
						<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 0 | 0 children
					<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 2 | Index: 1
					-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af5c0 | Begin: 0 | Index: 0
					<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 14 | Stack size: 0
					-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
						-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 2
						<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 0 | 0 children
					<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 3 | Index: 2
					-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af5c0 | Begin: 0 | Index: 0
					<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 14 | Stack size: 0
					-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
						-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 3
						<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 0 | 0 children
					<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 4 | Index: 3
					-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af5c0 | Begin: 0 | Index: 0
					<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 14 | Stack size: 0
					-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
						-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 4
						<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 0 | 0 children
					<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 5 | Index: 4
					-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af5c0 | Begin: 0 | Index: 0
					<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 14 | Stack size: 0
					-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
						-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 5
							Found children || Index 6 | Own Index: 6 | Father Index: 5 | Own Priority 0 | Children: 0 | Depth: 2
							Found children || Index 7 | Own Index: 7 | Father Index: 5 | Own Priority 1 | Children: 0 | Depth: 2
						<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 2 | 2 children
					<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 6 | Index: 5
					-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af5c0 | Begin: 0 | Index: 0
					<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 14 | Stack size: 0
					-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
						-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 6
						<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 0 | 0 children
					<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 7 | Index: 6
					-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af5c0 | Begin: 0 | Index: 0
					<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 14 | Stack size: 0
					-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
						-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 7
						<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 0 | 0 children
					<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 8 | Index: 7
					-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af5c0 | Begin: 0 | Index: 0
					<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 14 | Stack size: 0
					-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
						-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 8
							Found children || Index 9 | Own Index: 9 | Father Index: 8 | Own Priority 0 | Children: 0 | Depth: 2
							Found children || Index 10 | Own Index: 10 | Father Index: 8 | Own Priority 1 | Children: 0 | Depth: 2
						<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 2 | 2 children
					<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 9 | Index: 8
					-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af5c0 | Begin: 0 | Index: 0
					<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 14 | Stack size: 0
					-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
						-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 9
						<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 0 | 0 children
					<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 10 | Index: 9
					-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af5c0 | Begin: 0 | Index: 0
					<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 14 | Stack size: 0
					-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
						-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 10
						<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 0 | 0 children
					<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 11 | Index: 10
					-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af5c0 | Begin: 0 | Index: 0
					<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 14 | Stack size: 0
					-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
						-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 11
							Found children || Index 12 | Own Index: 12 | Father Index: 11 | Own Priority 0 | Children: 0 | Depth: 2
							Found children || Index 13 | Own Index: 13 | Father Index: 11 | Own Priority 1 | Children: 0 | Depth: 2
						<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 2 | 2 children
					<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 12 | Index: 11
					-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af5c0 | Begin: 0 | Index: 0
					<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 14 | Stack size: 0
					-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
						-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 12
						<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 0 | 0 children
					<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 13 | Index: 12
					-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af5c0 | Begin: 0 | Index: 0
					<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 14 | Stack size: 0
					-->> "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
						-->> "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Father: 13
						<<-- "bool User::Tree<Payload>::find_children(size_t, std::vector<long long unsigned int>&) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Found 0 | 0 children
					<<-- "size_t User::Tree<Payload>::iterator<T>::next() [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 14 | Index: 13
					-->> "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Parent tree: 00000000006af5c0 | Begin: 0 | Index: 0
					<<-- "bool User::Tree<Payload>::iterator<T>::init(User::Tree<Payload>&, bool, size_t) [with T = User::Tree<User::Equation_parser::_Token>::Node; Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" | Count nodes: 14 | Stack size: 0
				<<-- "bool User::Tree<Payload>::show(size_t) [with Payload = User::Equation_parser::_Token; size_t = long long unsigned int]" |
			<<-- "bool User::Equation_parser::parse(std::__cxx11::string)" | Token array size: 7 | Token tree size: 14
			TOKEN0
			TOKEN1
			TOKEN2
			TOKEN3
			TOKEN4
			TOKEN5
			TOKEN6
		<<-- "int unit_test_parse_token_array()" | Failed test patterns: 5
		-->> "User::Equation_parser::~Equation_parser()" | This: 00000000006afa60
		<<-- "User::Equation_parser::~Equation_parser()" |
		-->> "User::Tree<Payload>::~Tree() [with Payload = User::Equation_parser::_Token]" | This: 00000000006afa80
		<<-- "User::Tree<Payload>::~Tree() [with Payload = User::Equation_parser::_Token]" |
		Failed test patterns: 5
	<<-- "bool test_bench()" |
<<-- "int main()" |

Debug has Ended!
